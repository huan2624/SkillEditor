/* This file is generated by tdr. */
/* No manual modification is permitted. */

/* metalib version: 1 */
/* metalib md5sum: 18051f1fb33a7826c90582ba0ba88dc1 */

/* creation time: Fri May 09 16:26:43 2014 */
/* tdr version: 2.6.7, build at 20131230 */


using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;
using tsf4g_tdr_csharp;
using ProtoBuf;
using CS;
using protocol;

namespace net
{
    /*public class DGPkgHead
    {
        public UInt16 Version { get; set; }
        public UInt16 CmdID { get; set; }
        public UInt16 Length { get; set; }
        public UInt16 MsgSeqID { get; set; }

        
        public DGPkgHead()
        {

        }
    }*/



public class DGPKG
{
    private uint m_totalLength;
    private uint m_headerLength;

    private Header m_header;
    private object m_body;

    public uint totalLength { get { return m_totalLength; } set { m_totalLength = value; } }
    public uint headerLength { get { return m_headerLength; } set { m_headerLength = value; } }
    public Header header { get { return m_header; } set { m_header = value; } }
    public object body { get { return m_body; } set { m_body = value; } }

    public DGPKG()
    {
        m_totalLength = 0;
        m_headerLength = 0;
        m_header = null;
        m_body = null;
    }

    public DGPKG doDeserialize(byte[] data)
    {
        System.IO.MemoryStream stream = new System.IO.MemoryStream(data, 0, sizeof(uint) * 2);
        System.IO.BinaryReader binaryReader = new System.IO.BinaryReader(stream);
        m_totalLength = binaryReader.ReadUInt32();
        m_headerLength = binaryReader.ReadUInt32();

        int offset = sizeof(uint) * 2;
        System.IO.MemoryStream streamHeader = new System.IO.MemoryStream(data, offset, (int)m_headerLength);
        m_header = ProtoBuf.Serializer.Deserialize<Header>(streamHeader);
        offset += (int)m_headerLength;

        System.IO.MemoryStream streamBody = new System.IO.MemoryStream(data, offset, (int)m_totalLength - offset);
        m_body = ProtoBuf.Meta.RuntimeTypeModel.Default.Deserialize(streamBody, null, Type.GetType(m_header.msg_full_name));
        return this;
    }

    public byte[] doSerialize()
    {
        m_header.msg_full_name = m_body.ToString();
        System.IO.MemoryStream stream = new System.IO.MemoryStream();
        stream.Position = sizeof(uint) * 2;
        ProtoBuf.Serializer.Serialize(stream, m_header);

        m_headerLength = (uint)(stream.Length - sizeof(uint) * 2);
        ProtoBuf.Serializer.Serialize(stream, m_body);
        System.IO.BinaryWriter binaryWriter = new System.IO.BinaryWriter(stream);
        stream.Position = 0;
        m_totalLength = (uint)stream.Length;
        binaryWriter.Write(m_totalLength);
        binaryWriter.Write(m_headerLength);
        binaryWriter.Flush();
        return stream.ToArray();
    }
}

    public enum MSG_ENCRYPT_FLAG
    {
        MSG_ENCRYPT_FLAG_NO = 0, // 不加密
        MSG_ENCRYPT_FLAG_YES = 1, // 加密
    }


    public class CSPkgBody
    {
        /* public members */
        public CSReqAccLogin reqAccLogin; // 账号登陆
        public CSResAccLogin resAccLogin; // 账号登陆RES
        public CSReqAccLogout reqAccLogout; // 账号登出
        public CSResAccLogout resAccLogout; // 账号登出RES
        public CSReqCreateRole reqCreateRole; // 请求创建角色
        public CSResCreateRole resCreateRole; // 请求创建角色res
        public RequestShopBuy reqShopBuy; // 商店购买请求
        public ResponseShopBuy resShopBuy; // 商店购买应答RES
        public CSReqPlayerEquip csReqPlayerEquip; // 查询玩家装备信息
        public CSResPlayerEquip csResPlayerEquip; // 响应玩家装备信息
        public CSReqPlayerExtendEquipBag csReqPlayerExtendEquipBag; // 扩展装备包裹
        public CSResPlayerExtendEquipBag csResPlayerExtendEquipBag; // 响应扩展装备包裹
        public CSReqPlayerComposeEquip csReqPlayerComposeEquip; // 装备合成请求
        public CSResPlayerComposeEquip csResPlayerComposeEquip; // 装备合成响应
        public CSReqPlayerEnhanceEquip csReqPlayerEnhanceEquip; // 装备强化请求
        public CSResPlayerEnhanceEquip csResPlayerEnhanceEquip; // 装备强化响应
        public CSReqPlayerSellEquip csReqPlayerSellEquip; // 装备售卖请求
        public CSResPlayerSellEquip csResPlayerSellEquip; // 装备售卖响应
        public CSReqPlayerTakeOnEquip csReqPlayerTakeOnEquip; // 穿戴装备
        public CSResPlayerTakeOnEquip csResPlayerTakeOnEquip; // 穿戴装备响应
        public CSMailSendReq mailSendReq; // 发送邮件请求
        public CSMailSendRes mailSendRes; // 发送邮件响应
        public CSMailDelReq mailDelReq; // 删除邮件请求
        public CSMailDelRes mailDelRes; // 删除邮件的应答
        public CSMailGetListReq mailGetListReq; // 获取邮件列表
        public CSMailGetListRes mailGetListRes; // 获取邮件列表的响应
        public CSMailGetDetailReq mailGetDetailReq; // 获取邮件详细信息
        public CSMailGetDetailRes mailGetDetailRes; // 获取邮件详细信息应答
        public CSMailSetStatusReq mailSetStatusReq; // 设置邮件状态
        public CSMailSetStatusRes mailSetStatusRes; // 设置邮件状态的应答
        public CSMailGetCountReq mailGetCountReq; // 获取邮件总数
        public CSMailGetCountRes mailGetCountRes; // 获取邮件总数的应答
        public CSMailGetAccessoryReq mailGetAccessoryReq; // 获取邮件附件
        public CSMailGetAccessoryRes mailGetAccessoryRes; // 获取邮件附件的响应
        public CSGetFriendRankReq getFriendRankReq; // 获取某页排行
        public CSGetFriendRankRes getFriendRankRes; // 获取某页排行
        //public CSNotifyDelFriendRank notifyDelFriendRank; // 删除排行榜里的好友
        //public CSNotifyChgFriendRank notifyChgFriendRank; // 排行榜里的好友数据有变化
        public CSGetFriendListReq getFriendListReq; // 获取好友列表
        public CSGetFriendListRes getFriendListRes; // 返回好友列表
        public CSFriendApplyListReq friendApplyListReq; // 拉取已邀请列表请求
        public CSFriendApplyListRes friendApplyListRes; // 拉取已邀请列表返回
        public CSFriendWaitAcceptListReq friendWaitAcceptListReq; // 拉取等待接受列表请求
        public CSFriendWaitAcceptListRes friendWaitAcceptListRes; // 拉取等待接受列表返回
        public CSFriendDeleteInviteReq friendDeleteInviteReq; // 删除邀请列表中一条记录
        public CSFriendDeleteInviteRes friendDeleteInviteRes; // 删除邀请列表中一条返回
        public CSFriendDeleteWaitAcceptReq friendDeleteWaitAcceptReq; // 删除等待邀请列表中一条记录
        public CSFriendDeleteWaitAcceptRes friendDeleteWaitAcceptRes; // 删除等待邀请列表中一条返回
        public CSSearchFriendReq searchFriendReq; // 查找好友，通过昵称加好友时使用
        public CSSearchFriendRes searchFriendRes; // 查找好友，通过昵称加好友时返回
        public CSAddFriendReq addFriendReq; // 请求加好友
        public CSAddFriendRes addFriendRes; // 请求加好友返回
        public CSAcceptFriendReq acceptFriendReq; // 同意加好友
        public CSAcceptFriendRes acceptFriendRes; // 同意加好友返回
        public CSDeleteFriendReq deleteFriendReq; // 请求删除好友
        public CSDeleteFriendRes deleteFriendRes; // 请求删除好友返回
        public CSSendHeartReq sendHearReq; // 请求送心
        public CSSendHeartRes sendHearRes; // 请求送心返回
        public CSVisitFriendReq visitFriendReq; // 请求访问好友
        public CSVisitFriendRes visitFriendRes; // 请求访问好友返回
        public CSConjureFriendReq conjureFriendReq; // 请求召唤好友
        public CSConjureFriendRes conjureFriendRes; // 请求召唤好友返回
        public ReqGameProgressInfo reqGameProgressInfo; // 查询关卡进度
        public ResGameProgressInfo resGameProgressInfo; // 响应关卡进度
        public ReqBattleStart reqBattleStart; // 请求开始挑战
        public ResBattleStart resBattleStart; // 响应开始挑战
        public ReqBattleEnd reqBattleEnd; // 请求关卡结束结算
        public ResBattleEnd resBattleEnd; // 响应关卡结束结算
        public ReqBattleLottery reqBattleLottery; // 请求再抽一次
        public ResBattleLottery resBattleLottery; // 响应再抽一次
        public ReqRevive reqRevive; // 请求复活
        public ResRevive resRevive; // 响应复活
        public ReqBuyRandomBuff reqBuyRandomBuff; // 请求购买随机高级BUFF
        public ResBuyRandomBuff resBuyRandomBuff; // 应答购买高级随机BUFF
        public ReqQuerryBoss reqQuerryBoss;
        public ResQuerryBoss resQuerryBoss;
        public ReqQuerryFriendBoss reqQuerryFriendBoss;
        public ResQuerryFriendBoss resQuerryFriendBoss;
        public ReqChallengeFriendBoss reqChallengeFriendBoss;
        public ResChallengeFriendBoss resChallengeFriendBoss;
        public ReqSettleBoss reqSettleBoss;
        public ResSettleBoss resSettleBoss;
        public ReqSettleFriendBoss reqSettleFriendBoss;
        public ResSettleFriendBoss resSettleFriendBoss;
        public ReqBossGameRevive reqBossGameRevive;
        public ResBossGameRevive resBossGameRevive;
        public ReqBossHelp reqBossHelp;
        public ResBossHelp resBossHelp;
        public GetChallengeInfoReq getChallengeInfoReq; // 查询挑战相关信息
        public GetChallengeInfoRes getChallengeInfoRes; // 响应查询挑战相关信息
        public BeginChallengeReq beginChallengeReq; // 请求开始挑战
        public BeginChallengeRes beginChallengeRes; // 响应开始挑战
        public ChallengeSettlementReq challengeSettlementReq; // 请求名将挑战结算
        public ChallengeSettlementRes challengeSettlementRes; // 响应名将挑战结算
        public ChallengeRenewTimesReq challengeRenewTimesReq; // 请求快速恢复挑战次数
        public ChallengeRenewTimesRes challengeRenewTimesRes; // 响应快速恢复挑战次数
        public ChallengeReviveReq challengeReviveReq; // 请求复活
        public ChallengeReviveRes challengeReviveRes; // 响应复活
        //public ChallengeOpFailedNotify challengeOpFailedNotify; // 名将挑战操作失败通知
        public CSGetTaskListReq CSGetTaskListReq;
        public CSGetTaskListRes CSGetTaskListRes;
        public CSExecGm CSExecGm; // 请求执行GM命令
        public CSDisplayGmMsg CSDisplayGmMsg; // 显示gm执行后的文本结果
        public PetStrengthenReq petStrengthenReq; // 宠物强化请求
        public PetCompositeReq petCompositeReq; // 宠物合成请求
        public PetUpgradeReq petUpgradeReq; // 宠物升级请求
        public PetChangePosReq petChangePosReq; // 宠物变更位置请求
        public PetExtendBagReq petExtendBagReq; // 付费扩展宠物包裹请求
        public PetSellReq petSellReq; // 出售宠物请求
        public PetGetListReq petGetListReq; // 获取宠物列表请求
        public PetGetManualReq petGetManualReq; // 获取宠物图鉴信息
        public PetStrengthenRes petStrengthenRes; // 宠物强化响应
        public PetCompositeRes petCompositeRes; // 宠物合成响应
        public PetUpgradeRes petUpgradeRes; // 宠物升级响应
        public PetChangePosRes petChangePosRes; // 宠物变更位置响应
        public PetExtendBagRes petExtendBagRes; // 付费扩展宠物包裹响应
        public PetSellRes petSellRes; // 出售宠物响应
        public PetGetListRes petGetListRes; // 获取宠物列表响应
        //public PetOpFailedNotify petOpFailedNotify; // 宠物操作失败通知
        public PetGetManualRes petGetManualRes; // 获取宠物图鉴信息响应
        public CSBuyRoleReq csBuyRoleReq; // 购买新角色的请求
        public CSBuyRoleRes csBuyRoleRes; // 购买新角色的响应
        public CSBuyRoleLevelReq csBuyRoleLevelReq; // 主角随机升级的请求
        public CSBuyRoleLevelRes csBuyRoleLevelRes; // 主角随机升级的响应
        public CSRoleEnhanceReq csRoleEnhanceReq; // 主角强化的请求
        public CSRoleEnhanceRes csRoleEnhanceRes; // 主角强化的响应
        public CSRoleStarUpReq csRoleStarUpReq; // 主角升星的请求
        public CSRoleStarUpRes csRoleStarUpRes; // 主角升星的响应
        public CSChgOnPlayRoleReq csChgOnplayRoleReq; // 修改出战主角的请求
        public CSChgOnPlayRoleRes csChgOnplayRoleRes; // 修改出战主角的响应
        public CSGetRoleListReq csGetRoleListReq; // 拉取角色列表请求
        public CSGetRoleListRes csGetRoleListres; // 拉取角色列表响应
        public CSRoleAddEquipReq csRoleAddEquipReq; // 主角增加装备的请求
        public CSRoleAddEquipRes csRoleAddEquipRes; // 主角增加装备的响应
        public CSGetNoticeReq getNoticeReq; // 请求拉取公告信息
        public CSGetNoticeRes getNoticeRes; // 拉取公告的响应消息
        public CSNoticePlayNotify noticePlayNotify; // 公告已经播放的通知包
        public CSGetChatMsgReq GetChatMsgReq; // 获指定类型聊天消息请求
        public CSGetChatMsgRes GetChatMsgRes; // 获取指定类型聊天消息应答
        public CSSendChatMsgReq SendChatMsgReq; // 发送聊天消息请求
        public CSSendChatMsgRes SendChatMsgRes; // 发送聊天消息应答
        public CSCloseChatUIReq CloseChatUIReq; // 关闭聊天界面通知请求
        public CSCloseChatUIRes CloseChatUIRes; // 关闭聊天界面通知应答
        public CSRelayChatMsgNotify RelayChatMsgNotify; // 服务端转发聊天消息到客户端（notify）

        /* public methods */
        public CSPkgBody()
        {
            reqAccLogin = null;
            resAccLogin = null;
            reqAccLogout = null;
            resAccLogout = null;
            reqCreateRole = null;
            resCreateRole = null;
            reqShopBuy = null;
            resShopBuy = null;
            csReqPlayerEquip = null;
            csResPlayerEquip = null;
            csReqPlayerExtendEquipBag = null;
            csResPlayerExtendEquipBag = null;
            csReqPlayerComposeEquip = null;
            csResPlayerComposeEquip = null;
            csReqPlayerEnhanceEquip = null;
            csResPlayerEnhanceEquip = null;
            csReqPlayerSellEquip = null;
            csResPlayerSellEquip = null;
            csReqPlayerTakeOnEquip = null;
            csResPlayerTakeOnEquip = null;
            mailSendReq = null;
            mailSendRes = null;
            mailDelReq = null;
            mailDelRes = null;
            mailGetListReq = null;
            mailGetListRes = null;
            mailGetDetailReq = null;
            mailGetDetailRes = null;
            mailSetStatusReq = null;
            mailSetStatusRes = null;
            mailGetCountReq = null;
            mailGetCountRes = null;
            mailGetAccessoryReq = null;
            mailGetAccessoryRes = null;
            getFriendRankReq = null;
            getFriendRankRes = null;
            //notifyDelFriendRank = null;
            //notifyChgFriendRank = null;
            getFriendListReq = null;
            getFriendListRes = null;
            friendApplyListReq = null;
            friendApplyListRes = null;
            friendWaitAcceptListReq = null;
            friendWaitAcceptListRes = null;
            friendDeleteInviteReq = null;
            friendDeleteInviteRes = null;
            friendDeleteWaitAcceptReq = null;
            friendDeleteWaitAcceptRes = null;
            searchFriendReq = null;
            searchFriendRes = null;
            addFriendReq = null;
            addFriendRes = null;
            acceptFriendReq = null;
            acceptFriendRes = null;
            deleteFriendReq = null;
            deleteFriendRes = null;
            sendHearReq = null;
            sendHearRes = null;
            visitFriendReq = null;
            visitFriendRes = null;
            conjureFriendReq = null;
            conjureFriendRes = null;
            reqGameProgressInfo = null;
            resGameProgressInfo = null;
            reqBattleStart = null;
            resBattleStart = null;
            reqBattleEnd = null;
            resBattleEnd = null;
            reqBattleLottery = null;
            resBattleLottery = null;
            reqRevive = null;
            resRevive = null;
            reqBuyRandomBuff = null;
            resBuyRandomBuff = null;
            reqQuerryBoss = null;
            resQuerryBoss = null;
            reqQuerryFriendBoss = null;
            resQuerryFriendBoss = null;
            reqChallengeFriendBoss = null;
            resChallengeFriendBoss = null;
            reqSettleBoss = null;
            resSettleBoss = null;
            reqSettleFriendBoss = null;
            resSettleFriendBoss = null;
            reqBossGameRevive = null;
            resBossGameRevive = null;
            reqBossHelp = null;
            resBossHelp = null;
            getChallengeInfoReq = null;
            getChallengeInfoRes = null;
            beginChallengeReq = null;
            beginChallengeRes = null;
            challengeSettlementReq = null;
            challengeSettlementRes = null;
            challengeRenewTimesReq = null;
            challengeRenewTimesRes = null;
            challengeReviveReq = null;
            challengeReviveRes = null;
            //challengeOpFailedNotify = null;
            CSGetTaskListReq = null;
            CSGetTaskListRes = null;
            CSExecGm = null;
            CSDisplayGmMsg = null;
            petStrengthenReq = null;
            petCompositeReq = null;
            petUpgradeReq = null;
            petChangePosReq = null;
            petExtendBagReq = null;
            petSellReq = null;
            petGetListReq = null;
            petGetManualReq = null;
            petStrengthenRes = null;
            petCompositeRes = null;
            petUpgradeRes = null;
            petChangePosRes = null;
            petExtendBagRes = null;
            petSellRes = null;
            petGetListRes = null;
            //petOpFailedNotify = null;
            petGetManualRes = null;
            csBuyRoleReq = null;
            csBuyRoleRes = null;
            csBuyRoleLevelReq = null;
            csBuyRoleLevelRes = null;
            csRoleEnhanceReq = null;
            csRoleEnhanceRes = null;
            csRoleStarUpReq = null;
            csRoleStarUpRes = null;
            csChgOnplayRoleReq = null;
            csChgOnplayRoleRes = null;
            csGetRoleListReq = null;
            csGetRoleListres = null;
            csRoleAddEquipReq = null;
            csRoleAddEquipRes = null;
            getNoticeReq = null;
            getNoticeRes = null;
            noticePlayNotify = null;
            GetChatMsgReq = null;
            GetChatMsgRes = null;
            SendChatMsgReq = null;
            SendChatMsgRes = null;
            CloseChatUIReq = null;
            CloseChatUIRes = null;
            RelayChatMsgNotify = null;
        }

        /*   Construct function */
        public TdrError.ErrorType construct(Int64 selector)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            if (11 == selector)
            {
                if (null == this.reqAccLogin)
                {
                    this.reqAccLogin = new CSReqAccLogin();
                }

                ret = this.reqAccLogin.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (12 == selector)
            {
                if (null == this.resAccLogin)
                {
                    this.resAccLogin = new CSResAccLogin();
                }

                ret = this.resAccLogin.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (13 == selector)
            {
                if (null == this.reqAccLogout)
                {
                    this.reqAccLogout = new CSReqAccLogout();
                }

                ret = this.reqAccLogout.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (14 == selector)
            {
                if (null == this.resAccLogout)
                {
                    this.resAccLogout = new CSResAccLogout();
                }

                ret = this.resAccLogout.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (15 == selector)
            {
                if (null == this.reqCreateRole)
                {
                    this.reqCreateRole = new CSReqCreateRole();
                }

                ret = this.reqCreateRole.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (16 == selector)
            {
                if (null == this.resCreateRole)
                {
                    this.resCreateRole = new CSResCreateRole();
                }

                ret = this.resCreateRole.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (81 == selector)
            {
                if (null == this.reqShopBuy)
                {
                    this.reqShopBuy = new RequestShopBuy();
                }

                ret = this.reqShopBuy.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (82 == selector)
            {
                if (null == this.resShopBuy)
                {
                    this.resShopBuy = new ResponseShopBuy();
                }

                ret = this.resShopBuy.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (100 == selector)
            {
                if (null == this.csReqPlayerEquip)
                {
                    this.csReqPlayerEquip = new CSReqPlayerEquip();
                }

                ret = this.csReqPlayerEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (101 == selector)
            {
                if (null == this.csResPlayerEquip)
                {
                    this.csResPlayerEquip = new CSResPlayerEquip();
                }

                ret = this.csResPlayerEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (102 == selector)
            {
                if (null == this.csReqPlayerExtendEquipBag)
                {
                    this.csReqPlayerExtendEquipBag = new CSReqPlayerExtendEquipBag();
                }

                ret = this.csReqPlayerExtendEquipBag.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (103 == selector)
            {
                if (null == this.csResPlayerExtendEquipBag)
                {
                    this.csResPlayerExtendEquipBag = new CSResPlayerExtendEquipBag();
                }

                ret = this.csResPlayerExtendEquipBag.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (104 == selector)
            {
                if (null == this.csReqPlayerComposeEquip)
                {
                    this.csReqPlayerComposeEquip = new CSReqPlayerComposeEquip();
                }

                ret = this.csReqPlayerComposeEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (105 == selector)
            {
                if (null == this.csResPlayerComposeEquip)
                {
                    this.csResPlayerComposeEquip = new CSResPlayerComposeEquip();
                }

                ret = this.csResPlayerComposeEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (106 == selector)
            {
                if (null == this.csReqPlayerEnhanceEquip)
                {
                    this.csReqPlayerEnhanceEquip = new CSReqPlayerEnhanceEquip();
                }

                ret = this.csReqPlayerEnhanceEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (107 == selector)
            {
                if (null == this.csResPlayerEnhanceEquip)
                {
                    this.csResPlayerEnhanceEquip = new CSResPlayerEnhanceEquip();
                }

                ret = this.csResPlayerEnhanceEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (108 == selector)
            {
                if (null == this.csReqPlayerSellEquip)
                {
                    this.csReqPlayerSellEquip = new CSReqPlayerSellEquip();
                }

                ret = this.csReqPlayerSellEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (109 == selector)
            {
                if (null == this.csResPlayerSellEquip)
                {
                    this.csResPlayerSellEquip = new CSResPlayerSellEquip();
                }

                ret = this.csResPlayerSellEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (110 == selector)
            {
                if (null == this.csReqPlayerTakeOnEquip)
                {
                    this.csReqPlayerTakeOnEquip = new CSReqPlayerTakeOnEquip();
                }

                ret = this.csReqPlayerTakeOnEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (111 == selector)
            {
                if (null == this.csResPlayerTakeOnEquip)
                {
                    this.csResPlayerTakeOnEquip = new CSResPlayerTakeOnEquip();
                }

                ret = this.csResPlayerTakeOnEquip.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (300 == selector)
            {
                if (null == this.mailSendReq)
                {
                    this.mailSendReq = new CSMailSendReq();
                }

                ret = this.mailSendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (301 == selector)
            {
                if (null == this.mailSendRes)
                {
                    this.mailSendRes = new CSMailSendRes();
                }

                ret = this.mailSendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (302 == selector)
            {
                if (null == this.mailDelReq)
                {
                    this.mailDelReq = new CSMailDelReq();
                }

                ret = this.mailDelReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (303 == selector)
            {
                if (null == this.mailDelRes)
                {
                    this.mailDelRes = new CSMailDelRes();
                }

                ret = this.mailDelRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (304 == selector)
            {
                if (null == this.mailGetListReq)
                {
                    this.mailGetListReq = new CSMailGetListReq();
                }

                ret = this.mailGetListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (305 == selector)
            {
                if (null == this.mailGetListRes)
                {
                    this.mailGetListRes = new CSMailGetListRes();
                }

                ret = this.mailGetListRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (306 == selector)
            {
                if (null == this.mailGetDetailReq)
                {
                    this.mailGetDetailReq = new CSMailGetDetailReq();
                }

                ret = this.mailGetDetailReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (307 == selector)
            {
                if (null == this.mailGetDetailRes)
                {
                    this.mailGetDetailRes = new CSMailGetDetailRes();
                }

                ret = this.mailGetDetailRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (308 == selector)
            {
                if (null == this.mailSetStatusReq)
                {
                    this.mailSetStatusReq = new CSMailSetStatusReq();
                }

                ret = this.mailSetStatusReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (309 == selector)
            {
                if (null == this.mailSetStatusRes)
                {
                    this.mailSetStatusRes = new CSMailSetStatusRes();
                }

                ret = this.mailSetStatusRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (310 == selector)
            {
                if (null == this.mailGetCountReq)
                {
                    this.mailGetCountReq = new CSMailGetCountReq();
                }

                ret = this.mailGetCountReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (311 == selector)
            {
                if (null == this.mailGetCountRes)
                {
                    this.mailGetCountRes = new CSMailGetCountRes();
                }

                ret = this.mailGetCountRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (312 == selector)
            {
                if (null == this.mailGetAccessoryReq)
                {
                    this.mailGetAccessoryReq = new CSMailGetAccessoryReq();
                }

                ret = this.mailGetAccessoryReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (313 == selector)
            {
                if (null == this.mailGetAccessoryRes)
                {
                    this.mailGetAccessoryRes = new CSMailGetAccessoryRes();
                }

                ret = this.mailGetAccessoryRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (401 == selector)
            {
                if (null == this.getFriendRankReq)
                {
                    this.getFriendRankReq = new CSGetFriendRankReq();
                }

                ret = this.getFriendRankReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (402 == selector)
            {
                if (null == this.getFriendRankRes)
                {
                    this.getFriendRankRes = new CSGetFriendRankRes();
                }

                ret = this.getFriendRankRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (403 == selector)
            {
                //if (null == this.notifyDelFriendRank)
                //{
                //    this.notifyDelFriendRank = new CSNotifyDelFriendRank();
                //}

                //ret = this.notifyDelFriendRank.construct();
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (404 == selector)
            {
                //if (null == this.notifyChgFriendRank)
                //{
                //    this.notifyChgFriendRank = new CSNotifyChgFriendRank();
                //}

                //ret = this.notifyChgFriendRank.construct();
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (450 == selector)
            {
                if (null == this.getFriendListReq)
                {
                    this.getFriendListReq = new CSGetFriendListReq();
                }

                ret = this.getFriendListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (451 == selector)
            {
                if (null == this.getFriendListRes)
                {
                    this.getFriendListRes = new CSGetFriendListRes();
                }

                ret = this.getFriendListRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (452 == selector)
            {
                if (null == this.friendApplyListReq)
                {
                    this.friendApplyListReq = new CSFriendApplyListReq();
                }

                ret = this.friendApplyListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (453 == selector)
            {
                if (null == this.friendApplyListRes)
                {
                    this.friendApplyListRes = new CSFriendApplyListRes();
                }

                ret = this.friendApplyListRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (454 == selector)
            {
                if (null == this.friendWaitAcceptListReq)
                {
                    this.friendWaitAcceptListReq = new CSFriendWaitAcceptListReq();
                }

                ret = this.friendWaitAcceptListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (455 == selector)
            {
                if (null == this.friendWaitAcceptListRes)
                {
                    this.friendWaitAcceptListRes = new CSFriendWaitAcceptListRes();
                }

                ret = this.friendWaitAcceptListRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (456 == selector)
            {
                if (null == this.friendDeleteInviteReq)
                {
                    this.friendDeleteInviteReq = new CSFriendDeleteInviteReq();
                }

                ret = this.friendDeleteInviteReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (457 == selector)
            {
                if (null == this.friendDeleteInviteRes)
                {
                    this.friendDeleteInviteRes = new CSFriendDeleteInviteRes();
                }

                ret = this.friendDeleteInviteRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (458 == selector)
            {
                if (null == this.friendDeleteWaitAcceptReq)
                {
                    this.friendDeleteWaitAcceptReq = new CSFriendDeleteWaitAcceptReq();
                }

                ret = this.friendDeleteWaitAcceptReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (459 == selector)
            {
                if (null == this.friendDeleteWaitAcceptRes)
                {
                    this.friendDeleteWaitAcceptRes = new CSFriendDeleteWaitAcceptRes();
                }

                ret = this.friendDeleteWaitAcceptRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (460 == selector)
            {
                if (null == this.searchFriendReq)
                {
                    this.searchFriendReq = new CSSearchFriendReq();
                }

                ret = this.searchFriendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (461 == selector)
            {
                if (null == this.searchFriendRes)
                {
                    this.searchFriendRes = new CSSearchFriendRes();
                }

                ret = this.searchFriendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (462 == selector)
            {
                if (null == this.addFriendReq)
                {
                    this.addFriendReq = new CSAddFriendReq();
                }

                ret = this.addFriendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (463 == selector)
            {
                if (null == this.addFriendRes)
                {
                    this.addFriendRes = new CSAddFriendRes();
                }

                ret = this.addFriendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (464 == selector)
            {
                if (null == this.acceptFriendReq)
                {
                    this.acceptFriendReq = new CSAcceptFriendReq();
                }

                ret = this.acceptFriendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (465 == selector)
            {
                if (null == this.acceptFriendRes)
                {
                    this.acceptFriendRes = new CSAcceptFriendRes();
                }

                ret = this.acceptFriendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (466 == selector)
            {
                if (null == this.deleteFriendReq)
                {
                    this.deleteFriendReq = new CSDeleteFriendReq();
                }

                ret = this.deleteFriendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (467 == selector)
            {
                if (null == this.deleteFriendRes)
                {
                    this.deleteFriendRes = new CSDeleteFriendRes();
                }

                ret = this.deleteFriendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (468 == selector)
            {
                if (null == this.sendHearReq)
                {
                    this.sendHearReq = new CSSendHeartReq();
                }

                ret = this.sendHearReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (469 == selector)
            {
                if (null == this.sendHearRes)
                {
                    this.sendHearRes = new CSSendHeartRes();
                }

                ret = this.sendHearRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (470 == selector)
            {
                if (null == this.visitFriendReq)
                {
                    this.visitFriendReq = new CSVisitFriendReq();
                }

                ret = this.visitFriendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (471 == selector)
            {
                if (null == this.visitFriendRes)
                {
                    this.visitFriendRes = new CSVisitFriendRes();
                }

                ret = this.visitFriendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (472 == selector)
            {
                if (null == this.conjureFriendReq)
                {
                    this.conjureFriendReq = new CSConjureFriendReq();
                }

                ret = this.conjureFriendReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (473 == selector)
            {
                if (null == this.conjureFriendRes)
                {
                    this.conjureFriendRes = new CSConjureFriendRes();
                }

                ret = this.conjureFriendRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (500 == selector)
            {
                if (null == this.reqGameProgressInfo)
                {
                    this.reqGameProgressInfo = new ReqGameProgressInfo();
                }

                ret = this.reqGameProgressInfo.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (501 == selector)
            {
                if (null == this.resGameProgressInfo)
                {
                    this.resGameProgressInfo = new ResGameProgressInfo();
                }

                ret = this.resGameProgressInfo.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (502 == selector)
            {
                if (null == this.reqBattleStart)
                {
                    this.reqBattleStart = new ReqBattleStart();
                }

                ret = this.reqBattleStart.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (503 == selector)
            {
                if (null == this.resBattleStart)
                {
                    this.resBattleStart = new ResBattleStart();
                }

                ret = this.resBattleStart.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (504 == selector)
            {
                if (null == this.reqBattleEnd)
                {
                    this.reqBattleEnd = new ReqBattleEnd();
                }

                ret = this.reqBattleEnd.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (505 == selector)
            {
                if (null == this.resBattleEnd)
                {
                    this.resBattleEnd = new ResBattleEnd();
                }

                ret = this.resBattleEnd.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (506 == selector)
            {
                if (null == this.reqBattleLottery)
                {
                    this.reqBattleLottery = new ReqBattleLottery();
                }

                ret = this.reqBattleLottery.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (507 == selector)
            {
                if (null == this.resBattleLottery)
                {
                    this.resBattleLottery = new ResBattleLottery();
                }

                ret = this.resBattleLottery.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (508 == selector)
            {
                if (null == this.reqRevive)
                {
                    this.reqRevive = new ReqRevive();
                }

                ret = this.reqRevive.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (509 == selector)
            {
                if (null == this.resRevive)
                {
                    this.resRevive = new ResRevive();
                }

                ret = this.resRevive.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (510 == selector)
            {
                if (null == this.reqBuyRandomBuff)
                {
                    this.reqBuyRandomBuff = new ReqBuyRandomBuff();
                }

                ret = this.reqBuyRandomBuff.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (511 == selector)
            {
                if (null == this.resBuyRandomBuff)
                {
                    this.resBuyRandomBuff = new ResBuyRandomBuff();
                }

                ret = this.resBuyRandomBuff.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (514 == selector)
            {
                if (null == this.reqQuerryBoss)
                {
                    this.reqQuerryBoss = new ReqQuerryBoss();
                }

                ret = this.reqQuerryBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (515 == selector)
            {
                if (null == this.resQuerryBoss)
                {
                    this.resQuerryBoss = new ResQuerryBoss();
                }

                ret = this.resQuerryBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (516 == selector)
            {
                if (null == this.reqQuerryFriendBoss)
                {
                    this.reqQuerryFriendBoss = new ReqQuerryFriendBoss();
                }

                ret = this.reqQuerryFriendBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (517 == selector)
            {
                if (null == this.resQuerryFriendBoss)
                {
                    this.resQuerryFriendBoss = new ResQuerryFriendBoss();
                }

                ret = this.resQuerryFriendBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (520 == selector)
            {
                if (null == this.reqChallengeFriendBoss)
                {
                    this.reqChallengeFriendBoss = new ReqChallengeFriendBoss();
                }

                ret = this.reqChallengeFriendBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (521 == selector)
            {
                if (null == this.resChallengeFriendBoss)
                {
                    this.resChallengeFriendBoss = new ResChallengeFriendBoss();
                }

                ret = this.resChallengeFriendBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (522 == selector)
            {
                if (null == this.reqSettleBoss)
                {
                    this.reqSettleBoss = new ReqSettleBoss();
                }

                ret = this.reqSettleBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (523 == selector)
            {
                if (null == this.resSettleBoss)
                {
                    this.resSettleBoss = new ResSettleBoss();
                }

                ret = this.resSettleBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (524 == selector)
            {
                if (null == this.reqSettleFriendBoss)
                {
                    this.reqSettleFriendBoss = new ReqSettleFriendBoss();
                }

                ret = this.reqSettleFriendBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (525 == selector)
            {
                if (null == this.resSettleFriendBoss)
                {
                    this.resSettleFriendBoss = new ResSettleFriendBoss();
                }

                ret = this.resSettleFriendBoss.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (526 == selector)
            {
                if (null == this.reqBossGameRevive)
                {
                    this.reqBossGameRevive = new ReqBossGameRevive();
                }

                ret = this.reqBossGameRevive.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (527 == selector)
            {
                if (null == this.resBossGameRevive)
                {
                    this.resBossGameRevive = new ResBossGameRevive();
                }

                ret = this.resBossGameRevive.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (528 == selector)
            {
                if (null == this.reqBossHelp)
                {
                    this.reqBossHelp = new ReqBossHelp();
                }

                ret = this.reqBossHelp.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (529 == selector)
            {
                if (null == this.resBossHelp)
                {
                    this.resBossHelp = new ResBossHelp();
                }

                ret = this.resBossHelp.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (530 == selector)
            {
                if (null == this.getChallengeInfoReq)
                {
                    this.getChallengeInfoReq = new GetChallengeInfoReq();
                }

                ret = this.getChallengeInfoReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (531 == selector)
            {
                if (null == this.getChallengeInfoRes)
                {
                    this.getChallengeInfoRes = new GetChallengeInfoRes();
                }

                ret = this.getChallengeInfoRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (532 == selector)
            {
                if (null == this.beginChallengeReq)
                {
                    this.beginChallengeReq = new BeginChallengeReq();
                }

                ret = this.beginChallengeReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (533 == selector)
            {
                if (null == this.beginChallengeRes)
                {
                    this.beginChallengeRes = new BeginChallengeRes();
                }

                ret = this.beginChallengeRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (534 == selector)
            {
                if (null == this.challengeSettlementReq)
                {
                    this.challengeSettlementReq = new ChallengeSettlementReq();
                }

                ret = this.challengeSettlementReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (535 == selector)
            {
                if (null == this.challengeSettlementRes)
                {
                    this.challengeSettlementRes = new ChallengeSettlementRes();
                }

                ret = this.challengeSettlementRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (536 == selector)
            {
                if (null == this.challengeRenewTimesReq)
                {
                    this.challengeRenewTimesReq = new ChallengeRenewTimesReq();
                }

                ret = this.challengeRenewTimesReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (537 == selector)
            {
                if (null == this.challengeRenewTimesRes)
                {
                    this.challengeRenewTimesRes = new ChallengeRenewTimesRes();
                }

                ret = this.challengeRenewTimesRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (538 == selector)
            {
                if (null == this.challengeReviveReq)
                {
                    this.challengeReviveReq = new ChallengeReviveReq();
                }

                ret = this.challengeReviveReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (539 == selector)
            {
                if (null == this.challengeReviveRes)
                {
                    this.challengeReviveRes = new ChallengeReviveRes();
                }

                ret = this.challengeReviveRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (540 == selector)
            {
                //if (null == this.challengeOpFailedNotify)
                //{
                //    this.challengeOpFailedNotify = new ChallengeOpFailedNotify();
                //}

                //ret = this.challengeOpFailedNotify.construct();
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (601 == selector)
            {
                if (null == this.CSGetTaskListReq)
                {
                    this.CSGetTaskListReq = new CSGetTaskListReq();
                }

                ret = this.CSGetTaskListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (602 == selector)
            {
                if (null == this.CSGetTaskListRes)
                {
                    this.CSGetTaskListRes = new CSGetTaskListRes();
                }

                ret = this.CSGetTaskListRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (610 == selector)
            {
                if (null == this.CSExecGm)
                {
                    this.CSExecGm = new CSExecGm();
                }

                ret = this.CSExecGm.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (611 == selector)
            {
                if (null == this.CSDisplayGmMsg)
                {
                    this.CSDisplayGmMsg = new CSDisplayGmMsg();
                }

                ret = this.CSDisplayGmMsg.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (701 == selector)
            {
                if (null == this.petStrengthenReq)
                {
                    this.petStrengthenReq = new PetStrengthenReq();
                }

                ret = this.petStrengthenReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (702 == selector)
            {
                if (null == this.petCompositeReq)
                {
                    this.petCompositeReq = new PetCompositeReq();
                }

                ret = this.petCompositeReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (703 == selector)
            {
                if (null == this.petUpgradeReq)
                {
                    this.petUpgradeReq = new PetUpgradeReq();
                }

                ret = this.petUpgradeReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (704 == selector)
            {
                if (null == this.petChangePosReq)
                {
                    this.petChangePosReq = new PetChangePosReq();
                }

                ret = this.petChangePosReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (706 == selector)
            {
                if (null == this.petExtendBagReq)
                {
                    this.petExtendBagReq = new PetExtendBagReq();
                }

                ret = this.petExtendBagReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (707 == selector)
            {
                if (null == this.petSellReq)
                {
                    this.petSellReq = new PetSellReq();
                }

                ret = this.petSellReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (708 == selector)
            {
                if (null == this.petGetListReq)
                {
                    this.petGetListReq = new PetGetListReq();
                }

                ret = this.petGetListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (709 == selector)
            {
                if (null == this.petGetManualReq)
                {
                    this.petGetManualReq = new PetGetManualReq();
                }

                ret = this.petGetManualReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (711 == selector)
            {
                if (null == this.petStrengthenRes)
                {
                    this.petStrengthenRes = new PetStrengthenRes();
                }

                ret = this.petStrengthenRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (712 == selector)
            {
                if (null == this.petCompositeRes)
                {
                    this.petCompositeRes = new PetCompositeRes();
                }

                ret = this.petCompositeRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (713 == selector)
            {
                if (null == this.petUpgradeRes)
                {
                    this.petUpgradeRes = new PetUpgradeRes();
                }

                ret = this.petUpgradeRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (714 == selector)
            {
                if (null == this.petChangePosRes)
                {
                    this.petChangePosRes = new PetChangePosRes();
                }

                ret = this.petChangePosRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (716 == selector)
            {
                if (null == this.petExtendBagRes)
                {
                    this.petExtendBagRes = new PetExtendBagRes();
                }

                ret = this.petExtendBagRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (717 == selector)
            {
                if (null == this.petSellRes)
                {
                    this.petSellRes = new PetSellRes();
                }

                ret = this.petSellRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (718 == selector)
            {
                if (null == this.petGetListRes)
                {
                    this.petGetListRes = new PetGetListRes();
                }

                ret = this.petGetListRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (719 == selector)
            {
                //if (null == this.petOpFailedNotify)
                //{
                //    this.petOpFailedNotify = new PetOpFailedNotify();
                //}

                //ret = this.petOpFailedNotify.construct();
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (720 == selector)
            {
                if (null == this.petGetManualRes)
                {
                    this.petGetManualRes = new PetGetManualRes();
                }

                ret = this.petGetManualRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (800 == selector)
            {
                if (null == this.csBuyRoleReq)
                {
                    this.csBuyRoleReq = new CSBuyRoleReq();
                }

                ret = this.csBuyRoleReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (801 == selector)
            {
                if (null == this.csBuyRoleRes)
                {
                    this.csBuyRoleRes = new CSBuyRoleRes();
                }

                ret = this.csBuyRoleRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (802 == selector)
            {
                if (null == this.csBuyRoleLevelReq)
                {
                    this.csBuyRoleLevelReq = new CSBuyRoleLevelReq();
                }

                ret = this.csBuyRoleLevelReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (803 == selector)
            {
                if (null == this.csBuyRoleLevelRes)
                {
                    this.csBuyRoleLevelRes = new CSBuyRoleLevelRes();
                }

                ret = this.csBuyRoleLevelRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (804 == selector)
            {
                if (null == this.csRoleEnhanceReq)
                {
                    this.csRoleEnhanceReq = new CSRoleEnhanceReq();
                }

                ret = this.csRoleEnhanceReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (805 == selector)
            {
                if (null == this.csRoleEnhanceRes)
                {
                    this.csRoleEnhanceRes = new CSRoleEnhanceRes();
                }

                ret = this.csRoleEnhanceRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (806 == selector)
            {
                if (null == this.csRoleStarUpReq)
                {
                    this.csRoleStarUpReq = new CSRoleStarUpReq();
                }

                ret = this.csRoleStarUpReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (807 == selector)
            {
                if (null == this.csRoleStarUpRes)
                {
                    this.csRoleStarUpRes = new CSRoleStarUpRes();
                }

                ret = this.csRoleStarUpRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (808 == selector)
            {
                if (null == this.csChgOnplayRoleReq)
                {
                    this.csChgOnplayRoleReq = new CSChgOnPlayRoleReq();
                }

                ret = this.csChgOnplayRoleReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (809 == selector)
            {
                if (null == this.csChgOnplayRoleRes)
                {
                    this.csChgOnplayRoleRes = new CSChgOnPlayRoleRes();
                }

                ret = this.csChgOnplayRoleRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (810 == selector)
            {
                if (null == this.csGetRoleListReq)
                {
                    this.csGetRoleListReq = new CSGetRoleListReq();
                }

                ret = this.csGetRoleListReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (811 == selector)
            {
                if (null == this.csGetRoleListres)
                {
                    this.csGetRoleListres = new CSGetRoleListRes();
                }

                ret = this.csGetRoleListres.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (812 == selector)
            {
                if (null == this.csRoleAddEquipReq)
                {
                    this.csRoleAddEquipReq = new CSRoleAddEquipReq();
                }

                ret = this.csRoleAddEquipReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (813 == selector)
            {
                if (null == this.csRoleAddEquipRes)
                {
                    this.csRoleAddEquipRes = new CSRoleAddEquipRes();
                }

                ret = this.csRoleAddEquipRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (901 == selector)
            {
                if (null == this.getNoticeReq)
                {
                    this.getNoticeReq = new CSGetNoticeReq();
                }

                ret = this.getNoticeReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (902 == selector)
            {
                if (null == this.getNoticeRes)
                {
                    this.getNoticeRes = new CSGetNoticeRes();
                }

                ret = this.getNoticeRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (903 == selector)
            {
                if (null == this.noticePlayNotify)
                {
                    this.noticePlayNotify = new CSNoticePlayNotify();
                }

                ret = this.noticePlayNotify.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (951 == selector)
            {
                if (null == this.GetChatMsgReq)
                {
                    this.GetChatMsgReq = new CSGetChatMsgReq();
                }

                ret = this.GetChatMsgReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (952 == selector)
            {
                if (null == this.GetChatMsgRes)
                {
                    this.GetChatMsgRes = new CSGetChatMsgRes();
                }

                ret = this.GetChatMsgRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (953 == selector)
            {
                if (null == this.SendChatMsgReq)
                {
                    this.SendChatMsgReq = new CSSendChatMsgReq();
                }

                ret = this.SendChatMsgReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (954 == selector)
            {
                if (null == this.SendChatMsgRes)
                {
                    this.SendChatMsgRes = new CSSendChatMsgRes();
                }

                ret = this.SendChatMsgRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (955 == selector)
            {
                if (null == this.CloseChatUIReq)
                {
                    this.CloseChatUIReq = new CSCloseChatUIReq();
                }

                ret = this.CloseChatUIReq.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (956 == selector)
            {
                if (null == this.CloseChatUIRes)
                {
                    this.CloseChatUIRes = new CSCloseChatUIRes();
                }

                ret = this.CloseChatUIRes.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (999 == selector)
            {
                if (null == this.RelayChatMsgNotify)
                {
                    this.RelayChatMsgNotify = new CSRelayChatMsgNotify();
                }

                ret = this.RelayChatMsgNotify.construct();
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        /*   pack function */
        public TdrError.ErrorType pack(Int64 selector, ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
            TdrError.ErrorType ret = pack(selector, ref destBuf, cutVer);
            if (ret == TdrError.ErrorType.TDR_NO_ERROR)
            {
                buffer = destBuf.getBeginPtr();

                usedSize = destBuf.getUsedSize();
            }

            return ret;
        }

        public TdrError.ErrorType pack(Int64 selector, ref TdrWriteBuf destBuf, uint cutVer)
        {
            /* adjust cutversion */
            if (0 == cutVer || CSPkgBody.CURRVERSION < cutVer)
            {
                cutVer = CSPkgBody.CURRVERSION;
            }

            /* check cutversion */
            if (CSPkgBody.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            if (11 == selector)
            {
                if (null == this.reqAccLogin)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqAccLogin.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (12 == selector)
            {
                if (null == this.resAccLogin)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resAccLogin.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (13 == selector)
            {
                if (null == this.reqAccLogout)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqAccLogout.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (14 == selector)
            {
                if (null == this.resAccLogout)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resAccLogout.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (15 == selector)
            {
                if (null == this.reqCreateRole)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqCreateRole.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (16 == selector)
            {
                if (null == this.resCreateRole)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resCreateRole.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (81 == selector)
            {
                if (null == this.reqShopBuy)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqShopBuy.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (82 == selector)
            {
                if (null == this.resShopBuy)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resShopBuy.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (100 == selector)
            {
                if (null == this.csReqPlayerEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csReqPlayerEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (101 == selector)
            {
                if (null == this.csResPlayerEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csResPlayerEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (102 == selector)
            {
                if (null == this.csReqPlayerExtendEquipBag)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csReqPlayerExtendEquipBag.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (103 == selector)
            {
                if (null == this.csResPlayerExtendEquipBag)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csResPlayerExtendEquipBag.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (104 == selector)
            {
                if (null == this.csReqPlayerComposeEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csReqPlayerComposeEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (105 == selector)
            {
                if (null == this.csResPlayerComposeEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csResPlayerComposeEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (106 == selector)
            {
                if (null == this.csReqPlayerEnhanceEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csReqPlayerEnhanceEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (107 == selector)
            {
                if (null == this.csResPlayerEnhanceEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csResPlayerEnhanceEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (108 == selector)
            {
                if (null == this.csReqPlayerSellEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csReqPlayerSellEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (109 == selector)
            {
                if (null == this.csResPlayerSellEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csResPlayerSellEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (110 == selector)
            {
                if (null == this.csReqPlayerTakeOnEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csReqPlayerTakeOnEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (111 == selector)
            {
                if (null == this.csResPlayerTakeOnEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csResPlayerTakeOnEquip.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (300 == selector)
            {
                if (null == this.mailSendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailSendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (301 == selector)
            {
                if (null == this.mailSendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailSendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (302 == selector)
            {
                if (null == this.mailDelReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailDelReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (303 == selector)
            {
                if (null == this.mailDelRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailDelRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (304 == selector)
            {
                if (null == this.mailGetListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (305 == selector)
            {
                if (null == this.mailGetListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetListRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (306 == selector)
            {
                if (null == this.mailGetDetailReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetDetailReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (307 == selector)
            {
                if (null == this.mailGetDetailRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetDetailRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (308 == selector)
            {
                if (null == this.mailSetStatusReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailSetStatusReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (309 == selector)
            {
                if (null == this.mailSetStatusRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailSetStatusRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (310 == selector)
            {
                if (null == this.mailGetCountReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetCountReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (311 == selector)
            {
                if (null == this.mailGetCountRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetCountRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (312 == selector)
            {
                if (null == this.mailGetAccessoryReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetAccessoryReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (313 == selector)
            {
                if (null == this.mailGetAccessoryRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.mailGetAccessoryRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (401 == selector)
            {
                if (null == this.getFriendRankReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getFriendRankReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (402 == selector)
            {
                if (null == this.getFriendRankRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getFriendRankRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (403 == selector)
            {
                //if (null == this.notifyDelFriendRank)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = this.notifyDelFriendRank.pack(ref destBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (404 == selector)
            {
                //if (null == this.notifyChgFriendRank)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = this.notifyChgFriendRank.pack(ref destBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (450 == selector)
            {
                if (null == this.getFriendListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getFriendListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (451 == selector)
            {
                if (null == this.getFriendListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getFriendListRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (452 == selector)
            {
                if (null == this.friendApplyListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendApplyListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (453 == selector)
            {
                if (null == this.friendApplyListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendApplyListRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (454 == selector)
            {
                if (null == this.friendWaitAcceptListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendWaitAcceptListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (455 == selector)
            {
                if (null == this.friendWaitAcceptListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendWaitAcceptListRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (456 == selector)
            {
                if (null == this.friendDeleteInviteReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendDeleteInviteReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (457 == selector)
            {
                if (null == this.friendDeleteInviteRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendDeleteInviteRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (458 == selector)
            {
                if (null == this.friendDeleteWaitAcceptReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendDeleteWaitAcceptReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (459 == selector)
            {
                if (null == this.friendDeleteWaitAcceptRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.friendDeleteWaitAcceptRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (460 == selector)
            {
                if (null == this.searchFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.searchFriendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (461 == selector)
            {
                if (null == this.searchFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.searchFriendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (462 == selector)
            {
                if (null == this.addFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.addFriendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (463 == selector)
            {
                if (null == this.addFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.addFriendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (464 == selector)
            {
                if (null == this.acceptFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.acceptFriendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (465 == selector)
            {
                if (null == this.acceptFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.acceptFriendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (466 == selector)
            {
                if (null == this.deleteFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.deleteFriendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (467 == selector)
            {
                if (null == this.deleteFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.deleteFriendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (468 == selector)
            {
                if (null == this.sendHearReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.sendHearReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (469 == selector)
            {
                if (null == this.sendHearRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.sendHearRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (470 == selector)
            {
                if (null == this.visitFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.visitFriendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (471 == selector)
            {
                if (null == this.visitFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.visitFriendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (472 == selector)
            {
                if (null == this.conjureFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.conjureFriendReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (473 == selector)
            {
                if (null == this.conjureFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.conjureFriendRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (500 == selector)
            {
                if (null == this.reqGameProgressInfo)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqGameProgressInfo.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (501 == selector)
            {
                if (null == this.resGameProgressInfo)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resGameProgressInfo.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (502 == selector)
            {
                if (null == this.reqBattleStart)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqBattleStart.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (503 == selector)
            {
                if (null == this.resBattleStart)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resBattleStart.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (504 == selector)
            {
                if (null == this.reqBattleEnd)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqBattleEnd.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (505 == selector)
            {
                if (null == this.resBattleEnd)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resBattleEnd.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (506 == selector)
            {
                if (null == this.reqBattleLottery)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqBattleLottery.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (507 == selector)
            {
                if (null == this.resBattleLottery)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resBattleLottery.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (508 == selector)
            {
                if (null == this.reqRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqRevive.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (509 == selector)
            {
                if (null == this.resRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resRevive.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (510 == selector)
            {
                if (null == this.reqBuyRandomBuff)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqBuyRandomBuff.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (511 == selector)
            {
                if (null == this.resBuyRandomBuff)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resBuyRandomBuff.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (514 == selector)
            {
                if (null == this.reqQuerryBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqQuerryBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (515 == selector)
            {
                if (null == this.resQuerryBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resQuerryBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (516 == selector)
            {
                if (null == this.reqQuerryFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqQuerryFriendBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (517 == selector)
            {
                if (null == this.resQuerryFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resQuerryFriendBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (520 == selector)
            {
                if (null == this.reqChallengeFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqChallengeFriendBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (521 == selector)
            {
                if (null == this.resChallengeFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resChallengeFriendBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (522 == selector)
            {
                if (null == this.reqSettleBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqSettleBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (523 == selector)
            {
                if (null == this.resSettleBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resSettleBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (524 == selector)
            {
                if (null == this.reqSettleFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqSettleFriendBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (525 == selector)
            {
                if (null == this.resSettleFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resSettleFriendBoss.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (526 == selector)
            {
                if (null == this.reqBossGameRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqBossGameRevive.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (527 == selector)
            {
                if (null == this.resBossGameRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resBossGameRevive.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (528 == selector)
            {
                if (null == this.reqBossHelp)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.reqBossHelp.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (529 == selector)
            {
                if (null == this.resBossHelp)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.resBossHelp.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (530 == selector)
            {
                if (null == this.getChallengeInfoReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getChallengeInfoReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (531 == selector)
            {
                if (null == this.getChallengeInfoRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getChallengeInfoRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (532 == selector)
            {
                if (null == this.beginChallengeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.beginChallengeReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (533 == selector)
            {
                if (null == this.beginChallengeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.beginChallengeRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (534 == selector)
            {
                if (null == this.challengeSettlementReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.challengeSettlementReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (535 == selector)
            {
                if (null == this.challengeSettlementRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.challengeSettlementRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (536 == selector)
            {
                if (null == this.challengeRenewTimesReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.challengeRenewTimesReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (537 == selector)
            {
                if (null == this.challengeRenewTimesRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.challengeRenewTimesRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (538 == selector)
            {
                if (null == this.challengeReviveReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.challengeReviveReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (539 == selector)
            {
                if (null == this.challengeReviveRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.challengeReviveRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (540 == selector)
            {
                //if (null == this.challengeOpFailedNotify)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = this.challengeOpFailedNotify.pack(ref destBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (601 == selector)
            {
                if (null == this.CSGetTaskListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.CSGetTaskListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (602 == selector)
            {
                if (null == this.CSGetTaskListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.CSGetTaskListRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (610 == selector)
            {
                if (null == this.CSExecGm)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.CSExecGm.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (611 == selector)
            {
                if (null == this.CSDisplayGmMsg)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.CSDisplayGmMsg.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (701 == selector)
            {
                if (null == this.petStrengthenReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petStrengthenReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (702 == selector)
            {
                if (null == this.petCompositeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petCompositeReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (703 == selector)
            {
                if (null == this.petUpgradeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petUpgradeReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (704 == selector)
            {
                if (null == this.petChangePosReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petChangePosReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (706 == selector)
            {
                if (null == this.petExtendBagReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petExtendBagReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (707 == selector)
            {
                if (null == this.petSellReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petSellReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (708 == selector)
            {
                if (null == this.petGetListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petGetListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (709 == selector)
            {
                if (null == this.petGetManualReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petGetManualReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (711 == selector)
            {
                if (null == this.petStrengthenRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petStrengthenRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (712 == selector)
            {
                if (null == this.petCompositeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petCompositeRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (713 == selector)
            {
                if (null == this.petUpgradeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petUpgradeRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (714 == selector)
            {
                if (null == this.petChangePosRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petChangePosRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (716 == selector)
            {
                if (null == this.petExtendBagRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petExtendBagRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (717 == selector)
            {
                if (null == this.petSellRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petSellRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (718 == selector)
            {
                if (null == this.petGetListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petGetListRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (719 == selector)
            {
                //if (null == this.petOpFailedNotify)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = this.petOpFailedNotify.pack(ref destBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (720 == selector)
            {
                if (null == this.petGetManualRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.petGetManualRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (800 == selector)
            {
                if (null == this.csBuyRoleReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csBuyRoleReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (801 == selector)
            {
                if (null == this.csBuyRoleRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csBuyRoleRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (802 == selector)
            {
                if (null == this.csBuyRoleLevelReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csBuyRoleLevelReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (803 == selector)
            {
                if (null == this.csBuyRoleLevelRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csBuyRoleLevelRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (804 == selector)
            {
                if (null == this.csRoleEnhanceReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csRoleEnhanceReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (805 == selector)
            {
                if (null == this.csRoleEnhanceRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csRoleEnhanceRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (806 == selector)
            {
                if (null == this.csRoleStarUpReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csRoleStarUpReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (807 == selector)
            {
                if (null == this.csRoleStarUpRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csRoleStarUpRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (808 == selector)
            {
                if (null == this.csChgOnplayRoleReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csChgOnplayRoleReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (809 == selector)
            {
                if (null == this.csChgOnplayRoleRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csChgOnplayRoleRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (810 == selector)
            {
                if (null == this.csGetRoleListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csGetRoleListReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (811 == selector)
            {
                if (null == this.csGetRoleListres)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csGetRoleListres.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (812 == selector)
            {
                if (null == this.csRoleAddEquipReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csRoleAddEquipReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (813 == selector)
            {
                if (null == this.csRoleAddEquipRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.csRoleAddEquipRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (901 == selector)
            {
                if (null == this.getNoticeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getNoticeReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (902 == selector)
            {
                if (null == this.getNoticeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.getNoticeRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (903 == selector)
            {
                if (null == this.noticePlayNotify)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.noticePlayNotify.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (951 == selector)
            {
                if (null == this.GetChatMsgReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.GetChatMsgReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (952 == selector)
            {
                if (null == this.GetChatMsgRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.GetChatMsgRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (953 == selector)
            {
                if (null == this.SendChatMsgReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.SendChatMsgReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (954 == selector)
            {
                if (null == this.SendChatMsgRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.SendChatMsgRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (955 == selector)
            {
                if (null == this.CloseChatUIReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.CloseChatUIReq.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (956 == selector)
            {
                if (null == this.CloseChatUIRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.CloseChatUIRes.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (999 == selector)
            {
                if (null == this.RelayChatMsgNotify)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = this.RelayChatMsgNotify.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        public TdrError.ErrorType unpack(Int64 selector, ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = unpack(selector, ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        /*   unpack function */
        public TdrError.ErrorType unpack(Int64 selector, ref TdrReadBuf srcBuf, uint cutVer)
        {
            /* adjust cutversion */
            if (0 == cutVer || CSPkgBody.CURRVERSION < cutVer)
            {
                cutVer = CSPkgBody.CURRVERSION;
            }

            /* check cutversion */
            if (CSPkgBody.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            if (11 == selector)
            {
                if (null == this.reqAccLogin)
                {
                    this.reqAccLogin = new CSReqAccLogin();
                }

                ret = this.reqAccLogin.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (12 == selector)
            {
                if (null == this.resAccLogin)
                {
                    this.resAccLogin = new CSResAccLogin();
                }

                ret = this.resAccLogin.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (13 == selector)
            {
                if (null == this.reqAccLogout)
                {
                    this.reqAccLogout = new CSReqAccLogout();
                }

                ret = this.reqAccLogout.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (14 == selector)
            {
                if (null == this.resAccLogout)
                {
                    this.resAccLogout = new CSResAccLogout();
                }

                ret = this.resAccLogout.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (15 == selector)
            {
                if (null == this.reqCreateRole)
                {
                    this.reqCreateRole = new CSReqCreateRole();
                }

                ret = this.reqCreateRole.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (16 == selector)
            {
                if (null == this.resCreateRole)
                {
                    this.resCreateRole = new CSResCreateRole();
                }

                ret = this.resCreateRole.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (81 == selector)
            {
                if (null == this.reqShopBuy)
                {
                    this.reqShopBuy = new RequestShopBuy();
                }

                ret = this.reqShopBuy.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (82 == selector)
            {
                if (null == this.resShopBuy)
                {
                    this.resShopBuy = new ResponseShopBuy();
                }

                ret = this.resShopBuy.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (100 == selector)
            {
                if (null == this.csReqPlayerEquip)
                {
                    this.csReqPlayerEquip = new CSReqPlayerEquip();
                }

                ret = this.csReqPlayerEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (101 == selector)
            {
                if (null == this.csResPlayerEquip)
                {
                    this.csResPlayerEquip = new CSResPlayerEquip();
                }

                ret = this.csResPlayerEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (102 == selector)
            {
                if (null == this.csReqPlayerExtendEquipBag)
                {
                    this.csReqPlayerExtendEquipBag = new CSReqPlayerExtendEquipBag();
                }

                ret = this.csReqPlayerExtendEquipBag.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (103 == selector)
            {
                if (null == this.csResPlayerExtendEquipBag)
                {
                    this.csResPlayerExtendEquipBag = new CSResPlayerExtendEquipBag();
                }

                ret = this.csResPlayerExtendEquipBag.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (104 == selector)
            {
                if (null == this.csReqPlayerComposeEquip)
                {
                    this.csReqPlayerComposeEquip = new CSReqPlayerComposeEquip();
                }

                ret = this.csReqPlayerComposeEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (105 == selector)
            {
                if (null == this.csResPlayerComposeEquip)
                {
                    this.csResPlayerComposeEquip = new CSResPlayerComposeEquip();
                }

                ret = this.csResPlayerComposeEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (106 == selector)
            {
                if (null == this.csReqPlayerEnhanceEquip)
                {
                    this.csReqPlayerEnhanceEquip = new CSReqPlayerEnhanceEquip();
                }

                ret = this.csReqPlayerEnhanceEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (107 == selector)
            {
                if (null == this.csResPlayerEnhanceEquip)
                {
                    this.csResPlayerEnhanceEquip = new CSResPlayerEnhanceEquip();
                }

                ret = this.csResPlayerEnhanceEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (108 == selector)
            {
                if (null == this.csReqPlayerSellEquip)
                {
                    this.csReqPlayerSellEquip = new CSReqPlayerSellEquip();
                }

                ret = this.csReqPlayerSellEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (109 == selector)
            {
                if (null == this.csResPlayerSellEquip)
                {
                    this.csResPlayerSellEquip = new CSResPlayerSellEquip();
                }

                ret = this.csResPlayerSellEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (110 == selector)
            {
                if (null == this.csReqPlayerTakeOnEquip)
                {
                    this.csReqPlayerTakeOnEquip = new CSReqPlayerTakeOnEquip();
                }

                ret = this.csReqPlayerTakeOnEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (111 == selector)
            {
                if (null == this.csResPlayerTakeOnEquip)
                {
                    this.csResPlayerTakeOnEquip = new CSResPlayerTakeOnEquip();
                }

                ret = this.csResPlayerTakeOnEquip.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (300 == selector)
            {
                if (null == this.mailSendReq)
                {
                    this.mailSendReq = new CSMailSendReq();
                }

                ret = this.mailSendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (301 == selector)
            {
                if (null == this.mailSendRes)
                {
                    this.mailSendRes = new CSMailSendRes();
                }

                ret = this.mailSendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (302 == selector)
            {
                if (null == this.mailDelReq)
                {
                    this.mailDelReq = new CSMailDelReq();
                }

                ret = this.mailDelReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (303 == selector)
            {
                if (null == this.mailDelRes)
                {
                    this.mailDelRes = new CSMailDelRes();
                }

                ret = this.mailDelRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (304 == selector)
            {
                if (null == this.mailGetListReq)
                {
                    this.mailGetListReq = new CSMailGetListReq();
                }

                ret = this.mailGetListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (305 == selector)
            {
                if (null == this.mailGetListRes)
                {
                    this.mailGetListRes = new CSMailGetListRes();
                }

                ret = this.mailGetListRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (306 == selector)
            {
                if (null == this.mailGetDetailReq)
                {
                    this.mailGetDetailReq = new CSMailGetDetailReq();
                }

                ret = this.mailGetDetailReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (307 == selector)
            {
                if (null == this.mailGetDetailRes)
                {
                    this.mailGetDetailRes = new CSMailGetDetailRes();
                }

                ret = this.mailGetDetailRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (308 == selector)
            {
                if (null == this.mailSetStatusReq)
                {
                    this.mailSetStatusReq = new CSMailSetStatusReq();
                }

                ret = this.mailSetStatusReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (309 == selector)
            {
                if (null == this.mailSetStatusRes)
                {
                    this.mailSetStatusRes = new CSMailSetStatusRes();
                }

                ret = this.mailSetStatusRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (310 == selector)
            {
                if (null == this.mailGetCountReq)
                {
                    this.mailGetCountReq = new CSMailGetCountReq();
                }

                ret = this.mailGetCountReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (311 == selector)
            {
                if (null == this.mailGetCountRes)
                {
                    this.mailGetCountRes = new CSMailGetCountRes();
                }

                ret = this.mailGetCountRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (312 == selector)
            {
                if (null == this.mailGetAccessoryReq)
                {
                    this.mailGetAccessoryReq = new CSMailGetAccessoryReq();
                }

                ret = this.mailGetAccessoryReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (313 == selector)
            {
                if (null == this.mailGetAccessoryRes)
                {
                    this.mailGetAccessoryRes = new CSMailGetAccessoryRes();
                }

                ret = this.mailGetAccessoryRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (401 == selector)
            {
                if (null == this.getFriendRankReq)
                {
                    this.getFriendRankReq = new CSGetFriendRankReq();
                }

                ret = this.getFriendRankReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (402 == selector)
            {
                if (null == this.getFriendRankRes)
                {
                    this.getFriendRankRes = new CSGetFriendRankRes();
                }

                ret = this.getFriendRankRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (403 == selector)
            {
                //if (null == this.notifyDelFriendRank)
                //{
                //    this.notifyDelFriendRank = new CSNotifyDelFriendRank();
                //}

                //ret = this.notifyDelFriendRank.unpack(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (404 == selector)
            {
                //if (null == this.notifyChgFriendRank)
                //{
                //    this.notifyChgFriendRank = new CSNotifyChgFriendRank();
                //}

                //ret = this.notifyChgFriendRank.unpack(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (450 == selector)
            {
                if (null == this.getFriendListReq)
                {
                    this.getFriendListReq = new CSGetFriendListReq();
                }

                ret = this.getFriendListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (451 == selector)
            {
                if (null == this.getFriendListRes)
                {
                    this.getFriendListRes = new CSGetFriendListRes();
                }

                ret = this.getFriendListRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (452 == selector)
            {
                if (null == this.friendApplyListReq)
                {
                    this.friendApplyListReq = new CSFriendApplyListReq();
                }

                ret = this.friendApplyListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (453 == selector)
            {
                if (null == this.friendApplyListRes)
                {
                    this.friendApplyListRes = new CSFriendApplyListRes();
                }

                ret = this.friendApplyListRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (454 == selector)
            {
                if (null == this.friendWaitAcceptListReq)
                {
                    this.friendWaitAcceptListReq = new CSFriendWaitAcceptListReq();
                }

                ret = this.friendWaitAcceptListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (455 == selector)
            {
                if (null == this.friendWaitAcceptListRes)
                {
                    this.friendWaitAcceptListRes = new CSFriendWaitAcceptListRes();
                }

                ret = this.friendWaitAcceptListRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (456 == selector)
            {
                if (null == this.friendDeleteInviteReq)
                {
                    this.friendDeleteInviteReq = new CSFriendDeleteInviteReq();
                }

                ret = this.friendDeleteInviteReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (457 == selector)
            {
                if (null == this.friendDeleteInviteRes)
                {
                    this.friendDeleteInviteRes = new CSFriendDeleteInviteRes();
                }

                ret = this.friendDeleteInviteRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (458 == selector)
            {
                if (null == this.friendDeleteWaitAcceptReq)
                {
                    this.friendDeleteWaitAcceptReq = new CSFriendDeleteWaitAcceptReq();
                }

                ret = this.friendDeleteWaitAcceptReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (459 == selector)
            {
                if (null == this.friendDeleteWaitAcceptRes)
                {
                    this.friendDeleteWaitAcceptRes = new CSFriendDeleteWaitAcceptRes();
                }

                ret = this.friendDeleteWaitAcceptRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (460 == selector)
            {
                if (null == this.searchFriendReq)
                {
                    this.searchFriendReq = new CSSearchFriendReq();
                }

                ret = this.searchFriendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (461 == selector)
            {
                if (null == this.searchFriendRes)
                {
                    this.searchFriendRes = new CSSearchFriendRes();
                }

                ret = this.searchFriendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (462 == selector)
            {
                if (null == this.addFriendReq)
                {
                    this.addFriendReq = new CSAddFriendReq();
                }

                ret = this.addFriendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (463 == selector)
            {
                if (null == this.addFriendRes)
                {
                    this.addFriendRes = new CSAddFriendRes();
                }

                ret = this.addFriendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (464 == selector)
            {
                if (null == this.acceptFriendReq)
                {
                    this.acceptFriendReq = new CSAcceptFriendReq();
                }

                ret = this.acceptFriendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (465 == selector)
            {
                if (null == this.acceptFriendRes)
                {
                    this.acceptFriendRes = new CSAcceptFriendRes();
                }

                ret = this.acceptFriendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (466 == selector)
            {
                if (null == this.deleteFriendReq)
                {
                    this.deleteFriendReq = new CSDeleteFriendReq();
                }

                ret = this.deleteFriendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (467 == selector)
            {
                if (null == this.deleteFriendRes)
                {
                    this.deleteFriendRes = new CSDeleteFriendRes();
                }

                ret = this.deleteFriendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (468 == selector)
            {
                if (null == this.sendHearReq)
                {
                    this.sendHearReq = new CSSendHeartReq();
                }

                ret = this.sendHearReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (469 == selector)
            {
                if (null == this.sendHearRes)
                {
                    this.sendHearRes = new CSSendHeartRes();
                }

                ret = this.sendHearRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (470 == selector)
            {
                if (null == this.visitFriendReq)
                {
                    this.visitFriendReq = new CSVisitFriendReq();
                }

                ret = this.visitFriendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (471 == selector)
            {
                if (null == this.visitFriendRes)
                {
                    this.visitFriendRes = new CSVisitFriendRes();
                }

                ret = this.visitFriendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (472 == selector)
            {
                if (null == this.conjureFriendReq)
                {
                    this.conjureFriendReq = new CSConjureFriendReq();
                }

                ret = this.conjureFriendReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (473 == selector)
            {
                if (null == this.conjureFriendRes)
                {
                    this.conjureFriendRes = new CSConjureFriendRes();
                }

                ret = this.conjureFriendRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (500 == selector)
            {
                if (null == this.reqGameProgressInfo)
                {
                    this.reqGameProgressInfo = new ReqGameProgressInfo();
                }

                ret = this.reqGameProgressInfo.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (501 == selector)
            {
                if (null == this.resGameProgressInfo)
                {
                    this.resGameProgressInfo = new ResGameProgressInfo();
                }

                ret = this.resGameProgressInfo.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (502 == selector)
            {
                if (null == this.reqBattleStart)
                {
                    this.reqBattleStart = new ReqBattleStart();
                }

                ret = this.reqBattleStart.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (503 == selector)
            {
                if (null == this.resBattleStart)
                {
                    this.resBattleStart = new ResBattleStart();
                }

                ret = this.resBattleStart.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (504 == selector)
            {
                if (null == this.reqBattleEnd)
                {
                    this.reqBattleEnd = new ReqBattleEnd();
                }

                ret = this.reqBattleEnd.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (505 == selector)
            {
                if (null == this.resBattleEnd)
                {
                    this.resBattleEnd = new ResBattleEnd();
                }

                ret = this.resBattleEnd.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (506 == selector)
            {
                if (null == this.reqBattleLottery)
                {
                    this.reqBattleLottery = new ReqBattleLottery();
                }

                ret = this.reqBattleLottery.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (507 == selector)
            {
                if (null == this.resBattleLottery)
                {
                    this.resBattleLottery = new ResBattleLottery();
                }

                ret = this.resBattleLottery.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (508 == selector)
            {
                if (null == this.reqRevive)
                {
                    this.reqRevive = new ReqRevive();
                }

                ret = this.reqRevive.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (509 == selector)
            {
                if (null == this.resRevive)
                {
                    this.resRevive = new ResRevive();
                }

                ret = this.resRevive.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (510 == selector)
            {
                if (null == this.reqBuyRandomBuff)
                {
                    this.reqBuyRandomBuff = new ReqBuyRandomBuff();
                }

                ret = this.reqBuyRandomBuff.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (511 == selector)
            {
                if (null == this.resBuyRandomBuff)
                {
                    this.resBuyRandomBuff = new ResBuyRandomBuff();
                }

                ret = this.resBuyRandomBuff.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (514 == selector)
            {
                if (null == this.reqQuerryBoss)
                {
                    this.reqQuerryBoss = new ReqQuerryBoss();
                }

                ret = this.reqQuerryBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (515 == selector)
            {
                if (null == this.resQuerryBoss)
                {
                    this.resQuerryBoss = new ResQuerryBoss();
                }

                ret = this.resQuerryBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (516 == selector)
            {
                if (null == this.reqQuerryFriendBoss)
                {
                    this.reqQuerryFriendBoss = new ReqQuerryFriendBoss();
                }

                ret = this.reqQuerryFriendBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (517 == selector)
            {
                if (null == this.resQuerryFriendBoss)
                {
                    this.resQuerryFriendBoss = new ResQuerryFriendBoss();
                }

                ret = this.resQuerryFriendBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (520 == selector)
            {
                if (null == this.reqChallengeFriendBoss)
                {
                    this.reqChallengeFriendBoss = new ReqChallengeFriendBoss();
                }

                ret = this.reqChallengeFriendBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (521 == selector)
            {
                if (null == this.resChallengeFriendBoss)
                {
                    this.resChallengeFriendBoss = new ResChallengeFriendBoss();
                }

                ret = this.resChallengeFriendBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (522 == selector)
            {
                if (null == this.reqSettleBoss)
                {
                    this.reqSettleBoss = new ReqSettleBoss();
                }

                ret = this.reqSettleBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (523 == selector)
            {
                if (null == this.resSettleBoss)
                {
                    this.resSettleBoss = new ResSettleBoss();
                }

                ret = this.resSettleBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (524 == selector)
            {
                if (null == this.reqSettleFriendBoss)
                {
                    this.reqSettleFriendBoss = new ReqSettleFriendBoss();
                }

                ret = this.reqSettleFriendBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (525 == selector)
            {
                if (null == this.resSettleFriendBoss)
                {
                    this.resSettleFriendBoss = new ResSettleFriendBoss();
                }

                ret = this.resSettleFriendBoss.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (526 == selector)
            {
                if (null == this.reqBossGameRevive)
                {
                    this.reqBossGameRevive = new ReqBossGameRevive();
                }

                ret = this.reqBossGameRevive.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (527 == selector)
            {
                if (null == this.resBossGameRevive)
                {
                    this.resBossGameRevive = new ResBossGameRevive();
                }

                ret = this.resBossGameRevive.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (528 == selector)
            {
                if (null == this.reqBossHelp)
                {
                    this.reqBossHelp = new ReqBossHelp();
                }

                ret = this.reqBossHelp.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (529 == selector)
            {
                if (null == this.resBossHelp)
                {
                    this.resBossHelp = new ResBossHelp();
                }

                ret = this.resBossHelp.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (530 == selector)
            {
                if (null == this.getChallengeInfoReq)
                {
                    this.getChallengeInfoReq = new GetChallengeInfoReq();
                }

                ret = this.getChallengeInfoReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (531 == selector)
            {
                if (null == this.getChallengeInfoRes)
                {
                    this.getChallengeInfoRes = new GetChallengeInfoRes();
                }

                ret = this.getChallengeInfoRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (532 == selector)
            {
                if (null == this.beginChallengeReq)
                {
                    this.beginChallengeReq = new BeginChallengeReq();
                }

                ret = this.beginChallengeReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (533 == selector)
            {
                if (null == this.beginChallengeRes)
                {
                    this.beginChallengeRes = new BeginChallengeRes();
                }

                ret = this.beginChallengeRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (534 == selector)
            {
                if (null == this.challengeSettlementReq)
                {
                    this.challengeSettlementReq = new ChallengeSettlementReq();
                }

                ret = this.challengeSettlementReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (535 == selector)
            {
                if (null == this.challengeSettlementRes)
                {
                    this.challengeSettlementRes = new ChallengeSettlementRes();
                }

                ret = this.challengeSettlementRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (536 == selector)
            {
                if (null == this.challengeRenewTimesReq)
                {
                    this.challengeRenewTimesReq = new ChallengeRenewTimesReq();
                }

                ret = this.challengeRenewTimesReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (537 == selector)
            {
                if (null == this.challengeRenewTimesRes)
                {
                    this.challengeRenewTimesRes = new ChallengeRenewTimesRes();
                }

                ret = this.challengeRenewTimesRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (538 == selector)
            {
                if (null == this.challengeReviveReq)
                {
                    this.challengeReviveReq = new ChallengeReviveReq();
                }

                ret = this.challengeReviveReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (539 == selector)
            {
                if (null == this.challengeReviveRes)
                {
                    this.challengeReviveRes = new ChallengeReviveRes();
                }

                ret = this.challengeReviveRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (540 == selector)
            {
                //if (null == this.challengeOpFailedNotify)
                //{
                //    this.challengeOpFailedNotify = new ChallengeOpFailedNotify();
                //}

                //ret = this.challengeOpFailedNotify.unpack(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (601 == selector)
            {
                if (null == this.CSGetTaskListReq)
                {
                    this.CSGetTaskListReq = new CSGetTaskListReq();
                }

                ret = this.CSGetTaskListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (602 == selector)
            {
                if (null == this.CSGetTaskListRes)
                {
                    this.CSGetTaskListRes = new CSGetTaskListRes();
                }

                ret = this.CSGetTaskListRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (610 == selector)
            {
                if (null == this.CSExecGm)
                {
                    this.CSExecGm = new CSExecGm();
                }

                ret = this.CSExecGm.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (611 == selector)
            {
                if (null == this.CSDisplayGmMsg)
                {
                    this.CSDisplayGmMsg = new CSDisplayGmMsg();
                }

                ret = this.CSDisplayGmMsg.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (701 == selector)
            {
                if (null == this.petStrengthenReq)
                {
                    this.petStrengthenReq = new PetStrengthenReq();
                }

                ret = this.petStrengthenReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (702 == selector)
            {
                if (null == this.petCompositeReq)
                {
                    this.petCompositeReq = new PetCompositeReq();
                }

                ret = this.petCompositeReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (703 == selector)
            {
                if (null == this.petUpgradeReq)
                {
                    this.petUpgradeReq = new PetUpgradeReq();
                }

                ret = this.petUpgradeReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (704 == selector)
            {
                if (null == this.petChangePosReq)
                {
                    this.petChangePosReq = new PetChangePosReq();
                }

                ret = this.petChangePosReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (706 == selector)
            {
                if (null == this.petExtendBagReq)
                {
                    this.petExtendBagReq = new PetExtendBagReq();
                }

                ret = this.petExtendBagReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (707 == selector)
            {
                if (null == this.petSellReq)
                {
                    this.petSellReq = new PetSellReq();
                }

                ret = this.petSellReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (708 == selector)
            {
                if (null == this.petGetListReq)
                {
                    this.petGetListReq = new PetGetListReq();
                }

                ret = this.petGetListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (709 == selector)
            {
                if (null == this.petGetManualReq)
                {
                    this.petGetManualReq = new PetGetManualReq();
                }

                ret = this.petGetManualReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (711 == selector)
            {
                if (null == this.petStrengthenRes)
                {
                    this.petStrengthenRes = new PetStrengthenRes();
                }

                ret = this.petStrengthenRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (712 == selector)
            {
                if (null == this.petCompositeRes)
                {
                    this.petCompositeRes = new PetCompositeRes();
                }

                ret = this.petCompositeRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (713 == selector)
            {
                if (null == this.petUpgradeRes)
                {
                    this.petUpgradeRes = new PetUpgradeRes();
                }

                ret = this.petUpgradeRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (714 == selector)
            {
                if (null == this.petChangePosRes)
                {
                    this.petChangePosRes = new PetChangePosRes();
                }

                ret = this.petChangePosRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (716 == selector)
            {
                if (null == this.petExtendBagRes)
                {
                    this.petExtendBagRes = new PetExtendBagRes();
                }

                ret = this.petExtendBagRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (717 == selector)
            {
                if (null == this.petSellRes)
                {
                    this.petSellRes = new PetSellRes();
                }

                ret = this.petSellRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (718 == selector)
            {
                if (null == this.petGetListRes)
                {
                    this.petGetListRes = new PetGetListRes();
                }

                ret = this.petGetListRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (719 == selector)
            {
                //if (null == this.petOpFailedNotify)
                //{
                //    this.petOpFailedNotify = new PetOpFailedNotify();
                //}

                //ret = this.petOpFailedNotify.unpack(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (720 == selector)
            {
                if (null == this.petGetManualRes)
                {
                    this.petGetManualRes = new PetGetManualRes();
                }

                ret = this.petGetManualRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (800 == selector)
            {
                if (null == this.csBuyRoleReq)
                {
                    this.csBuyRoleReq = new CSBuyRoleReq();
                }

                ret = this.csBuyRoleReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (801 == selector)
            {
                if (null == this.csBuyRoleRes)
                {
                    this.csBuyRoleRes = new CSBuyRoleRes();
                }

                ret = this.csBuyRoleRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (802 == selector)
            {
                if (null == this.csBuyRoleLevelReq)
                {
                    this.csBuyRoleLevelReq = new CSBuyRoleLevelReq();
                }

                ret = this.csBuyRoleLevelReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (803 == selector)
            {
                if (null == this.csBuyRoleLevelRes)
                {
                    this.csBuyRoleLevelRes = new CSBuyRoleLevelRes();
                }

                ret = this.csBuyRoleLevelRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (804 == selector)
            {
                if (null == this.csRoleEnhanceReq)
                {
                    this.csRoleEnhanceReq = new CSRoleEnhanceReq();
                }

                ret = this.csRoleEnhanceReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (805 == selector)
            {
                if (null == this.csRoleEnhanceRes)
                {
                    this.csRoleEnhanceRes = new CSRoleEnhanceRes();
                }

                ret = this.csRoleEnhanceRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (806 == selector)
            {
                if (null == this.csRoleStarUpReq)
                {
                    this.csRoleStarUpReq = new CSRoleStarUpReq();
                }

                ret = this.csRoleStarUpReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (807 == selector)
            {
                if (null == this.csRoleStarUpRes)
                {
                    this.csRoleStarUpRes = new CSRoleStarUpRes();
                }

                ret = this.csRoleStarUpRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (808 == selector)
            {
                if (null == this.csChgOnplayRoleReq)
                {
                    this.csChgOnplayRoleReq = new CSChgOnPlayRoleReq();
                }

                ret = this.csChgOnplayRoleReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (809 == selector)
            {
                if (null == this.csChgOnplayRoleRes)
                {
                    this.csChgOnplayRoleRes = new CSChgOnPlayRoleRes();
                }

                ret = this.csChgOnplayRoleRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (810 == selector)
            {
                if (null == this.csGetRoleListReq)
                {
                    this.csGetRoleListReq = new CSGetRoleListReq();
                }

                ret = this.csGetRoleListReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (811 == selector)
            {
                if (null == this.csGetRoleListres)
                {
                    this.csGetRoleListres = new CSGetRoleListRes();
                }

                ret = this.csGetRoleListres.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (812 == selector)
            {
                if (null == this.csRoleAddEquipReq)
                {
                    this.csRoleAddEquipReq = new CSRoleAddEquipReq();
                }

                ret = this.csRoleAddEquipReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (813 == selector)
            {
                if (null == this.csRoleAddEquipRes)
                {
                    this.csRoleAddEquipRes = new CSRoleAddEquipRes();
                }

                ret = this.csRoleAddEquipRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (901 == selector)
            {
                if (null == this.getNoticeReq)
                {
                    this.getNoticeReq = new CSGetNoticeReq();
                }

                ret = this.getNoticeReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (902 == selector)
            {
                if (null == this.getNoticeRes)
                {
                    this.getNoticeRes = new CSGetNoticeRes();
                }

                ret = this.getNoticeRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (903 == selector)
            {
                if (null == this.noticePlayNotify)
                {
                    this.noticePlayNotify = new CSNoticePlayNotify();
                }

                ret = this.noticePlayNotify.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (951 == selector)
            {
                if (null == this.GetChatMsgReq)
                {
                    this.GetChatMsgReq = new CSGetChatMsgReq();
                }

                ret = this.GetChatMsgReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (952 == selector)
            {
                if (null == this.GetChatMsgRes)
                {
                    this.GetChatMsgRes = new CSGetChatMsgRes();
                }

                ret = this.GetChatMsgRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (953 == selector)
            {
                if (null == this.SendChatMsgReq)
                {
                    this.SendChatMsgReq = new CSSendChatMsgReq();
                }

                ret = this.SendChatMsgReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (954 == selector)
            {
                if (null == this.SendChatMsgRes)
                {
                    this.SendChatMsgRes = new CSSendChatMsgRes();
                }

                ret = this.SendChatMsgRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (955 == selector)
            {
                if (null == this.CloseChatUIReq)
                {
                    this.CloseChatUIReq = new CSCloseChatUIReq();
                }

                ret = this.CloseChatUIReq.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (956 == selector)
            {
                if (null == this.CloseChatUIRes)
                {
                    this.CloseChatUIRes = new CSCloseChatUIRes();
                }

                ret = this.CloseChatUIRes.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (999 == selector)
            {
                if (null == this.RelayChatMsgNotify)
                {
                    this.RelayChatMsgNotify = new CSRelayChatMsgNotify();
                }

                ret = this.RelayChatMsgNotify.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        public TdrError.ErrorType load(Int64 selector, ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = load(selector, ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        /*   load function */
        public TdrError.ErrorType load(Int64 selector, ref TdrReadBuf srcBuf, uint cutVer)
        {
            srcBuf.disableEndian();
            /* adjust cutversion */
            if (0 == cutVer || CSPkgBody.CURRVERSION < cutVer)
            {
                cutVer = CSPkgBody.CURRVERSION;
            }

            /* check cutversion */
            if (CSPkgBody.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            if (11 == selector)
            {
                if (null == this.reqAccLogin)
                {
                    this.reqAccLogin = new CSReqAccLogin();
                }

                ret = this.reqAccLogin.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (12 == selector)
            {
                if (null == this.resAccLogin)
                {
                    this.resAccLogin = new CSResAccLogin();
                }

                ret = this.resAccLogin.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (13 == selector)
            {
                if (null == this.reqAccLogout)
                {
                    this.reqAccLogout = new CSReqAccLogout();
                }

                ret = this.reqAccLogout.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (14 == selector)
            {
                if (null == this.resAccLogout)
                {
                    this.resAccLogout = new CSResAccLogout();
                }

                ret = this.resAccLogout.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (15 == selector)
            {
                if (null == this.reqCreateRole)
                {
                    this.reqCreateRole = new CSReqCreateRole();
                }

                ret = this.reqCreateRole.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (16 == selector)
            {
                if (null == this.resCreateRole)
                {
                    this.resCreateRole = new CSResCreateRole();
                }

                ret = this.resCreateRole.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (81 == selector)
            {
                if (null == this.reqShopBuy)
                {
                    this.reqShopBuy = new RequestShopBuy();
                }

                ret = this.reqShopBuy.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (82 == selector)
            {
                if (null == this.resShopBuy)
                {
                    this.resShopBuy = new ResponseShopBuy();
                }

                ret = this.resShopBuy.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (100 == selector)
            {
                if (null == this.csReqPlayerEquip)
                {
                    this.csReqPlayerEquip = new CSReqPlayerEquip();
                }

                ret = this.csReqPlayerEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (101 == selector)
            {
                if (null == this.csResPlayerEquip)
                {
                    this.csResPlayerEquip = new CSResPlayerEquip();
                }

                ret = this.csResPlayerEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (102 == selector)
            {
                if (null == this.csReqPlayerExtendEquipBag)
                {
                    this.csReqPlayerExtendEquipBag = new CSReqPlayerExtendEquipBag();
                }

                ret = this.csReqPlayerExtendEquipBag.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (103 == selector)
            {
                if (null == this.csResPlayerExtendEquipBag)
                {
                    this.csResPlayerExtendEquipBag = new CSResPlayerExtendEquipBag();
                }

                ret = this.csResPlayerExtendEquipBag.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (104 == selector)
            {
                if (null == this.csReqPlayerComposeEquip)
                {
                    this.csReqPlayerComposeEquip = new CSReqPlayerComposeEquip();
                }

                ret = this.csReqPlayerComposeEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (105 == selector)
            {
                if (null == this.csResPlayerComposeEquip)
                {
                    this.csResPlayerComposeEquip = new CSResPlayerComposeEquip();
                }

                ret = this.csResPlayerComposeEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (106 == selector)
            {
                if (null == this.csReqPlayerEnhanceEquip)
                {
                    this.csReqPlayerEnhanceEquip = new CSReqPlayerEnhanceEquip();
                }

                ret = this.csReqPlayerEnhanceEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (107 == selector)
            {
                if (null == this.csResPlayerEnhanceEquip)
                {
                    this.csResPlayerEnhanceEquip = new CSResPlayerEnhanceEquip();
                }

                ret = this.csResPlayerEnhanceEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (108 == selector)
            {
                if (null == this.csReqPlayerSellEquip)
                {
                    this.csReqPlayerSellEquip = new CSReqPlayerSellEquip();
                }

                ret = this.csReqPlayerSellEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (109 == selector)
            {
                if (null == this.csResPlayerSellEquip)
                {
                    this.csResPlayerSellEquip = new CSResPlayerSellEquip();
                }

                ret = this.csResPlayerSellEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (110 == selector)
            {
                if (null == this.csReqPlayerTakeOnEquip)
                {
                    this.csReqPlayerTakeOnEquip = new CSReqPlayerTakeOnEquip();
                }

                ret = this.csReqPlayerTakeOnEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (111 == selector)
            {
                if (null == this.csResPlayerTakeOnEquip)
                {
                    this.csResPlayerTakeOnEquip = new CSResPlayerTakeOnEquip();
                }

                ret = this.csResPlayerTakeOnEquip.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (300 == selector)
            {
                if (null == this.mailSendReq)
                {
                    this.mailSendReq = new CSMailSendReq();
                }

                ret = this.mailSendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (301 == selector)
            {
                if (null == this.mailSendRes)
                {
                    this.mailSendRes = new CSMailSendRes();
                }

                ret = this.mailSendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (302 == selector)
            {
                if (null == this.mailDelReq)
                {
                    this.mailDelReq = new CSMailDelReq();
                }

                ret = this.mailDelReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (303 == selector)
            {
                if (null == this.mailDelRes)
                {
                    this.mailDelRes = new CSMailDelRes();
                }

                ret = this.mailDelRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (304 == selector)
            {
                if (null == this.mailGetListReq)
                {
                    this.mailGetListReq = new CSMailGetListReq();
                }

                ret = this.mailGetListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (305 == selector)
            {
                if (null == this.mailGetListRes)
                {
                    this.mailGetListRes = new CSMailGetListRes();
                }

                ret = this.mailGetListRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (306 == selector)
            {
                if (null == this.mailGetDetailReq)
                {
                    this.mailGetDetailReq = new CSMailGetDetailReq();
                }

                ret = this.mailGetDetailReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (307 == selector)
            {
                if (null == this.mailGetDetailRes)
                {
                    this.mailGetDetailRes = new CSMailGetDetailRes();
                }

                ret = this.mailGetDetailRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (308 == selector)
            {
                if (null == this.mailSetStatusReq)
                {
                    this.mailSetStatusReq = new CSMailSetStatusReq();
                }

                ret = this.mailSetStatusReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (309 == selector)
            {
                if (null == this.mailSetStatusRes)
                {
                    this.mailSetStatusRes = new CSMailSetStatusRes();
                }

                ret = this.mailSetStatusRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (310 == selector)
            {
                if (null == this.mailGetCountReq)
                {
                    this.mailGetCountReq = new CSMailGetCountReq();
                }

                ret = this.mailGetCountReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (311 == selector)
            {
                if (null == this.mailGetCountRes)
                {
                    this.mailGetCountRes = new CSMailGetCountRes();
                }

                ret = this.mailGetCountRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (312 == selector)
            {
                if (null == this.mailGetAccessoryReq)
                {
                    this.mailGetAccessoryReq = new CSMailGetAccessoryReq();
                }

                ret = this.mailGetAccessoryReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (313 == selector)
            {
                if (null == this.mailGetAccessoryRes)
                {
                    this.mailGetAccessoryRes = new CSMailGetAccessoryRes();
                }

                ret = this.mailGetAccessoryRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (401 == selector)
            {
                if (null == this.getFriendRankReq)
                {
                    this.getFriendRankReq = new CSGetFriendRankReq();
                }

                ret = this.getFriendRankReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (402 == selector)
            {
                if (null == this.getFriendRankRes)
                {
                    this.getFriendRankRes = new CSGetFriendRankRes();
                }

                ret = this.getFriendRankRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (403 == selector)
            {
                //if (null == this.notifyDelFriendRank)
                //{
                //    this.notifyDelFriendRank = new CSNotifyDelFriendRank();
                //}

                //ret = this.notifyDelFriendRank.load(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (404 == selector)
            {
                //if (null == this.notifyChgFriendRank)
                //{
                //    this.notifyChgFriendRank = new CSNotifyChgFriendRank();
                //}

                //ret = this.notifyChgFriendRank.load(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (450 == selector)
            {
                if (null == this.getFriendListReq)
                {
                    this.getFriendListReq = new CSGetFriendListReq();
                }

                ret = this.getFriendListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (451 == selector)
            {
                if (null == this.getFriendListRes)
                {
                    this.getFriendListRes = new CSGetFriendListRes();
                }

                ret = this.getFriendListRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (452 == selector)
            {
                if (null == this.friendApplyListReq)
                {
                    this.friendApplyListReq = new CSFriendApplyListReq();
                }

                ret = this.friendApplyListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (453 == selector)
            {
                if (null == this.friendApplyListRes)
                {
                    this.friendApplyListRes = new CSFriendApplyListRes();
                }

                ret = this.friendApplyListRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (454 == selector)
            {
                if (null == this.friendWaitAcceptListReq)
                {
                    this.friendWaitAcceptListReq = new CSFriendWaitAcceptListReq();
                }

                ret = this.friendWaitAcceptListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (455 == selector)
            {
                if (null == this.friendWaitAcceptListRes)
                {
                    this.friendWaitAcceptListRes = new CSFriendWaitAcceptListRes();
                }

                ret = this.friendWaitAcceptListRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (456 == selector)
            {
                if (null == this.friendDeleteInviteReq)
                {
                    this.friendDeleteInviteReq = new CSFriendDeleteInviteReq();
                }

                ret = this.friendDeleteInviteReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (457 == selector)
            {
                if (null == this.friendDeleteInviteRes)
                {
                    this.friendDeleteInviteRes = new CSFriendDeleteInviteRes();
                }

                ret = this.friendDeleteInviteRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (458 == selector)
            {
                if (null == this.friendDeleteWaitAcceptReq)
                {
                    this.friendDeleteWaitAcceptReq = new CSFriendDeleteWaitAcceptReq();
                }

                ret = this.friendDeleteWaitAcceptReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (459 == selector)
            {
                if (null == this.friendDeleteWaitAcceptRes)
                {
                    this.friendDeleteWaitAcceptRes = new CSFriendDeleteWaitAcceptRes();
                }

                ret = this.friendDeleteWaitAcceptRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (460 == selector)
            {
                if (null == this.searchFriendReq)
                {
                    this.searchFriendReq = new CSSearchFriendReq();
                }

                ret = this.searchFriendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (461 == selector)
            {
                if (null == this.searchFriendRes)
                {
                    this.searchFriendRes = new CSSearchFriendRes();
                }

                ret = this.searchFriendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (462 == selector)
            {
                if (null == this.addFriendReq)
                {
                    this.addFriendReq = new CSAddFriendReq();
                }

                ret = this.addFriendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (463 == selector)
            {
                if (null == this.addFriendRes)
                {
                    this.addFriendRes = new CSAddFriendRes();
                }

                ret = this.addFriendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (464 == selector)
            {
                if (null == this.acceptFriendReq)
                {
                    this.acceptFriendReq = new CSAcceptFriendReq();
                }

                ret = this.acceptFriendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (465 == selector)
            {
                if (null == this.acceptFriendRes)
                {
                    this.acceptFriendRes = new CSAcceptFriendRes();
                }

                ret = this.acceptFriendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (466 == selector)
            {
                if (null == this.deleteFriendReq)
                {
                    this.deleteFriendReq = new CSDeleteFriendReq();
                }

                ret = this.deleteFriendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (467 == selector)
            {
                if (null == this.deleteFriendRes)
                {
                    this.deleteFriendRes = new CSDeleteFriendRes();
                }

                ret = this.deleteFriendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (468 == selector)
            {
                if (null == this.sendHearReq)
                {
                    this.sendHearReq = new CSSendHeartReq();
                }

                ret = this.sendHearReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (469 == selector)
            {
                if (null == this.sendHearRes)
                {
                    this.sendHearRes = new CSSendHeartRes();
                }

                ret = this.sendHearRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (470 == selector)
            {
                if (null == this.visitFriendReq)
                {
                    this.visitFriendReq = new CSVisitFriendReq();
                }

                ret = this.visitFriendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (471 == selector)
            {
                if (null == this.visitFriendRes)
                {
                    this.visitFriendRes = new CSVisitFriendRes();
                }

                ret = this.visitFriendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (472 == selector)
            {
                if (null == this.conjureFriendReq)
                {
                    this.conjureFriendReq = new CSConjureFriendReq();
                }

                ret = this.conjureFriendReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (473 == selector)
            {
                if (null == this.conjureFriendRes)
                {
                    this.conjureFriendRes = new CSConjureFriendRes();
                }

                ret = this.conjureFriendRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (500 == selector)
            {
                if (null == this.reqGameProgressInfo)
                {
                    this.reqGameProgressInfo = new ReqGameProgressInfo();
                }

                ret = this.reqGameProgressInfo.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (501 == selector)
            {
                if (null == this.resGameProgressInfo)
                {
                    this.resGameProgressInfo = new ResGameProgressInfo();
                }

                ret = this.resGameProgressInfo.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (502 == selector)
            {
                if (null == this.reqBattleStart)
                {
                    this.reqBattleStart = new ReqBattleStart();
                }

                ret = this.reqBattleStart.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (503 == selector)
            {
                if (null == this.resBattleStart)
                {
                    this.resBattleStart = new ResBattleStart();
                }

                ret = this.resBattleStart.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (504 == selector)
            {
                if (null == this.reqBattleEnd)
                {
                    this.reqBattleEnd = new ReqBattleEnd();
                }

                ret = this.reqBattleEnd.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (505 == selector)
            {
                if (null == this.resBattleEnd)
                {
                    this.resBattleEnd = new ResBattleEnd();
                }

                ret = this.resBattleEnd.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (506 == selector)
            {
                if (null == this.reqBattleLottery)
                {
                    this.reqBattleLottery = new ReqBattleLottery();
                }

                ret = this.reqBattleLottery.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (507 == selector)
            {
                if (null == this.resBattleLottery)
                {
                    this.resBattleLottery = new ResBattleLottery();
                }

                ret = this.resBattleLottery.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (508 == selector)
            {
                if (null == this.reqRevive)
                {
                    this.reqRevive = new ReqRevive();
                }

                ret = this.reqRevive.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (509 == selector)
            {
                if (null == this.resRevive)
                {
                    this.resRevive = new ResRevive();
                }

                ret = this.resRevive.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (510 == selector)
            {
                if (null == this.reqBuyRandomBuff)
                {
                    this.reqBuyRandomBuff = new ReqBuyRandomBuff();
                }

                ret = this.reqBuyRandomBuff.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (511 == selector)
            {
                if (null == this.resBuyRandomBuff)
                {
                    this.resBuyRandomBuff = new ResBuyRandomBuff();
                }

                ret = this.resBuyRandomBuff.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (514 == selector)
            {
                if (null == this.reqQuerryBoss)
                {
                    this.reqQuerryBoss = new ReqQuerryBoss();
                }

                ret = this.reqQuerryBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (515 == selector)
            {
                if (null == this.resQuerryBoss)
                {
                    this.resQuerryBoss = new ResQuerryBoss();
                }

                ret = this.resQuerryBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (516 == selector)
            {
                if (null == this.reqQuerryFriendBoss)
                {
                    this.reqQuerryFriendBoss = new ReqQuerryFriendBoss();
                }

                ret = this.reqQuerryFriendBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (517 == selector)
            {
                if (null == this.resQuerryFriendBoss)
                {
                    this.resQuerryFriendBoss = new ResQuerryFriendBoss();
                }

                ret = this.resQuerryFriendBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (520 == selector)
            {
                if (null == this.reqChallengeFriendBoss)
                {
                    this.reqChallengeFriendBoss = new ReqChallengeFriendBoss();
                }

                ret = this.reqChallengeFriendBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (521 == selector)
            {
                if (null == this.resChallengeFriendBoss)
                {
                    this.resChallengeFriendBoss = new ResChallengeFriendBoss();
                }

                ret = this.resChallengeFriendBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (522 == selector)
            {
                if (null == this.reqSettleBoss)
                {
                    this.reqSettleBoss = new ReqSettleBoss();
                }

                ret = this.reqSettleBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (523 == selector)
            {
                if (null == this.resSettleBoss)
                {
                    this.resSettleBoss = new ResSettleBoss();
                }

                ret = this.resSettleBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (524 == selector)
            {
                if (null == this.reqSettleFriendBoss)
                {
                    this.reqSettleFriendBoss = new ReqSettleFriendBoss();
                }

                ret = this.reqSettleFriendBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (525 == selector)
            {
                if (null == this.resSettleFriendBoss)
                {
                    this.resSettleFriendBoss = new ResSettleFriendBoss();
                }

                ret = this.resSettleFriendBoss.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (526 == selector)
            {
                if (null == this.reqBossGameRevive)
                {
                    this.reqBossGameRevive = new ReqBossGameRevive();
                }

                ret = this.reqBossGameRevive.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (527 == selector)
            {
                if (null == this.resBossGameRevive)
                {
                    this.resBossGameRevive = new ResBossGameRevive();
                }

                ret = this.resBossGameRevive.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (528 == selector)
            {
                if (null == this.reqBossHelp)
                {
                    this.reqBossHelp = new ReqBossHelp();
                }

                ret = this.reqBossHelp.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (529 == selector)
            {
                if (null == this.resBossHelp)
                {
                    this.resBossHelp = new ResBossHelp();
                }

                ret = this.resBossHelp.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (530 == selector)
            {
                if (null == this.getChallengeInfoReq)
                {
                    this.getChallengeInfoReq = new GetChallengeInfoReq();
                }

                ret = this.getChallengeInfoReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (531 == selector)
            {
                if (null == this.getChallengeInfoRes)
                {
                    this.getChallengeInfoRes = new GetChallengeInfoRes();
                }

                ret = this.getChallengeInfoRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (532 == selector)
            {
                if (null == this.beginChallengeReq)
                {
                    this.beginChallengeReq = new BeginChallengeReq();
                }

                ret = this.beginChallengeReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (533 == selector)
            {
                if (null == this.beginChallengeRes)
                {
                    this.beginChallengeRes = new BeginChallengeRes();
                }

                ret = this.beginChallengeRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (534 == selector)
            {
                if (null == this.challengeSettlementReq)
                {
                    this.challengeSettlementReq = new ChallengeSettlementReq();
                }

                ret = this.challengeSettlementReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (535 == selector)
            {
                if (null == this.challengeSettlementRes)
                {
                    this.challengeSettlementRes = new ChallengeSettlementRes();
                }

                ret = this.challengeSettlementRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (536 == selector)
            {
                if (null == this.challengeRenewTimesReq)
                {
                    this.challengeRenewTimesReq = new ChallengeRenewTimesReq();
                }

                ret = this.challengeRenewTimesReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (537 == selector)
            {
                if (null == this.challengeRenewTimesRes)
                {
                    this.challengeRenewTimesRes = new ChallengeRenewTimesRes();
                }

                ret = this.challengeRenewTimesRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (538 == selector)
            {
                if (null == this.challengeReviveReq)
                {
                    this.challengeReviveReq = new ChallengeReviveReq();
                }

                ret = this.challengeReviveReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (539 == selector)
            {
                if (null == this.challengeReviveRes)
                {
                    this.challengeReviveRes = new ChallengeReviveRes();
                }

                ret = this.challengeReviveRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (540 == selector)
            {
                //if (null == this.challengeOpFailedNotify)
                //{
                //    this.challengeOpFailedNotify = new ChallengeOpFailedNotify();
                //}

                //ret = this.challengeOpFailedNotify.load(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (601 == selector)
            {
                if (null == this.CSGetTaskListReq)
                {
                    this.CSGetTaskListReq = new CSGetTaskListReq();
                }

                ret = this.CSGetTaskListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (602 == selector)
            {
                if (null == this.CSGetTaskListRes)
                {
                    this.CSGetTaskListRes = new CSGetTaskListRes();
                }

                ret = this.CSGetTaskListRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (610 == selector)
            {
                if (null == this.CSExecGm)
                {
                    this.CSExecGm = new CSExecGm();
                }

                ret = this.CSExecGm.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (611 == selector)
            {
                if (null == this.CSDisplayGmMsg)
                {
                    this.CSDisplayGmMsg = new CSDisplayGmMsg();
                }

                ret = this.CSDisplayGmMsg.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (701 == selector)
            {
                if (null == this.petStrengthenReq)
                {
                    this.petStrengthenReq = new PetStrengthenReq();
                }

                ret = this.petStrengthenReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (702 == selector)
            {
                if (null == this.petCompositeReq)
                {
                    this.petCompositeReq = new PetCompositeReq();
                }

                ret = this.petCompositeReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (703 == selector)
            {
                if (null == this.petUpgradeReq)
                {
                    this.petUpgradeReq = new PetUpgradeReq();
                }

                ret = this.petUpgradeReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (704 == selector)
            {
                if (null == this.petChangePosReq)
                {
                    this.petChangePosReq = new PetChangePosReq();
                }

                ret = this.petChangePosReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (706 == selector)
            {
                if (null == this.petExtendBagReq)
                {
                    this.petExtendBagReq = new PetExtendBagReq();
                }

                ret = this.petExtendBagReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (707 == selector)
            {
                if (null == this.petSellReq)
                {
                    this.petSellReq = new PetSellReq();
                }

                ret = this.petSellReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (708 == selector)
            {
                if (null == this.petGetListReq)
                {
                    this.petGetListReq = new PetGetListReq();
                }

                ret = this.petGetListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (709 == selector)
            {
                if (null == this.petGetManualReq)
                {
                    this.petGetManualReq = new PetGetManualReq();
                }

                ret = this.petGetManualReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (711 == selector)
            {
                if (null == this.petStrengthenRes)
                {
                    this.petStrengthenRes = new PetStrengthenRes();
                }

                ret = this.petStrengthenRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (712 == selector)
            {
                if (null == this.petCompositeRes)
                {
                    this.petCompositeRes = new PetCompositeRes();
                }

                ret = this.petCompositeRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (713 == selector)
            {
                if (null == this.petUpgradeRes)
                {
                    this.petUpgradeRes = new PetUpgradeRes();
                }

                ret = this.petUpgradeRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (714 == selector)
            {
                if (null == this.petChangePosRes)
                {
                    this.petChangePosRes = new PetChangePosRes();
                }

                ret = this.petChangePosRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (716 == selector)
            {
                if (null == this.petExtendBagRes)
                {
                    this.petExtendBagRes = new PetExtendBagRes();
                }

                ret = this.petExtendBagRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (717 == selector)
            {
                if (null == this.petSellRes)
                {
                    this.petSellRes = new PetSellRes();
                }

                ret = this.petSellRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (718 == selector)
            {
                if (null == this.petGetListRes)
                {
                    this.petGetListRes = new PetGetListRes();
                }

                ret = this.petGetListRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (719 == selector)
            {
                //if (null == this.petOpFailedNotify)
                //{
                //    this.petOpFailedNotify = new PetOpFailedNotify();
                //}

                //ret = this.petOpFailedNotify.load(ref srcBuf, cutVer);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (720 == selector)
            {
                if (null == this.petGetManualRes)
                {
                    this.petGetManualRes = new PetGetManualRes();
                }

                ret = this.petGetManualRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (800 == selector)
            {
                if (null == this.csBuyRoleReq)
                {
                    this.csBuyRoleReq = new CSBuyRoleReq();
                }

                ret = this.csBuyRoleReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (801 == selector)
            {
                if (null == this.csBuyRoleRes)
                {
                    this.csBuyRoleRes = new CSBuyRoleRes();
                }

                ret = this.csBuyRoleRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (802 == selector)
            {
                if (null == this.csBuyRoleLevelReq)
                {
                    this.csBuyRoleLevelReq = new CSBuyRoleLevelReq();
                }

                ret = this.csBuyRoleLevelReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (803 == selector)
            {
                if (null == this.csBuyRoleLevelRes)
                {
                    this.csBuyRoleLevelRes = new CSBuyRoleLevelRes();
                }

                ret = this.csBuyRoleLevelRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (804 == selector)
            {
                if (null == this.csRoleEnhanceReq)
                {
                    this.csRoleEnhanceReq = new CSRoleEnhanceReq();
                }

                ret = this.csRoleEnhanceReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (805 == selector)
            {
                if (null == this.csRoleEnhanceRes)
                {
                    this.csRoleEnhanceRes = new CSRoleEnhanceRes();
                }

                ret = this.csRoleEnhanceRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (806 == selector)
            {
                if (null == this.csRoleStarUpReq)
                {
                    this.csRoleStarUpReq = new CSRoleStarUpReq();
                }

                ret = this.csRoleStarUpReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (807 == selector)
            {
                if (null == this.csRoleStarUpRes)
                {
                    this.csRoleStarUpRes = new CSRoleStarUpRes();
                }

                ret = this.csRoleStarUpRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (808 == selector)
            {
                if (null == this.csChgOnplayRoleReq)
                {
                    this.csChgOnplayRoleReq = new CSChgOnPlayRoleReq();
                }

                ret = this.csChgOnplayRoleReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (809 == selector)
            {
                if (null == this.csChgOnplayRoleRes)
                {
                    this.csChgOnplayRoleRes = new CSChgOnPlayRoleRes();
                }

                ret = this.csChgOnplayRoleRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (810 == selector)
            {
                if (null == this.csGetRoleListReq)
                {
                    this.csGetRoleListReq = new CSGetRoleListReq();
                }

                ret = this.csGetRoleListReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (811 == selector)
            {
                if (null == this.csGetRoleListres)
                {
                    this.csGetRoleListres = new CSGetRoleListRes();
                }

                ret = this.csGetRoleListres.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (812 == selector)
            {
                if (null == this.csRoleAddEquipReq)
                {
                    this.csRoleAddEquipReq = new CSRoleAddEquipReq();
                }

                ret = this.csRoleAddEquipReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (813 == selector)
            {
                if (null == this.csRoleAddEquipRes)
                {
                    this.csRoleAddEquipRes = new CSRoleAddEquipRes();
                }

                ret = this.csRoleAddEquipRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (901 == selector)
            {
                if (null == this.getNoticeReq)
                {
                    this.getNoticeReq = new CSGetNoticeReq();
                }

                ret = this.getNoticeReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (902 == selector)
            {
                if (null == this.getNoticeRes)
                {
                    this.getNoticeRes = new CSGetNoticeRes();
                }

                ret = this.getNoticeRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (903 == selector)
            {
                if (null == this.noticePlayNotify)
                {
                    this.noticePlayNotify = new CSNoticePlayNotify();
                }

                ret = this.noticePlayNotify.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (951 == selector)
            {
                if (null == this.GetChatMsgReq)
                {
                    this.GetChatMsgReq = new CSGetChatMsgReq();
                }

                ret = this.GetChatMsgReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (952 == selector)
            {
                if (null == this.GetChatMsgRes)
                {
                    this.GetChatMsgRes = new CSGetChatMsgRes();
                }

                ret = this.GetChatMsgRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (953 == selector)
            {
                if (null == this.SendChatMsgReq)
                {
                    this.SendChatMsgReq = new CSSendChatMsgReq();
                }

                ret = this.SendChatMsgReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (954 == selector)
            {
                if (null == this.SendChatMsgRes)
                {
                    this.SendChatMsgRes = new CSSendChatMsgRes();
                }

                ret = this.SendChatMsgRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (955 == selector)
            {
                if (null == this.CloseChatUIReq)
                {
                    this.CloseChatUIReq = new CSCloseChatUIReq();
                }

                ret = this.CloseChatUIReq.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (956 == selector)
            {
                if (null == this.CloseChatUIRes)
                {
                    this.CloseChatUIRes = new CSCloseChatUIRes();
                }

                ret = this.CloseChatUIRes.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (999 == selector)
            {
                if (null == this.RelayChatMsgNotify)
                {
                    this.RelayChatMsgNotify = new CSRelayChatMsgNotify();
                }

                ret = this.RelayChatMsgNotify.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        TdrError.ErrorType visualize(Int64 selector, ref string buffer, int indent, char separator)
        {
            TdrVisualBuf destBuf = new TdrVisualBuf();
            TdrError.ErrorType ret = visualize(selector, ref destBuf, indent, separator);

            buffer = destBuf.getVisualBuf();

            return ret;
        }

        /*   visualize function */
        public TdrError.ErrorType visualize(Int64 selector, ref TdrVisualBuf destBuf, int indent, char separator)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            if (11 == selector)
            {
                if (null == this.reqAccLogin)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqAccLogin]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqAccLogin */
                if (0 > indent)
                {
                    ret = this.reqAccLogin.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqAccLogin.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (12 == selector)
            {
                if (null == this.resAccLogin)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resAccLogin]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resAccLogin */
                if (0 > indent)
                {
                    ret = this.resAccLogin.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resAccLogin.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (13 == selector)
            {
                if (null == this.reqAccLogout)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqAccLogout]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqAccLogout */
                if (0 > indent)
                {
                    ret = this.reqAccLogout.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqAccLogout.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (14 == selector)
            {
                if (null == this.resAccLogout)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resAccLogout]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resAccLogout */
                if (0 > indent)
                {
                    ret = this.resAccLogout.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resAccLogout.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (15 == selector)
            {
                if (null == this.reqCreateRole)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqCreateRole]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqCreateRole */
                if (0 > indent)
                {
                    ret = this.reqCreateRole.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqCreateRole.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (16 == selector)
            {
                if (null == this.resCreateRole)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resCreateRole]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resCreateRole */
                if (0 > indent)
                {
                    ret = this.resCreateRole.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resCreateRole.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (81 == selector)
            {
                if (null == this.reqShopBuy)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqShopBuy]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqShopBuy */
                if (0 > indent)
                {
                    ret = this.reqShopBuy.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqShopBuy.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (82 == selector)
            {
                if (null == this.resShopBuy)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resShopBuy]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resShopBuy */
                if (0 > indent)
                {
                    ret = this.resShopBuy.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resShopBuy.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (100 == selector)
            {
                if (null == this.csReqPlayerEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csReqPlayerEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csReqPlayerEquip */
                if (0 > indent)
                {
                    ret = this.csReqPlayerEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csReqPlayerEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (101 == selector)
            {
                if (null == this.csResPlayerEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csResPlayerEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csResPlayerEquip */
                if (0 > indent)
                {
                    ret = this.csResPlayerEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csResPlayerEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (102 == selector)
            {
                if (null == this.csReqPlayerExtendEquipBag)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csReqPlayerExtendEquipBag]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csReqPlayerExtendEquipBag */
                if (0 > indent)
                {
                    ret = this.csReqPlayerExtendEquipBag.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csReqPlayerExtendEquipBag.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (103 == selector)
            {
                if (null == this.csResPlayerExtendEquipBag)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csResPlayerExtendEquipBag]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csResPlayerExtendEquipBag */
                if (0 > indent)
                {
                    ret = this.csResPlayerExtendEquipBag.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csResPlayerExtendEquipBag.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (104 == selector)
            {
                if (null == this.csReqPlayerComposeEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csReqPlayerComposeEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csReqPlayerComposeEquip */
                if (0 > indent)
                {
                    ret = this.csReqPlayerComposeEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csReqPlayerComposeEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (105 == selector)
            {
                if (null == this.csResPlayerComposeEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csResPlayerComposeEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csResPlayerComposeEquip */
                if (0 > indent)
                {
                    ret = this.csResPlayerComposeEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csResPlayerComposeEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (106 == selector)
            {
                if (null == this.csReqPlayerEnhanceEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csReqPlayerEnhanceEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csReqPlayerEnhanceEquip */
                if (0 > indent)
                {
                    ret = this.csReqPlayerEnhanceEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csReqPlayerEnhanceEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (107 == selector)
            {
                if (null == this.csResPlayerEnhanceEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csResPlayerEnhanceEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csResPlayerEnhanceEquip */
                if (0 > indent)
                {
                    ret = this.csResPlayerEnhanceEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csResPlayerEnhanceEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (108 == selector)
            {
                if (null == this.csReqPlayerSellEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csReqPlayerSellEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csReqPlayerSellEquip */
                if (0 > indent)
                {
                    ret = this.csReqPlayerSellEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csReqPlayerSellEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (109 == selector)
            {
                if (null == this.csResPlayerSellEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csResPlayerSellEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csResPlayerSellEquip */
                if (0 > indent)
                {
                    ret = this.csResPlayerSellEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csResPlayerSellEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (110 == selector)
            {
                if (null == this.csReqPlayerTakeOnEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csReqPlayerTakeOnEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csReqPlayerTakeOnEquip */
                if (0 > indent)
                {
                    ret = this.csReqPlayerTakeOnEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csReqPlayerTakeOnEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (111 == selector)
            {
                if (null == this.csResPlayerTakeOnEquip)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csResPlayerTakeOnEquip]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csResPlayerTakeOnEquip */
                if (0 > indent)
                {
                    ret = this.csResPlayerTakeOnEquip.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csResPlayerTakeOnEquip.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (300 == selector)
            {
                if (null == this.mailSendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailSendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailSendReq */
                if (0 > indent)
                {
                    ret = this.mailSendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailSendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (301 == selector)
            {
                if (null == this.mailSendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailSendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailSendRes */
                if (0 > indent)
                {
                    ret = this.mailSendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailSendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (302 == selector)
            {
                if (null == this.mailDelReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailDelReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailDelReq */
                if (0 > indent)
                {
                    ret = this.mailDelReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailDelReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (303 == selector)
            {
                if (null == this.mailDelRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailDelRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailDelRes */
                if (0 > indent)
                {
                    ret = this.mailDelRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailDelRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (304 == selector)
            {
                if (null == this.mailGetListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetListReq */
                if (0 > indent)
                {
                    ret = this.mailGetListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (305 == selector)
            {
                if (null == this.mailGetListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetListRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetListRes */
                if (0 > indent)
                {
                    ret = this.mailGetListRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetListRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (306 == selector)
            {
                if (null == this.mailGetDetailReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetDetailReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetDetailReq */
                if (0 > indent)
                {
                    ret = this.mailGetDetailReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetDetailReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (307 == selector)
            {
                if (null == this.mailGetDetailRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetDetailRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetDetailRes */
                if (0 > indent)
                {
                    ret = this.mailGetDetailRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetDetailRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (308 == selector)
            {
                if (null == this.mailSetStatusReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailSetStatusReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailSetStatusReq */
                if (0 > indent)
                {
                    ret = this.mailSetStatusReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailSetStatusReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (309 == selector)
            {
                if (null == this.mailSetStatusRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailSetStatusRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailSetStatusRes */
                if (0 > indent)
                {
                    ret = this.mailSetStatusRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailSetStatusRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (310 == selector)
            {
                if (null == this.mailGetCountReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetCountReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetCountReq */
                if (0 > indent)
                {
                    ret = this.mailGetCountReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetCountReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (311 == selector)
            {
                if (null == this.mailGetCountRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetCountRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetCountRes */
                if (0 > indent)
                {
                    ret = this.mailGetCountRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetCountRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (312 == selector)
            {
                if (null == this.mailGetAccessoryReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetAccessoryReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetAccessoryReq */
                if (0 > indent)
                {
                    ret = this.mailGetAccessoryReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetAccessoryReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (313 == selector)
            {
                if (null == this.mailGetAccessoryRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[mailGetAccessoryRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.mailGetAccessoryRes */
                if (0 > indent)
                {
                    ret = this.mailGetAccessoryRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.mailGetAccessoryRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (401 == selector)
            {
                if (null == this.getFriendRankReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getFriendRankReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getFriendRankReq */
                if (0 > indent)
                {
                    ret = this.getFriendRankReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getFriendRankReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (402 == selector)
            {
                if (null == this.getFriendRankRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getFriendRankRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getFriendRankRes */
                if (0 > indent)
                {
                    ret = this.getFriendRankRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getFriendRankRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (403 == selector)
            {
                //if (null == this.notifyDelFriendRank)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[notifyDelFriendRank]", true);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}

                /* visualize children of this.notifyDelFriendRank */
                //if (0 > indent)
                //{
                //    ret = this.notifyDelFriendRank.visualize(ref destBuf, indent, separator);
                //}
                //else
                //{
                //    ret = this.notifyDelFriendRank.visualize(ref destBuf, indent + 1, separator);
                //}
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (404 == selector)
            {
                //if (null == this.notifyChgFriendRank)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[notifyChgFriendRank]", true);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}

                ///* visualize children of this.notifyChgFriendRank */
                //if (0 > indent)
                //{
                //    ret = this.notifyChgFriendRank.visualize(ref destBuf, indent, separator);
                //}
                //else
                //{
                //    ret = this.notifyChgFriendRank.visualize(ref destBuf, indent + 1, separator);
                //}
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (450 == selector)
            {
                if (null == this.getFriendListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getFriendListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getFriendListReq */
                if (0 > indent)
                {
                    ret = this.getFriendListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getFriendListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (451 == selector)
            {
                if (null == this.getFriendListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getFriendListRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getFriendListRes */
                if (0 > indent)
                {
                    ret = this.getFriendListRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getFriendListRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (452 == selector)
            {
                if (null == this.friendApplyListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendApplyListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendApplyListReq */
                if (0 > indent)
                {
                    ret = this.friendApplyListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendApplyListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (453 == selector)
            {
                if (null == this.friendApplyListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendApplyListRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendApplyListRes */
                if (0 > indent)
                {
                    ret = this.friendApplyListRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendApplyListRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (454 == selector)
            {
                if (null == this.friendWaitAcceptListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendWaitAcceptListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendWaitAcceptListReq */
                if (0 > indent)
                {
                    ret = this.friendWaitAcceptListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendWaitAcceptListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (455 == selector)
            {
                if (null == this.friendWaitAcceptListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendWaitAcceptListRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendWaitAcceptListRes */
                if (0 > indent)
                {
                    ret = this.friendWaitAcceptListRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendWaitAcceptListRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (456 == selector)
            {
                if (null == this.friendDeleteInviteReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendDeleteInviteReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendDeleteInviteReq */
                if (0 > indent)
                {
                    ret = this.friendDeleteInviteReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendDeleteInviteReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (457 == selector)
            {
                if (null == this.friendDeleteInviteRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendDeleteInviteRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendDeleteInviteRes */
                if (0 > indent)
                {
                    ret = this.friendDeleteInviteRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendDeleteInviteRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (458 == selector)
            {
                if (null == this.friendDeleteWaitAcceptReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendDeleteWaitAcceptReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendDeleteWaitAcceptReq */
                if (0 > indent)
                {
                    ret = this.friendDeleteWaitAcceptReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendDeleteWaitAcceptReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (459 == selector)
            {
                if (null == this.friendDeleteWaitAcceptRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[friendDeleteWaitAcceptRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.friendDeleteWaitAcceptRes */
                if (0 > indent)
                {
                    ret = this.friendDeleteWaitAcceptRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.friendDeleteWaitAcceptRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (460 == selector)
            {
                if (null == this.searchFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[searchFriendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.searchFriendReq */
                if (0 > indent)
                {
                    ret = this.searchFriendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.searchFriendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (461 == selector)
            {
                if (null == this.searchFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[searchFriendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.searchFriendRes */
                if (0 > indent)
                {
                    ret = this.searchFriendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.searchFriendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (462 == selector)
            {
                if (null == this.addFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[addFriendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.addFriendReq */
                if (0 > indent)
                {
                    ret = this.addFriendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.addFriendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (463 == selector)
            {
                if (null == this.addFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[addFriendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.addFriendRes */
                if (0 > indent)
                {
                    ret = this.addFriendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.addFriendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (464 == selector)
            {
                if (null == this.acceptFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[acceptFriendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.acceptFriendReq */
                if (0 > indent)
                {
                    ret = this.acceptFriendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.acceptFriendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (465 == selector)
            {
                if (null == this.acceptFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[acceptFriendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.acceptFriendRes */
                if (0 > indent)
                {
                    ret = this.acceptFriendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.acceptFriendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (466 == selector)
            {
                if (null == this.deleteFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[deleteFriendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.deleteFriendReq */
                if (0 > indent)
                {
                    ret = this.deleteFriendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.deleteFriendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (467 == selector)
            {
                if (null == this.deleteFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[deleteFriendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.deleteFriendRes */
                if (0 > indent)
                {
                    ret = this.deleteFriendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.deleteFriendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (468 == selector)
            {
                if (null == this.sendHearReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[sendHearReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.sendHearReq */
                if (0 > indent)
                {
                    ret = this.sendHearReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.sendHearReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (469 == selector)
            {
                if (null == this.sendHearRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[sendHearRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.sendHearRes */
                if (0 > indent)
                {
                    ret = this.sendHearRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.sendHearRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (470 == selector)
            {
                if (null == this.visitFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[visitFriendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.visitFriendReq */
                if (0 > indent)
                {
                    ret = this.visitFriendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.visitFriendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (471 == selector)
            {
                if (null == this.visitFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[visitFriendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.visitFriendRes */
                if (0 > indent)
                {
                    ret = this.visitFriendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.visitFriendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (472 == selector)
            {
                if (null == this.conjureFriendReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[conjureFriendReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.conjureFriendReq */
                if (0 > indent)
                {
                    ret = this.conjureFriendReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.conjureFriendReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (473 == selector)
            {
                if (null == this.conjureFriendRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[conjureFriendRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.conjureFriendRes */
                if (0 > indent)
                {
                    ret = this.conjureFriendRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.conjureFriendRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (500 == selector)
            {
                if (null == this.reqGameProgressInfo)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqGameProgressInfo]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqGameProgressInfo */
                if (0 > indent)
                {
                    ret = this.reqGameProgressInfo.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqGameProgressInfo.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (501 == selector)
            {
                if (null == this.resGameProgressInfo)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resGameProgressInfo]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resGameProgressInfo */
                if (0 > indent)
                {
                    ret = this.resGameProgressInfo.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resGameProgressInfo.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (502 == selector)
            {
                if (null == this.reqBattleStart)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqBattleStart]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqBattleStart */
                if (0 > indent)
                {
                    ret = this.reqBattleStart.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqBattleStart.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (503 == selector)
            {
                if (null == this.resBattleStart)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resBattleStart]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resBattleStart */
                if (0 > indent)
                {
                    ret = this.resBattleStart.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resBattleStart.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (504 == selector)
            {
                if (null == this.reqBattleEnd)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqBattleEnd]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqBattleEnd */
                if (0 > indent)
                {
                    ret = this.reqBattleEnd.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqBattleEnd.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (505 == selector)
            {
                if (null == this.resBattleEnd)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resBattleEnd]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resBattleEnd */
                if (0 > indent)
                {
                    ret = this.resBattleEnd.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resBattleEnd.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (506 == selector)
            {
                if (null == this.reqBattleLottery)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqBattleLottery]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqBattleLottery */
                if (0 > indent)
                {
                    ret = this.reqBattleLottery.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqBattleLottery.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (507 == selector)
            {
                if (null == this.resBattleLottery)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resBattleLottery]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resBattleLottery */
                if (0 > indent)
                {
                    ret = this.resBattleLottery.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resBattleLottery.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (508 == selector)
            {
                if (null == this.reqRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqRevive]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqRevive */
                if (0 > indent)
                {
                    ret = this.reqRevive.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqRevive.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (509 == selector)
            {
                if (null == this.resRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resRevive]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resRevive */
                if (0 > indent)
                {
                    ret = this.resRevive.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resRevive.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (510 == selector)
            {
                if (null == this.reqBuyRandomBuff)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqBuyRandomBuff]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqBuyRandomBuff */
                if (0 > indent)
                {
                    ret = this.reqBuyRandomBuff.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqBuyRandomBuff.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (511 == selector)
            {
                if (null == this.resBuyRandomBuff)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resBuyRandomBuff]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resBuyRandomBuff */
                if (0 > indent)
                {
                    ret = this.resBuyRandomBuff.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resBuyRandomBuff.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (514 == selector)
            {
                if (null == this.reqQuerryBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqQuerryBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqQuerryBoss */
                if (0 > indent)
                {
                    ret = this.reqQuerryBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqQuerryBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (515 == selector)
            {
                if (null == this.resQuerryBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resQuerryBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resQuerryBoss */
                if (0 > indent)
                {
                    ret = this.resQuerryBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resQuerryBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (516 == selector)
            {
                if (null == this.reqQuerryFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqQuerryFriendBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqQuerryFriendBoss */
                if (0 > indent)
                {
                    ret = this.reqQuerryFriendBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqQuerryFriendBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (517 == selector)
            {
                if (null == this.resQuerryFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resQuerryFriendBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resQuerryFriendBoss */
                if (0 > indent)
                {
                    ret = this.resQuerryFriendBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resQuerryFriendBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (520 == selector)
            {
                if (null == this.reqChallengeFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqChallengeFriendBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqChallengeFriendBoss */
                if (0 > indent)
                {
                    ret = this.reqChallengeFriendBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqChallengeFriendBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (521 == selector)
            {
                if (null == this.resChallengeFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resChallengeFriendBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resChallengeFriendBoss */
                if (0 > indent)
                {
                    ret = this.resChallengeFriendBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resChallengeFriendBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (522 == selector)
            {
                if (null == this.reqSettleBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqSettleBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqSettleBoss */
                if (0 > indent)
                {
                    ret = this.reqSettleBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqSettleBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (523 == selector)
            {
                if (null == this.resSettleBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resSettleBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resSettleBoss */
                if (0 > indent)
                {
                    ret = this.resSettleBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resSettleBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (524 == selector)
            {
                if (null == this.reqSettleFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqSettleFriendBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqSettleFriendBoss */
                if (0 > indent)
                {
                    ret = this.reqSettleFriendBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqSettleFriendBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (525 == selector)
            {
                if (null == this.resSettleFriendBoss)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resSettleFriendBoss]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resSettleFriendBoss */
                if (0 > indent)
                {
                    ret = this.resSettleFriendBoss.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resSettleFriendBoss.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (526 == selector)
            {
                if (null == this.reqBossGameRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqBossGameRevive]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqBossGameRevive */
                if (0 > indent)
                {
                    ret = this.reqBossGameRevive.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqBossGameRevive.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (527 == selector)
            {
                if (null == this.resBossGameRevive)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resBossGameRevive]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resBossGameRevive */
                if (0 > indent)
                {
                    ret = this.resBossGameRevive.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resBossGameRevive.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (528 == selector)
            {
                if (null == this.reqBossHelp)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[reqBossHelp]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.reqBossHelp */
                if (0 > indent)
                {
                    ret = this.reqBossHelp.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.reqBossHelp.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (529 == selector)
            {
                if (null == this.resBossHelp)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[resBossHelp]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.resBossHelp */
                if (0 > indent)
                {
                    ret = this.resBossHelp.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.resBossHelp.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (530 == selector)
            {
                if (null == this.getChallengeInfoReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getChallengeInfoReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getChallengeInfoReq */
                if (0 > indent)
                {
                    ret = this.getChallengeInfoReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getChallengeInfoReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (531 == selector)
            {
                if (null == this.getChallengeInfoRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getChallengeInfoRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getChallengeInfoRes */
                if (0 > indent)
                {
                    ret = this.getChallengeInfoRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getChallengeInfoRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (532 == selector)
            {
                if (null == this.beginChallengeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[beginChallengeReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.beginChallengeReq */
                if (0 > indent)
                {
                    ret = this.beginChallengeReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.beginChallengeReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (533 == selector)
            {
                if (null == this.beginChallengeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[beginChallengeRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.beginChallengeRes */
                if (0 > indent)
                {
                    ret = this.beginChallengeRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.beginChallengeRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (534 == selector)
            {
                if (null == this.challengeSettlementReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeSettlementReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.challengeSettlementReq */
                if (0 > indent)
                {
                    ret = this.challengeSettlementReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.challengeSettlementReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (535 == selector)
            {
                if (null == this.challengeSettlementRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeSettlementRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.challengeSettlementRes */
                if (0 > indent)
                {
                    ret = this.challengeSettlementRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.challengeSettlementRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (536 == selector)
            {
                if (null == this.challengeRenewTimesReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeRenewTimesReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.challengeRenewTimesReq */
                if (0 > indent)
                {
                    ret = this.challengeRenewTimesReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.challengeRenewTimesReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (537 == selector)
            {
                if (null == this.challengeRenewTimesRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeRenewTimesRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.challengeRenewTimesRes */
                if (0 > indent)
                {
                    ret = this.challengeRenewTimesRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.challengeRenewTimesRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (538 == selector)
            {
                if (null == this.challengeReviveReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeReviveReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.challengeReviveReq */
                if (0 > indent)
                {
                    ret = this.challengeReviveReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.challengeReviveReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (539 == selector)
            {
                if (null == this.challengeReviveRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeReviveRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.challengeReviveRes */
                if (0 > indent)
                {
                    ret = this.challengeReviveRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.challengeReviveRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (540 == selector)
            {
                //if (null == this.challengeOpFailedNotify)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                //ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[challengeOpFailedNotify]", true);
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}

                /* visualize children of this.challengeOpFailedNotify */
                //if (0 > indent)
                //{
                //    ret = this.challengeOpFailedNotify.visualize(ref destBuf, indent, separator);
                //}
                //else
                //{
                //    ret = this.challengeOpFailedNotify.visualize(ref destBuf, indent + 1, separator);
                //}
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (601 == selector)
            {
                if (null == this.CSGetTaskListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CSGetTaskListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.CSGetTaskListReq */
                if (0 > indent)
                {
                    ret = this.CSGetTaskListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.CSGetTaskListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (602 == selector)
            {
                if (null == this.CSGetTaskListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CSGetTaskListRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.CSGetTaskListRes */
                if (0 > indent)
                {
                    ret = this.CSGetTaskListRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.CSGetTaskListRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (610 == selector)
            {
                if (null == this.CSExecGm)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CSExecGm]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.CSExecGm */
                if (0 > indent)
                {
                    ret = this.CSExecGm.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.CSExecGm.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (611 == selector)
            {
                if (null == this.CSDisplayGmMsg)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CSDisplayGmMsg]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.CSDisplayGmMsg */
                if (0 > indent)
                {
                    ret = this.CSDisplayGmMsg.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.CSDisplayGmMsg.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (701 == selector)
            {
                if (null == this.petStrengthenReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petStrengthenReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petStrengthenReq */
                if (0 > indent)
                {
                    ret = this.petStrengthenReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petStrengthenReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (702 == selector)
            {
                if (null == this.petCompositeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petCompositeReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petCompositeReq */
                if (0 > indent)
                {
                    ret = this.petCompositeReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petCompositeReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (703 == selector)
            {
                if (null == this.petUpgradeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petUpgradeReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petUpgradeReq */
                if (0 > indent)
                {
                    ret = this.petUpgradeReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petUpgradeReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (704 == selector)
            {
                if (null == this.petChangePosReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petChangePosReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petChangePosReq */
                if (0 > indent)
                {
                    ret = this.petChangePosReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petChangePosReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (706 == selector)
            {
                if (null == this.petExtendBagReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petExtendBagReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petExtendBagReq */
                if (0 > indent)
                {
                    ret = this.petExtendBagReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petExtendBagReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (707 == selector)
            {
                if (null == this.petSellReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petSellReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petSellReq */
                if (0 > indent)
                {
                    ret = this.petSellReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petSellReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (708 == selector)
            {
                if (null == this.petGetListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petGetListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petGetListReq */
                if (0 > indent)
                {
                    ret = this.petGetListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petGetListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (709 == selector)
            {
                if (null == this.petGetManualReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petGetManualReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petGetManualReq */
                if (0 > indent)
                {
                    ret = this.petGetManualReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petGetManualReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (711 == selector)
            {
                if (null == this.petStrengthenRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petStrengthenRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petStrengthenRes */
                if (0 > indent)
                {
                    ret = this.petStrengthenRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petStrengthenRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (712 == selector)
            {
                if (null == this.petCompositeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petCompositeRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petCompositeRes */
                if (0 > indent)
                {
                    ret = this.petCompositeRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petCompositeRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (713 == selector)
            {
                if (null == this.petUpgradeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petUpgradeRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petUpgradeRes */
                if (0 > indent)
                {
                    ret = this.petUpgradeRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petUpgradeRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (714 == selector)
            {
                if (null == this.petChangePosRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petChangePosRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petChangePosRes */
                if (0 > indent)
                {
                    ret = this.petChangePosRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petChangePosRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (716 == selector)
            {
                if (null == this.petExtendBagRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petExtendBagRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petExtendBagRes */
                if (0 > indent)
                {
                    ret = this.petExtendBagRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petExtendBagRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (717 == selector)
            {
                if (null == this.petSellRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petSellRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petSellRes */
                if (0 > indent)
                {
                    ret = this.petSellRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petSellRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (718 == selector)
            {
                if (null == this.petGetListRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petGetListRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petGetListRes */
                if (0 > indent)
                {
                    ret = this.petGetListRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petGetListRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (719 == selector)
            {
                //if (null == this.petOpFailedNotify)
                //{
                //    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                //}

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petOpFailedNotify]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petOpFailedNotify */
                //if (0 > indent)
                //{
                //    ret = this.petOpFailedNotify.visualize(ref destBuf, indent, separator);
                //}
                //else
                //{
                //    ret = this.petOpFailedNotify.visualize(ref destBuf, indent + 1, separator);
                //}
                //if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                //{
                //    return ret;
                //}
            }
            else if (720 == selector)
            {
                if (null == this.petGetManualRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[petGetManualRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.petGetManualRes */
                if (0 > indent)
                {
                    ret = this.petGetManualRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.petGetManualRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (800 == selector)
            {
                if (null == this.csBuyRoleReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csBuyRoleReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csBuyRoleReq */
                if (0 > indent)
                {
                    ret = this.csBuyRoleReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csBuyRoleReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (801 == selector)
            {
                if (null == this.csBuyRoleRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csBuyRoleRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csBuyRoleRes */
                if (0 > indent)
                {
                    ret = this.csBuyRoleRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csBuyRoleRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (802 == selector)
            {
                if (null == this.csBuyRoleLevelReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csBuyRoleLevelReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csBuyRoleLevelReq */
                if (0 > indent)
                {
                    ret = this.csBuyRoleLevelReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csBuyRoleLevelReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (803 == selector)
            {
                if (null == this.csBuyRoleLevelRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csBuyRoleLevelRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csBuyRoleLevelRes */
                if (0 > indent)
                {
                    ret = this.csBuyRoleLevelRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csBuyRoleLevelRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (804 == selector)
            {
                if (null == this.csRoleEnhanceReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csRoleEnhanceReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csRoleEnhanceReq */
                if (0 > indent)
                {
                    ret = this.csRoleEnhanceReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csRoleEnhanceReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (805 == selector)
            {
                if (null == this.csRoleEnhanceRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csRoleEnhanceRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csRoleEnhanceRes */
                if (0 > indent)
                {
                    ret = this.csRoleEnhanceRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csRoleEnhanceRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (806 == selector)
            {
                if (null == this.csRoleStarUpReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csRoleStarUpReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csRoleStarUpReq */
                if (0 > indent)
                {
                    ret = this.csRoleStarUpReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csRoleStarUpReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (807 == selector)
            {
                if (null == this.csRoleStarUpRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csRoleStarUpRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csRoleStarUpRes */
                if (0 > indent)
                {
                    ret = this.csRoleStarUpRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csRoleStarUpRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (808 == selector)
            {
                if (null == this.csChgOnplayRoleReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csChgOnplayRoleReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csChgOnplayRoleReq */
                if (0 > indent)
                {
                    ret = this.csChgOnplayRoleReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csChgOnplayRoleReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (809 == selector)
            {
                if (null == this.csChgOnplayRoleRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csChgOnplayRoleRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csChgOnplayRoleRes */
                if (0 > indent)
                {
                    ret = this.csChgOnplayRoleRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csChgOnplayRoleRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (810 == selector)
            {
                if (null == this.csGetRoleListReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csGetRoleListReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csGetRoleListReq */
                if (0 > indent)
                {
                    ret = this.csGetRoleListReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csGetRoleListReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (811 == selector)
            {
                if (null == this.csGetRoleListres)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csGetRoleListres]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csGetRoleListres */
                if (0 > indent)
                {
                    ret = this.csGetRoleListres.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csGetRoleListres.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (812 == selector)
            {
                if (null == this.csRoleAddEquipReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csRoleAddEquipReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csRoleAddEquipReq */
                if (0 > indent)
                {
                    ret = this.csRoleAddEquipReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csRoleAddEquipReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (813 == selector)
            {
                if (null == this.csRoleAddEquipRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[csRoleAddEquipRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.csRoleAddEquipRes */
                if (0 > indent)
                {
                    ret = this.csRoleAddEquipRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.csRoleAddEquipRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (901 == selector)
            {
                if (null == this.getNoticeReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getNoticeReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getNoticeReq */
                if (0 > indent)
                {
                    ret = this.getNoticeReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getNoticeReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (902 == selector)
            {
                if (null == this.getNoticeRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[getNoticeRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.getNoticeRes */
                if (0 > indent)
                {
                    ret = this.getNoticeRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.getNoticeRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (903 == selector)
            {
                if (null == this.noticePlayNotify)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[noticePlayNotify]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.noticePlayNotify */
                if (0 > indent)
                {
                    ret = this.noticePlayNotify.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.noticePlayNotify.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (951 == selector)
            {
                if (null == this.GetChatMsgReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GetChatMsgReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.GetChatMsgReq */
                if (0 > indent)
                {
                    ret = this.GetChatMsgReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.GetChatMsgReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (952 == selector)
            {
                if (null == this.GetChatMsgRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GetChatMsgRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.GetChatMsgRes */
                if (0 > indent)
                {
                    ret = this.GetChatMsgRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.GetChatMsgRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (953 == selector)
            {
                if (null == this.SendChatMsgReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[SendChatMsgReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.SendChatMsgReq */
                if (0 > indent)
                {
                    ret = this.SendChatMsgReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.SendChatMsgReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (954 == selector)
            {
                if (null == this.SendChatMsgRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[SendChatMsgRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.SendChatMsgRes */
                if (0 > indent)
                {
                    ret = this.SendChatMsgRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.SendChatMsgRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (955 == selector)
            {
                if (null == this.CloseChatUIReq)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CloseChatUIReq]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.CloseChatUIReq */
                if (0 > indent)
                {
                    ret = this.CloseChatUIReq.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.CloseChatUIReq.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (956 == selector)
            {
                if (null == this.CloseChatUIRes)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CloseChatUIRes]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.CloseChatUIRes */
                if (0 > indent)
                {
                    ret = this.CloseChatUIRes.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.CloseChatUIRes.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
            else if (999 == selector)
            {
                if (null == this.RelayChatMsgNotify)
                {
                    return TdrError.ErrorType.TDR_ERR_ARG_IS_NULL;
                }

                ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[RelayChatMsgNotify]", true);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }

                /* visualize children of this.RelayChatMsgNotify */
                if (0 > indent)
                {
                    ret = this.RelayChatMsgNotify.visualize(ref destBuf, indent, separator);
                }
                else
                {
                    ret = this.RelayChatMsgNotify.visualize(ref destBuf, indent + 1, separator);
                }
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        /* version infomation */
        /*  pstMeta version info */
        public static readonly uint BASEVERSION = 1;
        public static readonly uint CURRVERSION = 1;
        /*  entry version info */
    }


    public class CSPKG : tsf4g_csharp_interface
    {
        /* public members */
        public CSPkgHead Head;
        public CSPkgBody Body;

        /* construct methods */
        public CSPKG()
        {
            Head = new CSPkgHead();
            Body = new CSPkgBody();
        }

        /* public methods */
        public TdrError.ErrorType construct()
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /*no need to  set defaultvalue */

            return ret;
        }

        public TdrError.ErrorType pack(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
            TdrError.ErrorType ret = pack(ref destBuf, cutVer);
            if (ret == TdrError.ErrorType.TDR_NO_ERROR)
            {
                buffer = destBuf.getBeginPtr();

                usedSize = destBuf.getUsedSize();
            }

            return ret;
        }

        public TdrError.ErrorType pack(ref TdrWriteBuf destBuf, uint cutVer)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSPKG.CURRVERSION < cutVer)
            {
                cutVer = CSPKG.CURRVERSION;
            }

            /* check cutversion */
            if (CSPKG.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }
            if (CSPkgHead.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_CONFILICT;
            }

            int savedBeginPos = destBuf.getUsedSize();

            /* pack member: this.Head */
            {
                ret = this.Head.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* pack member: this.Body */
            {
                Int64 selector4Body = this.Head.CmdID;
                ret = this.Body.pack(selector4Body, ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* set version-indicator */
            ret = destBuf.writeUInt16((UInt16)(cutVer), savedBeginPos + 0);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            return ret;
        }

        public TdrError.ErrorType unpack(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* get versionindicator */
            UInt16 netCutVer = 0;
            ret = srcBuf.readUInt16(ref netCutVer, srcBuf.getUsedSize() + 0);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* check versionindicator */
            if (CSPKG.BASEVERSION > netCutVer || netCutVer > CSPKG.CURRVERSION)
            {
                return TdrError.ErrorType.TDR_ERR_NET_CUTVER_INVALID;
            }
            if (CSPkgHead.BASEVERSION > netCutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_CONFILICT;
            }
            cutVer = netCutVer;

            /* unpack member: this.Head */
            {
                ret = this.Head.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* unpack member: this.Body */
            {
                Int64 selector4Body = this.Head.CmdID;
                ret = this.Body.unpack(selector4Body, ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        public TdrError.ErrorType load(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = load(ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
        {
            srcBuf.disableEndian();
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* get versionindicator */
            UInt16 netCutVer = 0;
            ret = srcBuf.readUInt16(ref netCutVer, srcBuf.getUsedSize() + 0);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* check versionindicator */
            if (CSPKG.BASEVERSION > netCutVer || netCutVer > CSPKG.CURRVERSION)
            {
                return TdrError.ErrorType.TDR_ERR_NET_CUTVER_INVALID;
            }
            if (CSPkgHead.BASEVERSION > netCutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_CONFILICT;
            }
            cutVer = netCutVer;

            /* load member: this.Head */
            {
                ret = this.Head.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* load member: this.Body */
            {
                Int64 selector4Body = this.Head.CmdID;
                ret = this.Body.load(selector4Body, ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        /* set indent = -1 to disable indent , default: separator = '\n' */
        public TdrError.ErrorType visualize(ref string buffer, int indent, char separator)
        {
            TdrVisualBuf destBuf = new TdrVisualBuf();
            TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

            buffer = destBuf.getVisualBuf();

            return ret;
        }

        /* set indent = -1 to disable indent , default: separator = '\n' */
        public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* visualize member: this.Head */
            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Head]", true);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize children of this.Head */
            if (0 > indent)
            {
                ret = this.Head.visualize(ref destBuf, indent, separator);
            }
            else
            {
                ret = this.Head.visualize(ref destBuf, indent + 1, separator);
            }
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize member: this.Body */
            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Body]", true);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize children of this.Body */
            Int64 selector4Body = this.Head.CmdID;
            if (0 > indent)
            {
                ret = this.Body.visualize(selector4Body, ref destBuf, indent, separator);
            }
            else
            {
                ret = this.Body.visualize(selector4Body, ref destBuf, indent + 1, separator);
            }
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            return ret;
        }

        public TdrError.ErrorType getSizeInfo(byte[] buffer, int size, ref uint sizeInfo)
        {
            if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

            return ret;
        }

        public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
        {
            return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
        }

        /*  pstMeta version info */
        public static readonly uint BASEVERSION = 1;
        public static readonly uint CURRVERSION = 1;
        /*  entry version info */
    }


    public class CSEncryptHead : tsf4g_csharp_interface
    {
        /* public members */
        public UInt16 Length;
        public UInt16 BodyLength;
        public byte EncryptFlag;

        /* construct methods */
        public CSEncryptHead()
        {
        }

        /* public methods */
        public TdrError.ErrorType construct()
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /*no need to  set defaultvalue */

            return ret;
        }

        public TdrError.ErrorType pack(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
            TdrError.ErrorType ret = pack(ref destBuf, cutVer);
            if (ret == TdrError.ErrorType.TDR_NO_ERROR)
            {
                buffer = destBuf.getBeginPtr();

                usedSize = destBuf.getUsedSize();
            }

            return ret;
        }

        public TdrError.ErrorType pack(ref TdrWriteBuf destBuf, uint cutVer)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSEncryptHead.CURRVERSION < cutVer)
            {
                cutVer = CSEncryptHead.CURRVERSION;
            }

            /* check cutversion */
            if (CSEncryptHead.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            /* pack member: this.Length */
            {
                ret = destBuf.writeUInt16(this.Length);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* pack member: this.BodyLength */
            {
                ret = destBuf.writeUInt16(this.BodyLength);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* pack member: this.EncryptFlag */
            {
                ret = destBuf.writeUInt8(this.EncryptFlag);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        public TdrError.ErrorType unpack(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSEncryptHead.CURRVERSION < cutVer)
            {
                cutVer = CSEncryptHead.CURRVERSION;
            }

            /* check cutversion */
            if (CSEncryptHead.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            /* unpack member: this.Length */
            {
                ret = srcBuf.readUInt16(ref this.Length);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* unpack member: this.BodyLength */
            {
                ret = srcBuf.readUInt16(ref this.BodyLength);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* unpack member: this.EncryptFlag */
            {
                ret = srcBuf.readUInt8(ref this.EncryptFlag);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        public TdrError.ErrorType load(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = load(ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
        {
            srcBuf.disableEndian();
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSEncryptHead.CURRVERSION < cutVer)
            {
                cutVer = CSEncryptHead.CURRVERSION;
            }

            /* check cutversion */
            if (CSEncryptHead.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            /* load member: this.Length */
            {
                ret = srcBuf.readUInt16(ref this.Length);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* load member: this.BodyLength */
            {
                ret = srcBuf.readUInt16(ref this.BodyLength);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* load member: this.EncryptFlag */
            {
                ret = srcBuf.readUInt8(ref this.EncryptFlag);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            return ret;
        }

        /* set indent = -1 to disable indent , default: separator = '\n' */
        public TdrError.ErrorType visualize(ref string buffer, int indent, char separator)
        {
            TdrVisualBuf destBuf = new TdrVisualBuf();
            TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

            buffer = destBuf.getVisualBuf();

            return ret;
        }

        /* set indent = -1 to disable indent , default: separator = '\n' */
        public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* visualize member: this.Length */
            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Length]", "{0:d}", this.Length);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize member: this.BodyLength */
            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[BodyLength]", "{0:d}", this.BodyLength);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize member: this.EncryptFlag */
            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[EncryptFlag]", "{0:d}", this.EncryptFlag);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            return ret;
        }

        public TdrError.ErrorType getSizeInfo(byte[] buffer, int size, ref uint sizeInfo)
        {
            if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

            return ret;
        }

        public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
        {
            return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
        }

        /*  pstMeta version info */
        public static readonly uint BASEVERSION = 1;
        public static readonly uint CURRVERSION = 1;
        /*  entry version info */
    }


    public class CSEncryptPKG : tsf4g_csharp_interface
    {
        /* public members */
        public CSEncryptHead Head;
        public byte[] Buff;

        /* construct methods */
        public CSEncryptPKG()
        {
            Head = new CSEncryptHead();
            Buff = new byte[4096];
        }

        /* public methods */
        public TdrError.ErrorType construct()
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /*no need to  set defaultvalue */

            return ret;
        }

        public TdrError.ErrorType pack(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
            TdrError.ErrorType ret = pack(ref destBuf, cutVer);
            if (ret == TdrError.ErrorType.TDR_NO_ERROR)
            {
                buffer = destBuf.getBeginPtr();

                usedSize = destBuf.getUsedSize();
            }

            return ret;
        }

        public TdrError.ErrorType pack(ref TdrWriteBuf destBuf, uint cutVer)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSEncryptPKG.CURRVERSION < cutVer)
            {
                cutVer = CSEncryptPKG.CURRVERSION;
            }

            /* check cutversion */
            if (CSEncryptPKG.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            /* pack member: this.Head */
            {
                ret = this.Head.pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* pack member: this.Buff */
            {
                if (4096 < this.Head.BodyLength)
                {
                    return TdrError.ErrorType.TDR_ERR_REFER_SURPASS_COUNT;
                }
                for (Int32 Buff_i = 0; Buff_i < this.Head.BodyLength; Buff_i++)
                {
                    ret = destBuf.writeUInt8(this.Buff[Buff_i]);
                    if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                    {
                        return ret;
                    }
                }
            }

            return ret;
        }

        public TdrError.ErrorType unpack(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSEncryptPKG.CURRVERSION < cutVer)
            {
                cutVer = CSEncryptPKG.CURRVERSION;
            }

            /* check cutversion */
            if (CSEncryptPKG.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            /* unpack member: this.Head */
            {
                ret = this.Head.unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* unpack member: this.Buff */
            {
                if (4096 < this.Head.BodyLength)
                {
                    return TdrError.ErrorType.TDR_ERR_REFER_SURPASS_COUNT;
                }
                for (Int32 Buff_i = 0; Buff_i < this.Head.BodyLength; Buff_i++)
                {
                    ret = srcBuf.readUInt8(ref this.Buff[Buff_i]);
                    if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                    {
                        return ret;
                    }
                }
            }

            return ret;
        }

        public TdrError.ErrorType load(ref byte[] buffer, int size, ref int usedSize, uint cutVer)
        {
            if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = load(ref srcBuf, cutVer);

            usedSize = srcBuf.getUsedSize();

            return ret;
        }

        public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
        {
            srcBuf.disableEndian();
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* adjust cutversion */
            if (0 == cutVer || CSEncryptPKG.CURRVERSION < cutVer)
            {
                cutVer = CSEncryptPKG.CURRVERSION;
            }

            /* check cutversion */
            if (CSEncryptPKG.BASEVERSION > cutVer)
            {
                return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
            }

            /* load member: this.Head */
            {
                ret = this.Head.load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            /* load member: this.Buff */
            {
                for (Int32 Buff_i = 0; Buff_i < 4096; Buff_i++)
                {
                    ret = srcBuf.readUInt8(ref this.Buff[Buff_i]);
                    if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                    {
                        return ret;
                    }
                }
            }

            return ret;
        }

        /* set indent = -1 to disable indent , default: separator = '\n' */
        public TdrError.ErrorType visualize(ref string buffer, int indent, char separator)
        {
            TdrVisualBuf destBuf = new TdrVisualBuf();
            TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

            buffer = destBuf.getVisualBuf();

            return ret;
        }

        /* set indent = -1 to disable indent , default: separator = '\n' */
        public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
        {
            TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

            /* visualize member: this.Head */
            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Head]", true);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize children of this.Head */
            if (0 > indent)
            {
                ret = this.Head.visualize(ref destBuf, indent, separator);
            }
            else
            {
                ret = this.Head.visualize(ref destBuf, indent + 1, separator);
            }
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize member: this.Buff */
            if (4096 < this.Head.BodyLength)
            {
                return TdrError.ErrorType.TDR_ERR_REFER_SURPASS_COUNT;
            }
            ret = TdrBufUtil.printArray(ref destBuf, indent, separator, "[Buff]", this.Head.BodyLength);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
            for (Int32 Buff_i = 0; Buff_i < this.Head.BodyLength; Buff_i++)
            {
                ret = destBuf.sprintf("{0:d}", this.Buff[Buff_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }

            ret = destBuf.sprintf("{0}", separator);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            return ret;
        }

        public TdrError.ErrorType getSizeInfo(byte[] buffer, int size, ref uint sizeInfo)
        {
            if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
            }

            TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
            TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

            return ret;
        }

        public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
        {
            return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
        }

        /*  pstMeta version info */
        public static readonly uint BASEVERSION = 1;
        public static readonly uint CURRVERSION = 1;
        /*  entry version info */
    }


}
