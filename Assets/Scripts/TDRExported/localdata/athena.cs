/* This file is generated by tdr. */
/* No manual modification is permitted. */

/* metalib version: 1 */
/* metalib md5sum: 97d82cd2e723339e99fd78cab12e3a9c */

/* creation time: Fri May 15 17:09:14 2015 */
/* tdr version: 2.6.7, build at 20131230 */


using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;
using tsf4g_tdr_csharp;

namespace wl_res
{


/* ÊØ»¤ÑÅµäÄÈ¹ÖÎï */
public class AthenaMonster : tsf4g_csharp_interface
{
    /* public members */
    public Int32 NpcId;
    public float PosX;
    public float PosY;
    public float PosZ;
    public float ForwardX;
    public float ForwardY;
    public float ForwardZ;
    public Int32 Num;
    public Int32 StartAppearTime;

    /* construct methods */
    public AthenaMonster()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaMonster.CURRVERSION < cutVer)
        {
            cutVer = AthenaMonster.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaMonster.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.NpcId */
        {
            ret = destBuf.writeInt32(this.NpcId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.PosX */
        {
            ret = destBuf.writeFloat(this.PosX);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.PosY */
        {
            ret = destBuf.writeFloat(this.PosY);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.PosZ */
        {
            ret = destBuf.writeFloat(this.PosZ);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ForwardX */
        {
            ret = destBuf.writeFloat(this.ForwardX);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ForwardY */
        {
            ret = destBuf.writeFloat(this.ForwardY);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ForwardZ */
        {
            ret = destBuf.writeFloat(this.ForwardZ);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Num */
        {
            ret = destBuf.writeInt32(this.Num);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.StartAppearTime */
        {
            ret = destBuf.writeInt32(this.StartAppearTime);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaMonster.CURRVERSION < cutVer)
        {
            cutVer = AthenaMonster.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaMonster.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.NpcId */
        {
            ret = srcBuf.readInt32(ref this.NpcId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.PosX */
        {
            ret = srcBuf.readFloat(ref this.PosX);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.PosY */
        {
            ret = srcBuf.readFloat(ref this.PosY);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.PosZ */
        {
            ret = srcBuf.readFloat(ref this.PosZ);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ForwardX */
        {
            ret = srcBuf.readFloat(ref this.ForwardX);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ForwardY */
        {
            ret = srcBuf.readFloat(ref this.ForwardY);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ForwardZ */
        {
            ret = srcBuf.readFloat(ref this.ForwardZ);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Num */
        {
            ret = srcBuf.readInt32(ref this.Num);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.StartAppearTime */
        {
            ret = srcBuf.readInt32(ref this.StartAppearTime);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaMonster.CURRVERSION < cutVer)
        {
            cutVer = AthenaMonster.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaMonster.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.NpcId */
        {
            ret = srcBuf.readInt32(ref this.NpcId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.PosX */
        {
            ret = srcBuf.readFloat(ref this.PosX);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.PosY */
        {
            ret = srcBuf.readFloat(ref this.PosY);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.PosZ */
        {
            ret = srcBuf.readFloat(ref this.PosZ);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ForwardX */
        {
            ret = srcBuf.readFloat(ref this.ForwardX);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ForwardY */
        {
            ret = srcBuf.readFloat(ref this.ForwardY);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ForwardZ */
        {
            ret = srcBuf.readFloat(ref this.ForwardZ);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Num */
        {
            ret = srcBuf.readInt32(ref this.Num);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.StartAppearTime */
        {
            ret = srcBuf.readInt32(ref this.StartAppearTime);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.NpcId */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[NpcId]", "{0:d}", this.NpcId);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.PosX */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PosX]", "{0:g}", this.PosX);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.PosY */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PosY]", "{0:g}", this.PosY);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.PosZ */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PosZ]", "{0:g}", this.PosZ);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ForwardX */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ForwardX]", "{0:g}", this.ForwardX);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ForwardY */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ForwardY]", "{0:g}", this.ForwardY);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ForwardZ */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ForwardZ]", "{0:g}", this.ForwardZ);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Num */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Num]", "{0:d}", this.Num);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StartAppearTime */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[StartAppearTime]", "{0:d}", this.StartAppearTime);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


public class AthenaRefreshMonster : tsf4g_csharp_interface
{
    /* public members */
    public Int32 LevelLowerLimit;
    public Int32 LevelUpperLimit;
    public Int32 Seq;
    public AthenaMonster Boss;
    public AthenaMonster EliteMonster;
    public AthenaMonster[] NormalMonster;
    public Int32 RefreshInterval;
    public UInt32 GiftBagId;
    public UInt32 RewardedMoney;
    public UInt32 RewardedScore;

    /* construct methods */
    public AthenaRefreshMonster()
    {
        Boss = new AthenaMonster();
        EliteMonster = new AthenaMonster();
        NormalMonster = new AthenaMonster[2];
        for(int NormalMonster_i = 0; NormalMonster_i < 2; NormalMonster_i++)
        {
            NormalMonster[NormalMonster_i] = new AthenaMonster();
        }

    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaRefreshMonster.CURRVERSION < cutVer)
        {
            cutVer = AthenaRefreshMonster.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaRefreshMonster.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.LevelLowerLimit */
        {
            ret = destBuf.writeInt32(this.LevelLowerLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.LevelUpperLimit */
        {
            ret = destBuf.writeInt32(this.LevelUpperLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Seq */
        {
            ret = destBuf.writeInt32(this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Boss */
        {
            ret = this.Boss.pack(ref destBuf, cutVer);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.EliteMonster */
        {
            ret = this.EliteMonster.pack(ref destBuf, cutVer);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.NormalMonster */
        {
            for (Int32 NormalMonster_i = 0; NormalMonster_i < 2; NormalMonster_i++)
            {
                ret = this.NormalMonster[NormalMonster_i].pack(ref destBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* pack member: this.RefreshInterval */
        {
            ret = destBuf.writeInt32(this.RefreshInterval);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftBagId */
        {
            ret = destBuf.writeUInt32(this.GiftBagId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.RewardedMoney */
        {
            ret = destBuf.writeUInt32(this.RewardedMoney);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.RewardedScore */
        {
            ret = destBuf.writeUInt32(this.RewardedScore);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaRefreshMonster.CURRVERSION < cutVer)
        {
            cutVer = AthenaRefreshMonster.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaRefreshMonster.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.LevelLowerLimit */
        {
            ret = srcBuf.readInt32(ref this.LevelLowerLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.LevelUpperLimit */
        {
            ret = srcBuf.readInt32(ref this.LevelUpperLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Seq */
        {
            ret = srcBuf.readInt32(ref this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Boss */
        {
            ret = this.Boss.unpack(ref srcBuf, cutVer);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.EliteMonster */
        {
            ret = this.EliteMonster.unpack(ref srcBuf, cutVer);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.NormalMonster */
        {
            for (Int32 NormalMonster_i = 0; NormalMonster_i < 2; NormalMonster_i++)
            {
                ret = this.NormalMonster[NormalMonster_i].unpack(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* unpack member: this.RefreshInterval */
        {
            ret = srcBuf.readInt32(ref this.RefreshInterval);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftBagId */
        {
            ret = srcBuf.readUInt32(ref this.GiftBagId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.RewardedMoney */
        {
            ret = srcBuf.readUInt32(ref this.RewardedMoney);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.RewardedScore */
        {
            ret = srcBuf.readUInt32(ref this.RewardedScore);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaRefreshMonster.CURRVERSION < cutVer)
        {
            cutVer = AthenaRefreshMonster.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaRefreshMonster.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.LevelLowerLimit */
        {
            ret = srcBuf.readInt32(ref this.LevelLowerLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.LevelUpperLimit */
        {
            ret = srcBuf.readInt32(ref this.LevelUpperLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Seq */
        {
            ret = srcBuf.readInt32(ref this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Boss */
        {
            ret = this.Boss.load(ref srcBuf, cutVer);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.EliteMonster */
        {
            ret = this.EliteMonster.load(ref srcBuf, cutVer);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.NormalMonster */
        {
            for (Int32 NormalMonster_i = 0; NormalMonster_i < 2; NormalMonster_i++)
            {
                ret = this.NormalMonster[NormalMonster_i].load(ref srcBuf, cutVer);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* load member: this.RefreshInterval */
        {
            ret = srcBuf.readInt32(ref this.RefreshInterval);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftBagId */
        {
            ret = srcBuf.readUInt32(ref this.GiftBagId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.RewardedMoney */
        {
            ret = srcBuf.readUInt32(ref this.RewardedMoney);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.RewardedScore */
        {
            ret = srcBuf.readUInt32(ref this.RewardedScore);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.LevelLowerLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LevelLowerLimit]", "{0:d}", this.LevelLowerLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.LevelUpperLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LevelUpperLimit]", "{0:d}", this.LevelUpperLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Seq */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Seq]", "{0:d}", this.Seq);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Boss */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Boss]", true);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize children of this.Boss */
        if (0 > indent)
        {
            ret = this.Boss.visualize(ref destBuf, indent, separator);
        } else
        {
            ret = this.Boss.visualize(ref destBuf, indent + 1, separator);
        }
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.EliteMonster */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[EliteMonster]", true);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize children of this.EliteMonster */
        if (0 > indent)
        {
            ret = this.EliteMonster.visualize(ref destBuf, indent, separator);
        } else
        {
            ret = this.EliteMonster.visualize(ref destBuf, indent + 1, separator);
        }
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.NormalMonster */
        for (Int32 NormalMonster_i = 0; NormalMonster_i < 2; NormalMonster_i++)
        {
            if (null == this.NormalMonster[NormalMonster_i])
            {
                continue;
            }

            ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[NormalMonster]", NormalMonster_i, true);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* visualize children of this.NormalMonster[NormalMonster_i] */
            if (0 > indent)
            {
                ret = this.NormalMonster[NormalMonster_i].visualize(ref destBuf, indent, separator);
            } else
            {
                ret = this.NormalMonster[NormalMonster_i].visualize(ref destBuf, indent + 1, separator);
            }
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* visualize member: this.RefreshInterval */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[RefreshInterval]", "{0:d}", this.RefreshInterval);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftBagId */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftBagId]", "{0:d}", this.GiftBagId);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.RewardedMoney */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[RewardedMoney]", "{0:d}", this.RewardedMoney);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.RewardedScore */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[RewardedScore]", "{0:d}", this.RewardedScore);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* »ý·Ö¶Ò»»ÉÌµêµÄÉÌÆ· */
public class AthenaShopItem : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 No;
    public UInt32 ItemType;
    public UInt32 ItemId;
    public UInt32 Price;

    /* construct methods */
    public AthenaShopItem()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaShopItem.CURRVERSION < cutVer)
        {
            cutVer = AthenaShopItem.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaShopItem.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.No */
        {
            ret = destBuf.writeUInt32(this.No);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ItemType */
        {
            ret = destBuf.writeUInt32(this.ItemType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ItemId */
        {
            ret = destBuf.writeUInt32(this.ItemId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Price */
        {
            ret = destBuf.writeUInt32(this.Price);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaShopItem.CURRVERSION < cutVer)
        {
            cutVer = AthenaShopItem.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaShopItem.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.No */
        {
            ret = srcBuf.readUInt32(ref this.No);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ItemType */
        {
            ret = srcBuf.readUInt32(ref this.ItemType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ItemId */
        {
            ret = srcBuf.readUInt32(ref this.ItemId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Price */
        {
            ret = srcBuf.readUInt32(ref this.Price);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaShopItem.CURRVERSION < cutVer)
        {
            cutVer = AthenaShopItem.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaShopItem.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.No */
        {
            ret = srcBuf.readUInt32(ref this.No);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ItemType */
        {
            ret = srcBuf.readUInt32(ref this.ItemType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ItemId */
        {
            ret = srcBuf.readUInt32(ref this.ItemId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Price */
        {
            ret = srcBuf.readUInt32(ref this.Price);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.No */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[No]", "{0:d}", this.No);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ItemType */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ItemType]", "{0:d}", this.ItemType);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ItemId */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ItemId]", "{0:d}", this.ItemId);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Price */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Price]", "{0:d}", this.Price);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* ÑÅµäÄÈ¸´»îÓ¢ÐÛ±í */
public class AthenaReviveHero : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 ReviveNum;
    public UInt32 RevivePay;
    public UInt32 PayType;

    /* construct methods */
    public AthenaReviveHero()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaReviveHero.CURRVERSION < cutVer)
        {
            cutVer = AthenaReviveHero.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaReviveHero.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.ReviveNum */
        {
            ret = destBuf.writeUInt32(this.ReviveNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.RevivePay */
        {
            ret = destBuf.writeUInt32(this.RevivePay);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.PayType */
        {
            ret = destBuf.writeUInt32(this.PayType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaReviveHero.CURRVERSION < cutVer)
        {
            cutVer = AthenaReviveHero.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaReviveHero.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.ReviveNum */
        {
            ret = srcBuf.readUInt32(ref this.ReviveNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.RevivePay */
        {
            ret = srcBuf.readUInt32(ref this.RevivePay);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.PayType */
        {
            ret = srcBuf.readUInt32(ref this.PayType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || AthenaReviveHero.CURRVERSION < cutVer)
        {
            cutVer = AthenaReviveHero.CURRVERSION;
        }

        /* check cutversion */
        if (AthenaReviveHero.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.ReviveNum */
        {
            ret = srcBuf.readUInt32(ref this.ReviveNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.RevivePay */
        {
            ret = srcBuf.readUInt32(ref this.RevivePay);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.PayType */
        {
            ret = srcBuf.readUInt32(ref this.PayType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.ReviveNum */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ReviveNum]", "{0:d}", this.ReviveNum);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.RevivePay */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[RevivePay]", "{0:d}", this.RevivePay);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.PayType */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PayType]", "{0:d}", this.PayType);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


}
