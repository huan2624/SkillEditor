/* This file is generated by tdr. */
/* No manual modification is permitted. */

/* metalib version: 1 */
/* metalib md5sum: 2fec523c3f1bee63e0867d44353d8029 */

/* creation time: Fri Jun 12 10:53:21 2015 */
/* tdr version: 2.6.7, build at 20131230 */


using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;
using tsf4g_tdr_csharp;

namespace wl_res
{


/* VIP特权表 */
public class VIPPrivilege : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 VIPLevel; // VIP等级
    public UInt32 Require; // 充值要求
    public UInt32 LvGift; // VIP等级礼包
    public UInt32 EverydayGift; // 每日领取礼包
    public UInt32 BuyGiftDiamond; // 礼包购买钻石
    public UInt32 VIPShopRefreshLimit; // VIP商城刷新限制
    public UInt32 StrengthBuyLimit; // 购买体力限制
    public UInt32 PVPBuyLimit; // 竞技场购买限制
    public UInt32 LevelResetTimes;
    public UInt32 GiveBagNum; // 赠送背包格子数
    public UInt32 SweepLimit; // 扫荡上限
    public UInt32 CutterLimit; // 补刀上限
    public UInt32 AthenaMaxFreeResetTimes; // 守护雅典娜每日可免费重置进度多少次
    public UInt32 AthenaMaxPaidResetTimes; // 守护雅典娜每日可付费重置进度多少次
    public UInt32 AthenaResetPrice; // 守护雅典娜付费重置进度一次需要多少钻石
    public float AthenaGoldAddPercentage; // 雅典娜获得金币增加量
    public UInt32 AthenaHeroReviveTimes; // 守护雅典娜一个挑战周期内可复活英雄多少次
    public UInt32 IsAthenaSweepOpen; // 雅典娜扫荡开启
    public UInt32 IsRealityRoomSweepOpen; // 密室逃脱扫荡开启
    public UInt32 IsFundSweepOpen; // 基金购买开启
    public UInt32 ShopRefreshNumber; // 商城刷新次数
    public UInt32 ValleyRewardedBattleTimes; // 溪谷对决每天挑战多少次后就无收益
    public UInt32 IsAuotReleaseSkill; // 是否自动释放技能
    public UInt32 TigerAndLotteryNumber; // 老虎机次数
    public UInt32 AddStaminaMax; // 增加体力上限数
    public UInt32 IsOpenGameLevelMassSweep; // 是否开启关卡多次扫荡

    /* construct methods */
    public VIPPrivilege()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || VIPPrivilege.CURRVERSION < cutVer)
        {
            cutVer = VIPPrivilege.CURRVERSION;
        }

        /* check cutversion */
        if (VIPPrivilege.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.VIPLevel */
        {
            ret = destBuf.writeUInt32(this.VIPLevel);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Require */
        {
            ret = destBuf.writeUInt32(this.Require);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.LvGift */
        {
            ret = destBuf.writeUInt32(this.LvGift);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.EverydayGift */
        {
            ret = destBuf.writeUInt32(this.EverydayGift);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.BuyGiftDiamond */
        {
            ret = destBuf.writeUInt32(this.BuyGiftDiamond);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.VIPShopRefreshLimit */
        {
            ret = destBuf.writeUInt32(this.VIPShopRefreshLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.StrengthBuyLimit */
        {
            ret = destBuf.writeUInt32(this.StrengthBuyLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.PVPBuyLimit */
        {
            ret = destBuf.writeUInt32(this.PVPBuyLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.LevelResetTimes */
        {
            ret = destBuf.writeUInt32(this.LevelResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiveBagNum */
        {
            ret = destBuf.writeUInt32(this.GiveBagNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.SweepLimit */
        {
            ret = destBuf.writeUInt32(this.SweepLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.CutterLimit */
        {
            ret = destBuf.writeUInt32(this.CutterLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AthenaMaxFreeResetTimes */
        {
            ret = destBuf.writeUInt32(this.AthenaMaxFreeResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AthenaMaxPaidResetTimes */
        {
            ret = destBuf.writeUInt32(this.AthenaMaxPaidResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AthenaResetPrice */
        {
            ret = destBuf.writeUInt32(this.AthenaResetPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AthenaGoldAddPercentage */
        {
            ret = destBuf.writeFloat(this.AthenaGoldAddPercentage);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AthenaHeroReviveTimes */
        {
            ret = destBuf.writeUInt32(this.AthenaHeroReviveTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.IsAthenaSweepOpen */
        {
            ret = destBuf.writeUInt32(this.IsAthenaSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.IsRealityRoomSweepOpen */
        {
            ret = destBuf.writeUInt32(this.IsRealityRoomSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.IsFundSweepOpen */
        {
            ret = destBuf.writeUInt32(this.IsFundSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ShopRefreshNumber */
        {
            ret = destBuf.writeUInt32(this.ShopRefreshNumber);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ValleyRewardedBattleTimes */
        {
            ret = destBuf.writeUInt32(this.ValleyRewardedBattleTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.IsAuotReleaseSkill */
        {
            ret = destBuf.writeUInt32(this.IsAuotReleaseSkill);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.TigerAndLotteryNumber */
        {
            ret = destBuf.writeUInt32(this.TigerAndLotteryNumber);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AddStaminaMax */
        {
            ret = destBuf.writeUInt32(this.AddStaminaMax);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.IsOpenGameLevelMassSweep */
        {
            ret = destBuf.writeUInt32(this.IsOpenGameLevelMassSweep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || VIPPrivilege.CURRVERSION < cutVer)
        {
            cutVer = VIPPrivilege.CURRVERSION;
        }

        /* check cutversion */
        if (VIPPrivilege.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.VIPLevel */
        {
            ret = srcBuf.readUInt32(ref this.VIPLevel);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Require */
        {
            ret = srcBuf.readUInt32(ref this.Require);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.LvGift */
        {
            ret = srcBuf.readUInt32(ref this.LvGift);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.EverydayGift */
        {
            ret = srcBuf.readUInt32(ref this.EverydayGift);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.BuyGiftDiamond */
        {
            ret = srcBuf.readUInt32(ref this.BuyGiftDiamond);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.VIPShopRefreshLimit */
        {
            ret = srcBuf.readUInt32(ref this.VIPShopRefreshLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.StrengthBuyLimit */
        {
            ret = srcBuf.readUInt32(ref this.StrengthBuyLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.PVPBuyLimit */
        {
            ret = srcBuf.readUInt32(ref this.PVPBuyLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.LevelResetTimes */
        {
            ret = srcBuf.readUInt32(ref this.LevelResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiveBagNum */
        {
            ret = srcBuf.readUInt32(ref this.GiveBagNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.SweepLimit */
        {
            ret = srcBuf.readUInt32(ref this.SweepLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.CutterLimit */
        {
            ret = srcBuf.readUInt32(ref this.CutterLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AthenaMaxFreeResetTimes */
        {
            ret = srcBuf.readUInt32(ref this.AthenaMaxFreeResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AthenaMaxPaidResetTimes */
        {
            ret = srcBuf.readUInt32(ref this.AthenaMaxPaidResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AthenaResetPrice */
        {
            ret = srcBuf.readUInt32(ref this.AthenaResetPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AthenaGoldAddPercentage */
        {
            ret = srcBuf.readFloat(ref this.AthenaGoldAddPercentage);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AthenaHeroReviveTimes */
        {
            ret = srcBuf.readUInt32(ref this.AthenaHeroReviveTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.IsAthenaSweepOpen */
        {
            ret = srcBuf.readUInt32(ref this.IsAthenaSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.IsRealityRoomSweepOpen */
        {
            ret = srcBuf.readUInt32(ref this.IsRealityRoomSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.IsFundSweepOpen */
        {
            ret = srcBuf.readUInt32(ref this.IsFundSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ShopRefreshNumber */
        {
            ret = srcBuf.readUInt32(ref this.ShopRefreshNumber);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ValleyRewardedBattleTimes */
        {
            ret = srcBuf.readUInt32(ref this.ValleyRewardedBattleTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.IsAuotReleaseSkill */
        {
            ret = srcBuf.readUInt32(ref this.IsAuotReleaseSkill);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.TigerAndLotteryNumber */
        {
            ret = srcBuf.readUInt32(ref this.TigerAndLotteryNumber);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AddStaminaMax */
        {
            ret = srcBuf.readUInt32(ref this.AddStaminaMax);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.IsOpenGameLevelMassSweep */
        {
            ret = srcBuf.readUInt32(ref this.IsOpenGameLevelMassSweep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || VIPPrivilege.CURRVERSION < cutVer)
        {
            cutVer = VIPPrivilege.CURRVERSION;
        }

        /* check cutversion */
        if (VIPPrivilege.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.VIPLevel */
        {
            ret = srcBuf.readUInt32(ref this.VIPLevel);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Require */
        {
            ret = srcBuf.readUInt32(ref this.Require);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.LvGift */
        {
            ret = srcBuf.readUInt32(ref this.LvGift);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.EverydayGift */
        {
            ret = srcBuf.readUInt32(ref this.EverydayGift);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.BuyGiftDiamond */
        {
            ret = srcBuf.readUInt32(ref this.BuyGiftDiamond);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.VIPShopRefreshLimit */
        {
            ret = srcBuf.readUInt32(ref this.VIPShopRefreshLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.StrengthBuyLimit */
        {
            ret = srcBuf.readUInt32(ref this.StrengthBuyLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.PVPBuyLimit */
        {
            ret = srcBuf.readUInt32(ref this.PVPBuyLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.LevelResetTimes */
        {
            ret = srcBuf.readUInt32(ref this.LevelResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiveBagNum */
        {
            ret = srcBuf.readUInt32(ref this.GiveBagNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.SweepLimit */
        {
            ret = srcBuf.readUInt32(ref this.SweepLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.CutterLimit */
        {
            ret = srcBuf.readUInt32(ref this.CutterLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AthenaMaxFreeResetTimes */
        {
            ret = srcBuf.readUInt32(ref this.AthenaMaxFreeResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AthenaMaxPaidResetTimes */
        {
            ret = srcBuf.readUInt32(ref this.AthenaMaxPaidResetTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AthenaResetPrice */
        {
            ret = srcBuf.readUInt32(ref this.AthenaResetPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AthenaGoldAddPercentage */
        {
            ret = srcBuf.readFloat(ref this.AthenaGoldAddPercentage);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AthenaHeroReviveTimes */
        {
            ret = srcBuf.readUInt32(ref this.AthenaHeroReviveTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.IsAthenaSweepOpen */
        {
            ret = srcBuf.readUInt32(ref this.IsAthenaSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.IsRealityRoomSweepOpen */
        {
            ret = srcBuf.readUInt32(ref this.IsRealityRoomSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.IsFundSweepOpen */
        {
            ret = srcBuf.readUInt32(ref this.IsFundSweepOpen);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ShopRefreshNumber */
        {
            ret = srcBuf.readUInt32(ref this.ShopRefreshNumber);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ValleyRewardedBattleTimes */
        {
            ret = srcBuf.readUInt32(ref this.ValleyRewardedBattleTimes);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.IsAuotReleaseSkill */
        {
            ret = srcBuf.readUInt32(ref this.IsAuotReleaseSkill);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.TigerAndLotteryNumber */
        {
            ret = srcBuf.readUInt32(ref this.TigerAndLotteryNumber);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AddStaminaMax */
        {
            ret = srcBuf.readUInt32(ref this.AddStaminaMax);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.IsOpenGameLevelMassSweep */
        {
            ret = srcBuf.readUInt32(ref this.IsOpenGameLevelMassSweep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.VIPLevel */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[VIPLevel]", "{0:d}", this.VIPLevel);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Require */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Require]", "{0:d}", this.Require);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.LvGift */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LvGift]", "{0:d}", this.LvGift);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.EverydayGift */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[EverydayGift]", "{0:d}", this.EverydayGift);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.BuyGiftDiamond */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[BuyGiftDiamond]", "{0:d}", this.BuyGiftDiamond);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.VIPShopRefreshLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[VIPShopRefreshLimit]", "{0:d}", this.VIPShopRefreshLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StrengthBuyLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[StrengthBuyLimit]", "{0:d}", this.StrengthBuyLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.PVPBuyLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PVPBuyLimit]", "{0:d}", this.PVPBuyLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.LevelResetTimes */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LevelResetTimes]", "{0:d}", this.LevelResetTimes);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiveBagNum */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiveBagNum]", "{0:d}", this.GiveBagNum);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.SweepLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[SweepLimit]", "{0:d}", this.SweepLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.CutterLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CutterLimit]", "{0:d}", this.CutterLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AthenaMaxFreeResetTimes */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AthenaMaxFreeResetTimes]", "{0:d}", this.AthenaMaxFreeResetTimes);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AthenaMaxPaidResetTimes */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AthenaMaxPaidResetTimes]", "{0:d}", this.AthenaMaxPaidResetTimes);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AthenaResetPrice */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AthenaResetPrice]", "{0:d}", this.AthenaResetPrice);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AthenaGoldAddPercentage */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AthenaGoldAddPercentage]", "{0:g}", this.AthenaGoldAddPercentage);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AthenaHeroReviveTimes */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AthenaHeroReviveTimes]", "{0:d}", this.AthenaHeroReviveTimes);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.IsAthenaSweepOpen */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[IsAthenaSweepOpen]", "{0:d}", this.IsAthenaSweepOpen);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.IsRealityRoomSweepOpen */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[IsRealityRoomSweepOpen]", "{0:d}", this.IsRealityRoomSweepOpen);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.IsFundSweepOpen */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[IsFundSweepOpen]", "{0:d}", this.IsFundSweepOpen);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ShopRefreshNumber */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ShopRefreshNumber]", "{0:d}", this.ShopRefreshNumber);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ValleyRewardedBattleTimes */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ValleyRewardedBattleTimes]", "{0:d}", this.ValleyRewardedBattleTimes);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.IsAuotReleaseSkill */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[IsAuotReleaseSkill]", "{0:d}", this.IsAuotReleaseSkill);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.TigerAndLotteryNumber */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[TigerAndLotteryNumber]", "{0:d}", this.TigerAndLotteryNumber);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AddStaminaMax */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AddStaminaMax]", "{0:d}", this.AddStaminaMax);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.IsOpenGameLevelMassSweep */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[IsOpenGameLevelMassSweep]", "{0:d}", this.IsOpenGameLevelMassSweep);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* VIP充值表 */
public class VIPRecharge : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 VIPLevel; // VIP等级
    public UInt32 OriPrice; // 原价
    public UInt32 DiscountPrice; // 折扣价
    public UInt32 GetNum; // 获得数量
    public UInt32 Rebate; // 返利
    public UInt32 TitleType; // 标签类型
    public byte[] Pic;

    /* construct methods */
    public VIPRecharge()
    {
        Pic = new byte[256];
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || VIPRecharge.CURRVERSION < cutVer)
        {
            cutVer = VIPRecharge.CURRVERSION;
        }

        /* check cutversion */
        if (VIPRecharge.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.VIPLevel */
        {
            ret = destBuf.writeUInt32(this.VIPLevel);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.OriPrice */
        {
            ret = destBuf.writeUInt32(this.OriPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DiscountPrice */
        {
            ret = destBuf.writeUInt32(this.DiscountPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GetNum */
        {
            ret = destBuf.writeUInt32(this.GetNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Rebate */
        {
            ret = destBuf.writeUInt32(this.Rebate);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.TitleType */
        {
            ret = destBuf.writeUInt32(this.TitleType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Pic */
        {
            /* record sizeinfo position */
            Int32 sizePos4Pic = destBuf.getUsedSize();

            /* reserve space for sizeinfo */
            ret = destBuf.reserve(sizeof(UInt32));
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* record real-data's begin postion in buf */
            Int32 beginPos4Pic = destBuf.getUsedSize();

            Int32 realSize4Pic = TdrTypeUtil.cstrlen(this.Pic);

            if (realSize4Pic >= 256)
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_TOO_BIG;
            }

            /* pack */
            ret = destBuf.writeCString(this.Pic, realSize4Pic);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* gurantee string or wstring terminated with null character */
            ret = destBuf.writeUInt8(0x00);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* set sizeinfo for this.Pic */
            Int32 size4Pic = destBuf.getUsedSize() - beginPos4Pic;
            ret = destBuf.writeUInt32((UInt32)(size4Pic), sizePos4Pic);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || VIPRecharge.CURRVERSION < cutVer)
        {
            cutVer = VIPRecharge.CURRVERSION;
        }

        /* check cutversion */
        if (VIPRecharge.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.VIPLevel */
        {
            ret = srcBuf.readUInt32(ref this.VIPLevel);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.OriPrice */
        {
            ret = srcBuf.readUInt32(ref this.OriPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DiscountPrice */
        {
            ret = srcBuf.readUInt32(ref this.DiscountPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GetNum */
        {
            ret = srcBuf.readUInt32(ref this.GetNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Rebate */
        {
            ret = srcBuf.readUInt32(ref this.Rebate);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.TitleType */
        {
            ret = srcBuf.readUInt32(ref this.TitleType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Pic */
        {
            /* get sizeinfo for this.Pic */
            UInt32 size4Pic = 0;
            ret = srcBuf.readUInt32(ref size4Pic);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* check whether data in buffer are enough */
            if ((int)size4Pic > srcBuf.getLeftSize())
            {
                return TdrError.ErrorType.TDR_ERR_SHORT_BUF_FOR_READ;
            }

            /* check whether sizeinfo is valid */
            if ((int)size4Pic > this.Pic.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_TOO_BIG;
            }

            /* string or wstring must contains a null character */
            if (1 > size4Pic)
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_TOO_SMALL;
            }

            /* unpack */
            ret = srcBuf.readCString(ref this.Pic, (int)size4Pic);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* check whether string-content is consistent with sizeinfo */
            if (0 != this.Pic[(int)size4Pic - 1])
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_CONFLICT;
            }
            Int32 realSize4Pic = TdrTypeUtil.cstrlen(this.Pic) + 1;
            if (size4Pic != realSize4Pic)
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_CONFLICT;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || VIPRecharge.CURRVERSION < cutVer)
        {
            cutVer = VIPRecharge.CURRVERSION;
        }

        /* check cutversion */
        if (VIPRecharge.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.VIPLevel */
        {
            ret = srcBuf.readUInt32(ref this.VIPLevel);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.OriPrice */
        {
            ret = srcBuf.readUInt32(ref this.OriPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DiscountPrice */
        {
            ret = srcBuf.readUInt32(ref this.DiscountPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GetNum */
        {
            ret = srcBuf.readUInt32(ref this.GetNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Rebate */
        {
            ret = srcBuf.readUInt32(ref this.Rebate);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.TitleType */
        {
            ret = srcBuf.readUInt32(ref this.TitleType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Pic */
        {
            Int32 size4Pic = 256;

            /* load */
            ret = srcBuf.readCString(ref this.Pic, (int)size4Pic);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.VIPLevel */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[VIPLevel]", "{0:d}", this.VIPLevel);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.OriPrice */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[OriPrice]", "{0:d}", this.OriPrice);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DiscountPrice */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DiscountPrice]", "{0:d}", this.DiscountPrice);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GetNum */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GetNum]", "{0:d}", this.GetNum);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Rebate */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Rebate]", "{0:d}", this.Rebate);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.TitleType */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[TitleType]", "{0:d}", this.TitleType);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Pic */
        ret = TdrBufUtil.printString(ref destBuf, indent, separator, "[Pic]", this.Pic);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* 每日签到表 */
public class PerdaySignIn : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 Month;
    public UInt32 LoggedInDays;
    public UInt32 GiftId; // 每日签到礼包
    public byte IsDoubleForVip;
    public UInt32 DoubleVipLv; // 奖励翻倍需要vip等级至少达到多少级

    /* construct methods */
    public PerdaySignIn()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PerdaySignIn.CURRVERSION < cutVer)
        {
            cutVer = PerdaySignIn.CURRVERSION;
        }

        /* check cutversion */
        if (PerdaySignIn.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Month */
        {
            ret = destBuf.writeUInt32(this.Month);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.LoggedInDays */
        {
            ret = destBuf.writeUInt32(this.LoggedInDays);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftId */
        {
            ret = destBuf.writeUInt32(this.GiftId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.IsDoubleForVip */
        {
            ret = destBuf.writeUInt8(this.IsDoubleForVip);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DoubleVipLv */
        {
            ret = destBuf.writeUInt32(this.DoubleVipLv);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PerdaySignIn.CURRVERSION < cutVer)
        {
            cutVer = PerdaySignIn.CURRVERSION;
        }

        /* check cutversion */
        if (PerdaySignIn.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Month */
        {
            ret = srcBuf.readUInt32(ref this.Month);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.LoggedInDays */
        {
            ret = srcBuf.readUInt32(ref this.LoggedInDays);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftId */
        {
            ret = srcBuf.readUInt32(ref this.GiftId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.IsDoubleForVip */
        {
            ret = srcBuf.readUInt8(ref this.IsDoubleForVip);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DoubleVipLv */
        {
            ret = srcBuf.readUInt32(ref this.DoubleVipLv);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PerdaySignIn.CURRVERSION < cutVer)
        {
            cutVer = PerdaySignIn.CURRVERSION;
        }

        /* check cutversion */
        if (PerdaySignIn.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Month */
        {
            ret = srcBuf.readUInt32(ref this.Month);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.LoggedInDays */
        {
            ret = srcBuf.readUInt32(ref this.LoggedInDays);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftId */
        {
            ret = srcBuf.readUInt32(ref this.GiftId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.IsDoubleForVip */
        {
            ret = srcBuf.readUInt8(ref this.IsDoubleForVip);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DoubleVipLv */
        {
            ret = srcBuf.readUInt32(ref this.DoubleVipLv);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Month */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Month]", "{0:d}", this.Month);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.LoggedInDays */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LoggedInDays]", "{0:d}", this.LoggedInDays);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftId */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftId]", "{0:d}", this.GiftId);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.IsDoubleForVip */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[IsDoubleForVip]", "0x{0:x2}", this.IsDoubleForVip);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DoubleVipLv */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DoubleVipLv]", "{0:d}", this.DoubleVipLv);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* 在线奖励表 */
public class OnlineAwardConf : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 Times; // 时间
    public UInt32 GiftId; // 礼包

    /* construct methods */
    public OnlineAwardConf()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || OnlineAwardConf.CURRVERSION < cutVer)
        {
            cutVer = OnlineAwardConf.CURRVERSION;
        }

        /* check cutversion */
        if (OnlineAwardConf.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Times */
        {
            ret = destBuf.writeUInt32(this.Times);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftId */
        {
            ret = destBuf.writeUInt32(this.GiftId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || OnlineAwardConf.CURRVERSION < cutVer)
        {
            cutVer = OnlineAwardConf.CURRVERSION;
        }

        /* check cutversion */
        if (OnlineAwardConf.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Times */
        {
            ret = srcBuf.readUInt32(ref this.Times);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftId */
        {
            ret = srcBuf.readUInt32(ref this.GiftId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || OnlineAwardConf.CURRVERSION < cutVer)
        {
            cutVer = OnlineAwardConf.CURRVERSION;
        }

        /* check cutversion */
        if (OnlineAwardConf.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Times */
        {
            ret = srcBuf.readUInt32(ref this.Times);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftId */
        {
            ret = srcBuf.readUInt32(ref this.GiftId);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Times */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Times]", "{0:d}", this.Times);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftId */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftId]", "{0:d}", this.GiftId);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* 封测登陆赠送 */
public class TestLoginAward : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 Seq; // 序号
    public UInt32 DiamondNum; // 赠送钻石数
    public UInt32 GiftItemID; // 赠送物品id
    public UInt32 GiftItemNum; // 赠送物品数量

    /* construct methods */
    public TestLoginAward()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || TestLoginAward.CURRVERSION < cutVer)
        {
            cutVer = TestLoginAward.CURRVERSION;
        }

        /* check cutversion */
        if (TestLoginAward.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Seq */
        {
            ret = destBuf.writeUInt32(this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DiamondNum */
        {
            ret = destBuf.writeUInt32(this.DiamondNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftItemID */
        {
            ret = destBuf.writeUInt32(this.GiftItemID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftItemNum */
        {
            ret = destBuf.writeUInt32(this.GiftItemNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || TestLoginAward.CURRVERSION < cutVer)
        {
            cutVer = TestLoginAward.CURRVERSION;
        }

        /* check cutversion */
        if (TestLoginAward.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Seq */
        {
            ret = srcBuf.readUInt32(ref this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DiamondNum */
        {
            ret = srcBuf.readUInt32(ref this.DiamondNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftItemID */
        {
            ret = srcBuf.readUInt32(ref this.GiftItemID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftItemNum */
        {
            ret = srcBuf.readUInt32(ref this.GiftItemNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || TestLoginAward.CURRVERSION < cutVer)
        {
            cutVer = TestLoginAward.CURRVERSION;
        }

        /* check cutversion */
        if (TestLoginAward.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Seq */
        {
            ret = srcBuf.readUInt32(ref this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DiamondNum */
        {
            ret = srcBuf.readUInt32(ref this.DiamondNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftItemID */
        {
            ret = srcBuf.readUInt32(ref this.GiftItemID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftItemNum */
        {
            ret = srcBuf.readUInt32(ref this.GiftItemNum);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Seq */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Seq]", "{0:d}", this.Seq);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DiamondNum */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DiamondNum]", "{0:d}", this.DiamondNum);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftItemID */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftItemID]", "{0:d}", this.GiftItemID);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftItemNum */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftItemNum]", "{0:d}", this.GiftItemNum);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* 留存奖励 */
public class RetainReward : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 Seq;
    public UInt32 Minute;
    public byte Type;
    public UInt32 Id;
    public UInt32 Num;

    /* construct methods */
    public RetainReward()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || RetainReward.CURRVERSION < cutVer)
        {
            cutVer = RetainReward.CURRVERSION;
        }

        /* check cutversion */
        if (RetainReward.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Seq */
        {
            ret = destBuf.writeUInt32(this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Minute */
        {
            ret = destBuf.writeUInt32(this.Minute);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Type */
        {
            ret = destBuf.writeUInt8(this.Type);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Id */
        {
            ret = destBuf.writeUInt32(this.Id);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Num */
        {
            ret = destBuf.writeUInt32(this.Num);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || RetainReward.CURRVERSION < cutVer)
        {
            cutVer = RetainReward.CURRVERSION;
        }

        /* check cutversion */
        if (RetainReward.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Seq */
        {
            ret = srcBuf.readUInt32(ref this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Minute */
        {
            ret = srcBuf.readUInt32(ref this.Minute);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Type */
        {
            ret = srcBuf.readUInt8(ref this.Type);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Id */
        {
            ret = srcBuf.readUInt32(ref this.Id);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Num */
        {
            ret = srcBuf.readUInt32(ref this.Num);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || RetainReward.CURRVERSION < cutVer)
        {
            cutVer = RetainReward.CURRVERSION;
        }

        /* check cutversion */
        if (RetainReward.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Seq */
        {
            ret = srcBuf.readUInt32(ref this.Seq);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Minute */
        {
            ret = srcBuf.readUInt32(ref this.Minute);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Type */
        {
            ret = srcBuf.readUInt8(ref this.Type);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Id */
        {
            ret = srcBuf.readUInt32(ref this.Id);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Num */
        {
            ret = srcBuf.readUInt32(ref this.Num);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Seq */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Seq]", "{0:d}", this.Seq);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Minute */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Minute]", "{0:d}", this.Minute);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Type */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Type]", "0x{0:x2}", this.Type);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Id */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Id]", "{0:d}", this.Id);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Num */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Num]", "{0:d}", this.Num);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


}
