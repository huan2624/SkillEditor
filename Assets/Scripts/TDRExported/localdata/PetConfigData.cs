/* This file is generated by tdr. */
/* No manual modification is permitted. */

/* metalib version: 1 */
/* metalib md5sum: d985393ca2a92be8ef51aa2c9f73fdd7 */

/* creation time: Wed Jul 16 17:37:32 2014 */
/* tdr version: 2.6.7, build at 20131230 */


using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;
using tsf4g_tdr_csharp;

namespace wl_res
{




/* »ù´¡ÊôÐÔ */
public class PetBaseAttr : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 PetNo;
    public byte TabID;
    public byte[] RoleName;
    public UInt32 ResID;
    public byte Level;
    public byte Star;
    public byte StandType;
    public byte Job;
    public float Scale;
    public UInt32 Attack;
    public UInt16 AttackStep;
    public UInt32 Defense;
    public UInt16 DefenseStep;
    public UInt32 Hp;
    public UInt16 HpStep;
    public UInt16 Crit;
    public UInt16 Crick;
    public UInt16 DaoDi;
    public UInt16 FuKong;
    public UInt16 CritDefense;
    public UInt16 CrickDefense;
    public UInt16 DaoDiDefense;
    public UInt16 FuKongDefense;
    public byte StrongAvoid;
    public byte OnGroundAvoid;
    public byte OnSkyAvoid;
    public byte DefeatAvoid;
    public float AttackSpeed;
    public float MoveSpeed;
    public float DashSpeed;
    public UInt32 GobackDistance;
    public float HpRenewSpeed;
    public UInt32 SellPrice;
    public UInt32 CommonSkillID;
    public UInt32[] Skills;
    public float StepEffectEnableRadius;

    /* construct methods */
    public PetBaseAttr()
    {
        RoleName = new byte[20];
        Skills = new UInt32[10];
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetBaseAttr.CURRVERSION < cutVer)
        {
            cutVer = PetBaseAttr.CURRVERSION;
        }

        /* check cutversion */
        if (PetBaseAttr.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.PetNo */
        {
            ret = destBuf.writeUInt32(this.PetNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.TabID */
        {
            ret = destBuf.writeUInt8(this.TabID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.RoleName */
        {
            /* record sizeinfo position */
            Int32 sizePos4RoleName = destBuf.getUsedSize();

            /* reserve space for sizeinfo */
            ret = destBuf.reserve(sizeof(UInt32));
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* record real-data's begin postion in buf */
            Int32 beginPos4RoleName = destBuf.getUsedSize();

            Int32 realSize4RoleName = TdrTypeUtil.cstrlen(this.RoleName);

            if (realSize4RoleName >= 20)
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_TOO_BIG;
            }

            /* pack */
            ret = destBuf.writeCString(this.RoleName, realSize4RoleName);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* gurantee string or wstring terminated with null character */
            ret = destBuf.writeUInt8(0x00);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* set sizeinfo for this.RoleName */
            Int32 size4RoleName = destBuf.getUsedSize() - beginPos4RoleName;
            ret = destBuf.writeUInt32((UInt32)(size4RoleName), sizePos4RoleName);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ResID */
        {
            ret = destBuf.writeUInt32(this.ResID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Level */
        {
            ret = destBuf.writeUInt8(this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Star */
        {
            ret = destBuf.writeUInt8(this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.StandType */
        {
            ret = destBuf.writeUInt8(this.StandType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Job */
        {
            ret = destBuf.writeUInt8(this.Job);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Scale */
        {
            ret = destBuf.writeFloat(this.Scale);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Attack */
        {
            ret = destBuf.writeUInt32(this.Attack);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AttackStep */
        {
            ret = destBuf.writeUInt16(this.AttackStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Defense */
        {
            ret = destBuf.writeUInt32(this.Defense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DefenseStep */
        {
            ret = destBuf.writeUInt16(this.DefenseStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Hp */
        {
            ret = destBuf.writeUInt32(this.Hp);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.HpStep */
        {
            ret = destBuf.writeUInt16(this.HpStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Crit */
        {
            ret = destBuf.writeUInt16(this.Crit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Crick */
        {
            ret = destBuf.writeUInt16(this.Crick);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DaoDi */
        {
            ret = destBuf.writeUInt16(this.DaoDi);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.FuKong */
        {
            ret = destBuf.writeUInt16(this.FuKong);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.CritDefense */
        {
            ret = destBuf.writeUInt16(this.CritDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.CrickDefense */
        {
            ret = destBuf.writeUInt16(this.CrickDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DaoDiDefense */
        {
            ret = destBuf.writeUInt16(this.DaoDiDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.FuKongDefense */
        {
            ret = destBuf.writeUInt16(this.FuKongDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.StrongAvoid */
        {
            ret = destBuf.writeUInt8(this.StrongAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.OnGroundAvoid */
        {
            ret = destBuf.writeUInt8(this.OnGroundAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.OnSkyAvoid */
        {
            ret = destBuf.writeUInt8(this.OnSkyAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DefeatAvoid */
        {
            ret = destBuf.writeUInt8(this.DefeatAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.AttackSpeed */
        {
            ret = destBuf.writeFloat(this.AttackSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.MoveSpeed */
        {
            ret = destBuf.writeFloat(this.MoveSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.DashSpeed */
        {
            ret = destBuf.writeFloat(this.DashSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GobackDistance */
        {
            ret = destBuf.writeUInt32(this.GobackDistance);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.HpRenewSpeed */
        {
            ret = destBuf.writeFloat(this.HpRenewSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.SellPrice */
        {
            ret = destBuf.writeUInt32(this.SellPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.CommonSkillID */
        {
            ret = destBuf.writeUInt32(this.CommonSkillID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Skills */
        {
            for (Int32 Skills_i = 0; Skills_i < 10; Skills_i++)
            {
                ret = destBuf.writeUInt32(this.Skills[Skills_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* pack member: this.StepEffectEnableRadius */
        {
            ret = destBuf.writeFloat(this.StepEffectEnableRadius);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetBaseAttr.CURRVERSION < cutVer)
        {
            cutVer = PetBaseAttr.CURRVERSION;
        }

        /* check cutversion */
        if (PetBaseAttr.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.PetNo */
        {
            ret = srcBuf.readUInt32(ref this.PetNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.TabID */
        {
            ret = srcBuf.readUInt8(ref this.TabID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.RoleName */
        {
            /* get sizeinfo for this.RoleName */
            UInt32 size4RoleName = 0;
            ret = srcBuf.readUInt32(ref size4RoleName);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* check whether data in buffer are enough */
            if ((int)size4RoleName > srcBuf.getLeftSize())
            {
                return TdrError.ErrorType.TDR_ERR_SHORT_BUF_FOR_READ;
            }

            /* check whether sizeinfo is valid */
            if ((int)size4RoleName > this.RoleName.GetLength(0))
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_TOO_BIG;
            }

            /* string or wstring must contains a null character */
            if (1 > size4RoleName)
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_TOO_SMALL;
            }

            /* unpack */
            ret = srcBuf.readCString(ref this.RoleName, (int)size4RoleName);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

            /* check whether string-content is consistent with sizeinfo */
            if (0 != this.RoleName[(int)size4RoleName - 1])
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_CONFLICT;
            }
            Int32 realSize4RoleName = TdrTypeUtil.cstrlen(this.RoleName) + 1;
            if (size4RoleName != realSize4RoleName)
            {
                return TdrError.ErrorType.TDR_ERR_STR_LEN_CONFLICT;
            }
        }

        /* unpack member: this.ResID */
        {
            ret = srcBuf.readUInt32(ref this.ResID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.StandType */
        {
            ret = srcBuf.readUInt8(ref this.StandType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Job */
        {
            ret = srcBuf.readUInt8(ref this.Job);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Scale */
        {
            ret = srcBuf.readFloat(ref this.Scale);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Attack */
        {
            ret = srcBuf.readUInt32(ref this.Attack);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AttackStep */
        {
            ret = srcBuf.readUInt16(ref this.AttackStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Defense */
        {
            ret = srcBuf.readUInt32(ref this.Defense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DefenseStep */
        {
            ret = srcBuf.readUInt16(ref this.DefenseStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Hp */
        {
            ret = srcBuf.readUInt32(ref this.Hp);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.HpStep */
        {
            ret = srcBuf.readUInt16(ref this.HpStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Crit */
        {
            ret = srcBuf.readUInt16(ref this.Crit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Crick */
        {
            ret = srcBuf.readUInt16(ref this.Crick);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DaoDi */
        {
            ret = srcBuf.readUInt16(ref this.DaoDi);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.FuKong */
        {
            ret = srcBuf.readUInt16(ref this.FuKong);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.CritDefense */
        {
            ret = srcBuf.readUInt16(ref this.CritDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.CrickDefense */
        {
            ret = srcBuf.readUInt16(ref this.CrickDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DaoDiDefense */
        {
            ret = srcBuf.readUInt16(ref this.DaoDiDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.FuKongDefense */
        {
            ret = srcBuf.readUInt16(ref this.FuKongDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.StrongAvoid */
        {
            ret = srcBuf.readUInt8(ref this.StrongAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.OnGroundAvoid */
        {
            ret = srcBuf.readUInt8(ref this.OnGroundAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.OnSkyAvoid */
        {
            ret = srcBuf.readUInt8(ref this.OnSkyAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DefeatAvoid */
        {
            ret = srcBuf.readUInt8(ref this.DefeatAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.AttackSpeed */
        {
            ret = srcBuf.readFloat(ref this.AttackSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.MoveSpeed */
        {
            ret = srcBuf.readFloat(ref this.MoveSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.DashSpeed */
        {
            ret = srcBuf.readFloat(ref this.DashSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GobackDistance */
        {
            ret = srcBuf.readUInt32(ref this.GobackDistance);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.HpRenewSpeed */
        {
            ret = srcBuf.readFloat(ref this.HpRenewSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.SellPrice */
        {
            ret = srcBuf.readUInt32(ref this.SellPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.CommonSkillID */
        {
            ret = srcBuf.readUInt32(ref this.CommonSkillID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Skills */
        {
            for (Int32 Skills_i = 0; Skills_i < 10; Skills_i++)
            {
                ret = srcBuf.readUInt32(ref this.Skills[Skills_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* unpack member: this.StepEffectEnableRadius */
        {
            ret = srcBuf.readFloat(ref this.StepEffectEnableRadius);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetBaseAttr.CURRVERSION < cutVer)
        {
            cutVer = PetBaseAttr.CURRVERSION;
        }

        /* check cutversion */
        if (PetBaseAttr.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.PetNo */
        {
            ret = srcBuf.readUInt32(ref this.PetNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.TabID */
        {
            ret = srcBuf.readUInt8(ref this.TabID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.RoleName */
        {
            Int32 size4RoleName = 20;

            /* load */
            ret = srcBuf.readCString(ref this.RoleName, (int)size4RoleName);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }

        }

        /* load member: this.ResID */
        {
            ret = srcBuf.readUInt32(ref this.ResID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.StandType */
        {
            ret = srcBuf.readUInt8(ref this.StandType);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Job */
        {
            ret = srcBuf.readUInt8(ref this.Job);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Scale */
        {
            ret = srcBuf.readFloat(ref this.Scale);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Attack */
        {
            ret = srcBuf.readUInt32(ref this.Attack);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AttackStep */
        {
            ret = srcBuf.readUInt16(ref this.AttackStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Defense */
        {
            ret = srcBuf.readUInt32(ref this.Defense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DefenseStep */
        {
            ret = srcBuf.readUInt16(ref this.DefenseStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Hp */
        {
            ret = srcBuf.readUInt32(ref this.Hp);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.HpStep */
        {
            ret = srcBuf.readUInt16(ref this.HpStep);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Crit */
        {
            ret = srcBuf.readUInt16(ref this.Crit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Crick */
        {
            ret = srcBuf.readUInt16(ref this.Crick);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DaoDi */
        {
            ret = srcBuf.readUInt16(ref this.DaoDi);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.FuKong */
        {
            ret = srcBuf.readUInt16(ref this.FuKong);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.CritDefense */
        {
            ret = srcBuf.readUInt16(ref this.CritDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.CrickDefense */
        {
            ret = srcBuf.readUInt16(ref this.CrickDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DaoDiDefense */
        {
            ret = srcBuf.readUInt16(ref this.DaoDiDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.FuKongDefense */
        {
            ret = srcBuf.readUInt16(ref this.FuKongDefense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.StrongAvoid */
        {
            ret = srcBuf.readUInt8(ref this.StrongAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.OnGroundAvoid */
        {
            ret = srcBuf.readUInt8(ref this.OnGroundAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.OnSkyAvoid */
        {
            ret = srcBuf.readUInt8(ref this.OnSkyAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DefeatAvoid */
        {
            ret = srcBuf.readUInt8(ref this.DefeatAvoid);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.AttackSpeed */
        {
            ret = srcBuf.readFloat(ref this.AttackSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.MoveSpeed */
        {
            ret = srcBuf.readFloat(ref this.MoveSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.DashSpeed */
        {
            ret = srcBuf.readFloat(ref this.DashSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GobackDistance */
        {
            ret = srcBuf.readUInt32(ref this.GobackDistance);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.HpRenewSpeed */
        {
            ret = srcBuf.readFloat(ref this.HpRenewSpeed);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.SellPrice */
        {
            ret = srcBuf.readUInt32(ref this.SellPrice);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.CommonSkillID */
        {
            ret = srcBuf.readUInt32(ref this.CommonSkillID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Skills */
        {
            for (Int32 Skills_i = 0; Skills_i < 10; Skills_i++)
            {
                ret = srcBuf.readUInt32(ref this.Skills[Skills_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* load member: this.StepEffectEnableRadius */
        {
            ret = srcBuf.readFloat(ref this.StepEffectEnableRadius);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.PetNo */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PetNo]", "{0:d}", this.PetNo);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.TabID */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[TabID]", "0x{0:x2}", this.TabID);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.RoleName */
        ret = TdrBufUtil.printString(ref destBuf, indent, separator, "[RoleName]", this.RoleName);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ResID */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ResID]", "{0:d}", this.ResID);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Level */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Level]", "0x{0:x2}", this.Level);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Star */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Star]", "0x{0:x2}", this.Star);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StandType */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[StandType]", "0x{0:x2}", this.StandType);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Job */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Job]", "0x{0:x2}", this.Job);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Scale */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Scale]", "{0:g}", this.Scale);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Attack */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Attack]", "{0:d}", this.Attack);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AttackStep */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AttackStep]", "{0:d}", this.AttackStep);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Defense */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Defense]", "{0:d}", this.Defense);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DefenseStep */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DefenseStep]", "{0:d}", this.DefenseStep);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Hp */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Hp]", "{0:d}", this.Hp);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.HpStep */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[HpStep]", "{0:d}", this.HpStep);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Crit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Crit]", "{0:d}", this.Crit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Crick */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Crick]", "{0:d}", this.Crick);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DaoDi */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DaoDi]", "{0:d}", this.DaoDi);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.FuKong */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[FuKong]", "{0:d}", this.FuKong);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.CritDefense */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CritDefense]", "{0:d}", this.CritDefense);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.CrickDefense */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CrickDefense]", "{0:d}", this.CrickDefense);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DaoDiDefense */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DaoDiDefense]", "{0:d}", this.DaoDiDefense);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.FuKongDefense */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[FuKongDefense]", "{0:d}", this.FuKongDefense);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StrongAvoid */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[StrongAvoid]", "0x{0:x2}", this.StrongAvoid);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.OnGroundAvoid */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[OnGroundAvoid]", "0x{0:x2}", this.OnGroundAvoid);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.OnSkyAvoid */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[OnSkyAvoid]", "0x{0:x2}", this.OnSkyAvoid);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DefeatAvoid */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DefeatAvoid]", "0x{0:x2}", this.DefeatAvoid);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.AttackSpeed */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[AttackSpeed]", "{0:g}", this.AttackSpeed);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.MoveSpeed */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[MoveSpeed]", "{0:g}", this.MoveSpeed);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.DashSpeed */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[DashSpeed]", "{0:g}", this.DashSpeed);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GobackDistance */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GobackDistance]", "{0:d}", this.GobackDistance);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.HpRenewSpeed */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[HpRenewSpeed]", "{0:g}", this.HpRenewSpeed);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.SellPrice */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[SellPrice]", "{0:d}", this.SellPrice);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.CommonSkillID */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CommonSkillID]", "{0:d}", this.CommonSkillID);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Skills */
        ret = TdrBufUtil.printArray(ref destBuf, indent, separator, "[Skills]", 10);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }
        for (Int32 Skills_i = 0; Skills_i < 10; Skills_i++)
        {
            ret = destBuf.sprintf("{0:d}", this.Skills[Skills_i]);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        ret = destBuf.sprintf("{0}",separator);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StepEffectEnableRadius */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[StepEffectEnableRadius]", "{0:g}", this.StepEffectEnableRadius);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* ÐÇ¼¶µÈ¼¶ */
public class PetLevel : tsf4g_csharp_interface
{
    /* public members */
    public byte Star;
    public byte LevelLimit;
    public byte StrengthenLimit;
    public byte[] EquipSlot;

    /* construct methods */
    public PetLevel()
    {
        EquipSlot = new byte[5];
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetLevel.CURRVERSION < cutVer)
        {
            cutVer = PetLevel.CURRVERSION;
        }

        /* check cutversion */
        if (PetLevel.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Star */
        {
            ret = destBuf.writeUInt8(this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.LevelLimit */
        {
            ret = destBuf.writeUInt8(this.LevelLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.StrengthenLimit */
        {
            ret = destBuf.writeUInt8(this.StrengthenLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.EquipSlot */
        {
            for (Int32 EquipSlot_i = 0; EquipSlot_i < 5; EquipSlot_i++)
            {
                ret = destBuf.writeUInt8(this.EquipSlot[EquipSlot_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetLevel.CURRVERSION < cutVer)
        {
            cutVer = PetLevel.CURRVERSION;
        }

        /* check cutversion */
        if (PetLevel.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.LevelLimit */
        {
            ret = srcBuf.readUInt8(ref this.LevelLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.StrengthenLimit */
        {
            ret = srcBuf.readUInt8(ref this.StrengthenLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.EquipSlot */
        {
            for (Int32 EquipSlot_i = 0; EquipSlot_i < 5; EquipSlot_i++)
            {
                ret = srcBuf.readUInt8(ref this.EquipSlot[EquipSlot_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetLevel.CURRVERSION < cutVer)
        {
            cutVer = PetLevel.CURRVERSION;
        }

        /* check cutversion */
        if (PetLevel.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.LevelLimit */
        {
            ret = srcBuf.readUInt8(ref this.LevelLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.StrengthenLimit */
        {
            ret = srcBuf.readUInt8(ref this.StrengthenLimit);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.EquipSlot */
        {
            for (Int32 EquipSlot_i = 0; EquipSlot_i < 5; EquipSlot_i++)
            {
                ret = srcBuf.readUInt8(ref this.EquipSlot[EquipSlot_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Star */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Star]", "0x{0:x2}", this.Star);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.LevelLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LevelLimit]", "0x{0:x2}", this.LevelLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StrengthenLimit */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[StrengthenLimit]", "0x{0:x2}", this.StrengthenLimit);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.EquipSlot */
        ret = TdrBufUtil.printArray(ref destBuf, indent, separator, "[EquipSlot]", 5);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }
        for (Int32 EquipSlot_i = 0; EquipSlot_i < 5; EquipSlot_i++)
        {
            ret = destBuf.sprintf("0x{0:x2}", this.EquipSlot[EquipSlot_i]);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        ret = destBuf.sprintf("{0}",separator);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* µÈ¼¶¾­Ñé */
public class PetUpgradeExp : tsf4g_csharp_interface
{
    /* public members */
    public byte Level;
    public UInt32[] StarNeedExp;

    /* construct methods */
    public PetUpgradeExp()
    {
        StarNeedExp = new UInt32[6];
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetUpgradeExp.CURRVERSION < cutVer)
        {
            cutVer = PetUpgradeExp.CURRVERSION;
        }

        /* check cutversion */
        if (PetUpgradeExp.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Level */
        {
            ret = destBuf.writeUInt8(this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.StarNeedExp */
        {
            for (Int32 StarNeedExp_i = 0; StarNeedExp_i < 6; StarNeedExp_i++)
            {
                ret = destBuf.writeUInt32(this.StarNeedExp[StarNeedExp_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetUpgradeExp.CURRVERSION < cutVer)
        {
            cutVer = PetUpgradeExp.CURRVERSION;
        }

        /* check cutversion */
        if (PetUpgradeExp.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.StarNeedExp */
        {
            for (Int32 StarNeedExp_i = 0; StarNeedExp_i < 6; StarNeedExp_i++)
            {
                ret = srcBuf.readUInt32(ref this.StarNeedExp[StarNeedExp_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetUpgradeExp.CURRVERSION < cutVer)
        {
            cutVer = PetUpgradeExp.CURRVERSION;
        }

        /* check cutversion */
        if (PetUpgradeExp.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.StarNeedExp */
        {
            for (Int32 StarNeedExp_i = 0; StarNeedExp_i < 6; StarNeedExp_i++)
            {
                ret = srcBuf.readUInt32(ref this.StarNeedExp[StarNeedExp_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Level */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Level]", "0x{0:x2}", this.Level);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.StarNeedExp */
        ret = TdrBufUtil.printArray(ref destBuf, indent, separator, "[StarNeedExp]", 6);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }
        for (Int32 StarNeedExp_i = 0; StarNeedExp_i < 6; StarNeedExp_i++)
        {
            ret = destBuf.sprintf("{0:d}", this.StarNeedExp[StarNeedExp_i]);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        ret = destBuf.sprintf("{0}",separator);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* ¿ìËÙÉý¼¶¾­Ñé */
public class PetQuickUpgrade : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 LineNo;
    public UInt32 Cost;
    public float Factor;
    public byte Number;
    public UInt32 Proc1;
    public UInt32 Proc2;
    public UInt32 Proc3;
    public UInt32 Proc4;
    public UInt32 Proc5;

    /* construct methods */
    public PetQuickUpgrade()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetQuickUpgrade.CURRVERSION < cutVer)
        {
            cutVer = PetQuickUpgrade.CURRVERSION;
        }

        /* check cutversion */
        if (PetQuickUpgrade.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.LineNo */
        {
            ret = destBuf.writeUInt32(this.LineNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Cost */
        {
            ret = destBuf.writeUInt32(this.Cost);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Factor */
        {
            ret = destBuf.writeFloat(this.Factor);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Number */
        {
            ret = destBuf.writeUInt8(this.Number);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Proc1 */
        {
            ret = destBuf.writeUInt32(this.Proc1);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Proc2 */
        {
            ret = destBuf.writeUInt32(this.Proc2);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Proc3 */
        {
            ret = destBuf.writeUInt32(this.Proc3);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Proc4 */
        {
            ret = destBuf.writeUInt32(this.Proc4);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Proc5 */
        {
            ret = destBuf.writeUInt32(this.Proc5);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetQuickUpgrade.CURRVERSION < cutVer)
        {
            cutVer = PetQuickUpgrade.CURRVERSION;
        }

        /* check cutversion */
        if (PetQuickUpgrade.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.LineNo */
        {
            ret = srcBuf.readUInt32(ref this.LineNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Cost */
        {
            ret = srcBuf.readUInt32(ref this.Cost);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Factor */
        {
            ret = srcBuf.readFloat(ref this.Factor);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Number */
        {
            ret = srcBuf.readUInt8(ref this.Number);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Proc1 */
        {
            ret = srcBuf.readUInt32(ref this.Proc1);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Proc2 */
        {
            ret = srcBuf.readUInt32(ref this.Proc2);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Proc3 */
        {
            ret = srcBuf.readUInt32(ref this.Proc3);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Proc4 */
        {
            ret = srcBuf.readUInt32(ref this.Proc4);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Proc5 */
        {
            ret = srcBuf.readUInt32(ref this.Proc5);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetQuickUpgrade.CURRVERSION < cutVer)
        {
            cutVer = PetQuickUpgrade.CURRVERSION;
        }

        /* check cutversion */
        if (PetQuickUpgrade.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.LineNo */
        {
            ret = srcBuf.readUInt32(ref this.LineNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Cost */
        {
            ret = srcBuf.readUInt32(ref this.Cost);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Factor */
        {
            ret = srcBuf.readFloat(ref this.Factor);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Number */
        {
            ret = srcBuf.readUInt8(ref this.Number);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Proc1 */
        {
            ret = srcBuf.readUInt32(ref this.Proc1);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Proc2 */
        {
            ret = srcBuf.readUInt32(ref this.Proc2);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Proc3 */
        {
            ret = srcBuf.readUInt32(ref this.Proc3);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Proc4 */
        {
            ret = srcBuf.readUInt32(ref this.Proc4);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Proc5 */
        {
            ret = srcBuf.readUInt32(ref this.Proc5);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.LineNo */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LineNo]", "{0:d}", this.LineNo);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Cost */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Cost]", "{0:d}", this.Cost);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Factor */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Factor]", "{0:g}", this.Factor);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Number */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Number]", "0x{0:x2}", this.Number);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Proc1 */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Proc1]", "{0:d}", this.Proc1);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Proc2 */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Proc2]", "{0:d}", this.Proc2);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Proc3 */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Proc3]", "{0:d}", this.Proc3);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Proc4 */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Proc4]", "{0:d}", this.Proc4);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Proc5 */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Proc5]", "{0:d}", this.Proc5);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* Ç¿»¯¸ÅÂÊ */
public class StrengthenProb : tsf4g_csharp_interface
{
    /* public members */
    public byte Star;
    public byte Level;
    public UInt32 NeedGolds;
    public UInt16[] Prob;
    public UInt16[] FaileAddition;

    /* construct methods */
    public StrengthenProb()
    {
        Prob = new UInt16[6];
        FaileAddition = new UInt16[6];
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || StrengthenProb.CURRVERSION < cutVer)
        {
            cutVer = StrengthenProb.CURRVERSION;
        }

        /* check cutversion */
        if (StrengthenProb.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Star */
        {
            ret = destBuf.writeUInt8(this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Level */
        {
            ret = destBuf.writeUInt8(this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.NeedGolds */
        {
            ret = destBuf.writeUInt32(this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Prob */
        {
            for (Int32 Prob_i = 0; Prob_i < 6; Prob_i++)
            {
                ret = destBuf.writeUInt16(this.Prob[Prob_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* pack member: this.FaileAddition */
        {
            for (Int32 FaileAddition_i = 0; FaileAddition_i < 6; FaileAddition_i++)
            {
                ret = destBuf.writeUInt16(this.FaileAddition[FaileAddition_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || StrengthenProb.CURRVERSION < cutVer)
        {
            cutVer = StrengthenProb.CURRVERSION;
        }

        /* check cutversion */
        if (StrengthenProb.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.NeedGolds */
        {
            ret = srcBuf.readUInt32(ref this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Prob */
        {
            for (Int32 Prob_i = 0; Prob_i < 6; Prob_i++)
            {
                ret = srcBuf.readUInt16(ref this.Prob[Prob_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* unpack member: this.FaileAddition */
        {
            for (Int32 FaileAddition_i = 0; FaileAddition_i < 6; FaileAddition_i++)
            {
                ret = srcBuf.readUInt16(ref this.FaileAddition[FaileAddition_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || StrengthenProb.CURRVERSION < cutVer)
        {
            cutVer = StrengthenProb.CURRVERSION;
        }

        /* check cutversion */
        if (StrengthenProb.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.NeedGolds */
        {
            ret = srcBuf.readUInt32(ref this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Prob */
        {
            for (Int32 Prob_i = 0; Prob_i < 6; Prob_i++)
            {
                ret = srcBuf.readUInt16(ref this.Prob[Prob_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        /* load member: this.FaileAddition */
        {
            for (Int32 FaileAddition_i = 0; FaileAddition_i < 6; FaileAddition_i++)
            {
                ret = srcBuf.readUInt16(ref this.FaileAddition[FaileAddition_i]);
                if (TdrError.ErrorType.TDR_NO_ERROR != ret)
                {
                    return ret;
                }
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Star */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Star]", "0x{0:x2}", this.Star);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Level */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Level]", "0x{0:x2}", this.Level);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.NeedGolds */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[NeedGolds]", "{0:d}", this.NeedGolds);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Prob */
        ret = TdrBufUtil.printArray(ref destBuf, indent, separator, "[Prob]", 6);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }
        for (Int32 Prob_i = 0; Prob_i < 6; Prob_i++)
        {
            ret = destBuf.sprintf("{0:d}", this.Prob[Prob_i]);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        ret = destBuf.sprintf("{0}",separator);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.FaileAddition */
        ret = TdrBufUtil.printArray(ref destBuf, indent, separator, "[FaileAddition]", 6);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }
        for (Int32 FaileAddition_i = 0; FaileAddition_i < 6; FaileAddition_i++)
        {
            ret = destBuf.sprintf("{0:d}", this.FaileAddition[FaileAddition_i]);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        ret = destBuf.sprintf("{0}",separator);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* Ç¿»¯ÊýÖµ */
public class StrengthenNumeric : tsf4g_csharp_interface
{
    /* public members */
    public byte Star;
    public byte Level;
    public UInt32 Attack;
    public UInt32 Defense;
    public UInt32 Hp;

    /* construct methods */
    public StrengthenNumeric()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || StrengthenNumeric.CURRVERSION < cutVer)
        {
            cutVer = StrengthenNumeric.CURRVERSION;
        }

        /* check cutversion */
        if (StrengthenNumeric.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Star */
        {
            ret = destBuf.writeUInt8(this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Level */
        {
            ret = destBuf.writeUInt8(this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Attack */
        {
            ret = destBuf.writeUInt32(this.Attack);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Defense */
        {
            ret = destBuf.writeUInt32(this.Defense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Hp */
        {
            ret = destBuf.writeUInt32(this.Hp);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || StrengthenNumeric.CURRVERSION < cutVer)
        {
            cutVer = StrengthenNumeric.CURRVERSION;
        }

        /* check cutversion */
        if (StrengthenNumeric.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Attack */
        {
            ret = srcBuf.readUInt32(ref this.Attack);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Defense */
        {
            ret = srcBuf.readUInt32(ref this.Defense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Hp */
        {
            ret = srcBuf.readUInt32(ref this.Hp);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || StrengthenNumeric.CURRVERSION < cutVer)
        {
            cutVer = StrengthenNumeric.CURRVERSION;
        }

        /* check cutversion */
        if (StrengthenNumeric.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Level */
        {
            ret = srcBuf.readUInt8(ref this.Level);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Attack */
        {
            ret = srcBuf.readUInt32(ref this.Attack);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Defense */
        {
            ret = srcBuf.readUInt32(ref this.Defense);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Hp */
        {
            ret = srcBuf.readUInt32(ref this.Hp);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Star */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Star]", "0x{0:x2}", this.Star);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Level */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Level]", "0x{0:x2}", this.Level);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Attack */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Attack]", "{0:d}", this.Attack);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Defense */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Defense]", "{0:d}", this.Defense);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Hp */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Hp]", "{0:d}", this.Hp);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* ºÏ³É²ÄÁÏ */
public class CompositeMaterial : tsf4g_csharp_interface
{
    /* public members */
    public byte Star;
    public byte Nums;
    public UInt32 NeedGolds;
    public UInt32 GiftID;
    public UInt32 Score;

    /* construct methods */
    public CompositeMaterial()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || CompositeMaterial.CURRVERSION < cutVer)
        {
            cutVer = CompositeMaterial.CURRVERSION;
        }

        /* check cutversion */
        if (CompositeMaterial.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.Star */
        {
            ret = destBuf.writeUInt8(this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Nums */
        {
            ret = destBuf.writeUInt8(this.Nums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.NeedGolds */
        {
            ret = destBuf.writeUInt32(this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftID */
        {
            ret = destBuf.writeUInt32(this.GiftID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Score */
        {
            ret = destBuf.writeUInt32(this.Score);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || CompositeMaterial.CURRVERSION < cutVer)
        {
            cutVer = CompositeMaterial.CURRVERSION;
        }

        /* check cutversion */
        if (CompositeMaterial.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Nums */
        {
            ret = srcBuf.readUInt8(ref this.Nums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.NeedGolds */
        {
            ret = srcBuf.readUInt32(ref this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftID */
        {
            ret = srcBuf.readUInt32(ref this.GiftID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Score */
        {
            ret = srcBuf.readUInt32(ref this.Score);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || CompositeMaterial.CURRVERSION < cutVer)
        {
            cutVer = CompositeMaterial.CURRVERSION;
        }

        /* check cutversion */
        if (CompositeMaterial.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.Star */
        {
            ret = srcBuf.readUInt8(ref this.Star);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Nums */
        {
            ret = srcBuf.readUInt8(ref this.Nums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.NeedGolds */
        {
            ret = srcBuf.readUInt32(ref this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftID */
        {
            ret = srcBuf.readUInt32(ref this.GiftID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Score */
        {
            ret = srcBuf.readUInt32(ref this.Score);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.Star */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Star]", "0x{0:x2}", this.Star);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Nums */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Nums]", "0x{0:x2}", this.Nums);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.NeedGolds */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[NeedGolds]", "{0:d}", this.NeedGolds);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftID */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftID]", "{0:d}", this.GiftID);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Score */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Score]", "{0:d}", this.Score);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* ³èÎï°ü¹üÀ©Õ¹ */
public class PetBagExtend : tsf4g_csharp_interface
{
    /* public members */
    public byte CurrentNums;
    public byte ExtendedNums;
    public UInt32 NeedGolds;
    public UInt32 NeedDiamonds;

    /* construct methods */
    public PetBagExtend()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetBagExtend.CURRVERSION < cutVer)
        {
            cutVer = PetBagExtend.CURRVERSION;
        }

        /* check cutversion */
        if (PetBagExtend.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.CurrentNums */
        {
            ret = destBuf.writeUInt8(this.CurrentNums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ExtendedNums */
        {
            ret = destBuf.writeUInt8(this.ExtendedNums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.NeedGolds */
        {
            ret = destBuf.writeUInt32(this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.NeedDiamonds */
        {
            ret = destBuf.writeUInt32(this.NeedDiamonds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetBagExtend.CURRVERSION < cutVer)
        {
            cutVer = PetBagExtend.CURRVERSION;
        }

        /* check cutversion */
        if (PetBagExtend.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.CurrentNums */
        {
            ret = srcBuf.readUInt8(ref this.CurrentNums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ExtendedNums */
        {
            ret = srcBuf.readUInt8(ref this.ExtendedNums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.NeedGolds */
        {
            ret = srcBuf.readUInt32(ref this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.NeedDiamonds */
        {
            ret = srcBuf.readUInt32(ref this.NeedDiamonds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || PetBagExtend.CURRVERSION < cutVer)
        {
            cutVer = PetBagExtend.CURRVERSION;
        }

        /* check cutversion */
        if (PetBagExtend.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.CurrentNums */
        {
            ret = srcBuf.readUInt8(ref this.CurrentNums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ExtendedNums */
        {
            ret = srcBuf.readUInt8(ref this.ExtendedNums);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.NeedGolds */
        {
            ret = srcBuf.readUInt32(ref this.NeedGolds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.NeedDiamonds */
        {
            ret = srcBuf.readUInt32(ref this.NeedDiamonds);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.CurrentNums */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[CurrentNums]", "0x{0:x2}", this.CurrentNums);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ExtendedNums */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ExtendedNums]", "0x{0:x2}", this.ExtendedNums);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.NeedGolds */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[NeedGolds]", "{0:d}", this.NeedGolds);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.NeedDiamonds */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[NeedDiamonds]", "{0:d}", this.NeedDiamonds);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


/* ³èÎïºÏ³ÉÀñ°ü */
public class CompositeGift : tsf4g_csharp_interface
{
    /* public members */
    public UInt32 LineNo;
    public UInt32 GiftID;
    public UInt32 PetNo;
    public Int32 Prob;
    public Int32 ScoreProb;
    public Int32 Score;

    /* construct methods */
    public CompositeGift()
    {
    }

    /* public methods */
    public TdrError.ErrorType construct()
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /*no need to  set defaultvalue */

        return ret;
    }

    public TdrError.ErrorType pack(ref byte[] buffer, int size,ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || (size > buffer.GetLength(0)))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrWriteBuf destBuf = new TdrWriteBuf(ref buffer, size);
        TdrError.ErrorType ret = pack(ref destBuf, cutVer);
        if (ret == TdrError.ErrorType.TDR_NO_ERROR)
        {
            buffer = destBuf.getBeginPtr();

            usedSize = destBuf.getUsedSize();
        }

        return ret;
    }

    public TdrError.ErrorType pack(ref TdrWriteBuf destBuf,  uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || CompositeGift.CURRVERSION < cutVer)
        {
            cutVer = CompositeGift.CURRVERSION;
        }

        /* check cutversion */
        if (CompositeGift.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* pack member: this.LineNo */
        {
            ret = destBuf.writeUInt32(this.LineNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.GiftID */
        {
            ret = destBuf.writeUInt32(this.GiftID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.PetNo */
        {
            ret = destBuf.writeUInt32(this.PetNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Prob */
        {
            ret = destBuf.writeInt32(this.Prob);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.ScoreProb */
        {
            ret = destBuf.writeInt32(this.ScoreProb);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* pack member: this.Score */
        {
            ret = destBuf.writeInt32(this.Score);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType unpack(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = unpack(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType unpack(ref TdrReadBuf srcBuf, uint cutVer)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || CompositeGift.CURRVERSION < cutVer)
        {
            cutVer = CompositeGift.CURRVERSION;
        }

        /* check cutversion */
        if (CompositeGift.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* unpack member: this.LineNo */
        {
            ret = srcBuf.readUInt32(ref this.LineNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.GiftID */
        {
            ret = srcBuf.readUInt32(ref this.GiftID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.PetNo */
        {
            ret = srcBuf.readUInt32(ref this.PetNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Prob */
        {
            ret = srcBuf.readInt32(ref this.Prob);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.ScoreProb */
        {
            ret = srcBuf.readInt32(ref this.ScoreProb);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* unpack member: this.Score */
        {
            ret = srcBuf.readInt32(ref this.Score);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    public TdrError.ErrorType load(ref byte [] buffer, int size, ref int usedSize , uint cutVer)
    {
        if (null == buffer || 0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = load(ref srcBuf, cutVer);

        usedSize = srcBuf.getUsedSize();

        return ret;
    }

    public TdrError.ErrorType load(ref TdrReadBuf srcBuf, uint cutVer)
    {
        srcBuf.disableEndian();
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* adjust cutversion */
        if (0 == cutVer || CompositeGift.CURRVERSION < cutVer)
        {
            cutVer = CompositeGift.CURRVERSION;
        }

        /* check cutversion */
        if (CompositeGift.BASEVERSION > cutVer)
        {
            return TdrError.ErrorType.TDR_ERR_CUTVER_TOO_SMALL;
        }

        /* load member: this.LineNo */
        {
            ret = srcBuf.readUInt32(ref this.LineNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.GiftID */
        {
            ret = srcBuf.readUInt32(ref this.GiftID);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.PetNo */
        {
            ret = srcBuf.readUInt32(ref this.PetNo);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Prob */
        {
            ret = srcBuf.readInt32(ref this.Prob);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.ScoreProb */
        {
            ret = srcBuf.readInt32(ref this.ScoreProb);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        /* load member: this.Score */
        {
            ret = srcBuf.readInt32(ref this.Score);
            if (TdrError.ErrorType.TDR_NO_ERROR != ret)
            {
                return ret;
            }
        }

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref string buffer,int indent , char separator)
    {
        TdrVisualBuf destBuf = new TdrVisualBuf();
        TdrError.ErrorType ret = visualize(ref destBuf, indent, separator);

        buffer = destBuf.getVisualBuf();

        return ret;
    }

    /* set indent = -1 to disable indent , default: separator = '\n' */
    public TdrError.ErrorType visualize(ref TdrVisualBuf destBuf, int indent, char separator)
    {
        TdrError.ErrorType ret = TdrError.ErrorType.TDR_NO_ERROR;

        /* visualize member: this.LineNo */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[LineNo]", "{0:d}", this.LineNo);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.GiftID */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[GiftID]", "{0:d}", this.GiftID);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.PetNo */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[PetNo]", "{0:d}", this.PetNo);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Prob */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Prob]", "{0:d}", this.Prob);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.ScoreProb */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[ScoreProb]", "{0:d}", this.ScoreProb);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        /* visualize member: this.Score */
        ret = TdrBufUtil.printVariable(ref destBuf, indent, separator, "[Score]", "{0:d}", this.Score);
        if (TdrError.ErrorType.TDR_NO_ERROR != ret)
        {
            return ret;
        }

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(byte[] buffer ,int size , ref uint sizeInfo)
    {
        if (0 == buffer.GetLength(0) || size > buffer.GetLength(0))
        {
            return TdrError.ErrorType.TDR_ERR_INVALID_BUFFER_PARAMETER;
        }

        TdrReadBuf srcBuf = new TdrReadBuf(ref buffer, size);
        TdrError.ErrorType ret = getSizeInfo(srcBuf, ref sizeInfo);

        return ret;
    }

    public TdrError.ErrorType getSizeInfo(TdrReadBuf srcBuf, ref uint sizeInfo)
    {
        return TdrError.ErrorType.TDR_ERR_HAVE_NOT_SET_SIZEINFO;
    }

    /*  pstMeta version info */
    public static readonly uint BASEVERSION = 1;
    public static readonly uint CURRVERSION = 1;
    /*  entry version info */
}


}
